openapi: 3.0.3
info:
  description: No description
  title: Nucoro API
  version: 4.175.0
servers:
- url: /
paths:
  /api/schema/:
    get:
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      operationId: api_schema_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - json
          - yaml
          type: string
        style: form
      - explode: true
        in: query
        name: lang
        required: false
        schema:
          enum:
          - de-ch
          - en-ch
          - en-gb
          - es-es
          - fr-ch
          - it-ch
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.oai.openapi:
              schema:
                additionalProperties: {}
                type: object
            application/yaml:
              schema:
                additionalProperties: {}
                type: object
            application/vnd.oai.openapi+json:
              schema:
                additionalProperties: {}
                type: object
            application/json:
              schema:
                additionalProperties: {}
                type: object
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/advice-engines/ets/categories/:
    get:
      operationId: api_v2_advice_engines_ets_categories_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/advice-engines/ets/core-category-groups/:
    get:
      operationId: api_v2_advice_engines_ets_core_category_groups_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCoreCategoryGroupList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/advice-engines/ets/forecast/:
    post:
      description: |-
        The forecast positions and amounts for the time_horizon and  risk_level chosen.
        Taking into account the initial_auto_deposit and the initial_amount jointly with the selected filters.
      operationId: api_v2_advice_engines_ets_forecast_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ETSForecastRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ETSForecastRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ETSForecastRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ETSForecastRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/advice-engines/ets/preset-category-groups/:
    get:
      operationId: api_v2_advice_engines_ets_preset_category_groups_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPresetCategoryGroupList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/advice-engines/model-portfolio/forecast/:
    post:
      description: |-
        The forecast positions and amounts for the time_horizon chosen.
        Taking into account the initial_auto_deposit and the initial_amount jointly with the selected filters.
      operationId: api_v2_advice_engines_model_portfolio_forecast_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelPortfolioForecastRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModelPortfolioForecastRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelPortfolioForecastRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelPortfolioForecastRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/advice-engines/model-portfolio/model-portfolios/:
    get:
      operationId: api_v2_advice_engines_model_portfolio_model_portfolios_list
      parameters:
      - description: Additional ModelPortfolio attributes
        explode: true
        in: query
        name: extra_data
        required: false
        schema:
          additionalProperties: {}
          nullable: true
          type: object
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: risk_higher
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: risk_level
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: risk_lower
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvestorModelPortfolioList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/advice-engines/model-portfolio/model-portfolios/{uuid}/:
    get:
      operationId: api_v2_advice_engines_model_portfolio_model_portfolios_retrieve
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorModelPortfolio'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/assets/:
    get:
      description: |-
        A list of Assets filtered by category codes.
        Default is an empty dict which returns the whole universe.
      operationId: api_v2_assets_list
      parameters:
      - explode: true
        in: query
        name: asset_type
        required: false
        schema:
          enum:
          - ETF
          - MUTUAL_FUND
          - STOCK
          type: string
        style: form
      - explode: true
        in: query
        name: category_code
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: category_type
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: currency
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: isin
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: market
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - ACTIVE
          - DELETED
          - INACTIVE
          type: string
        style: form
      - explode: true
        in: query
        name: ticker
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/assets/{asset_identifier}/:
    get:
      description: |-
        Allows get an asset instance by
        * UUID
        * ISIN
        * ISIN & MARKET_CODE
        * ISIN & MARKET_CODE & CURRENCY_CODE

        Examples:
            * assets/a66633d7-4418-4c85-9582-01c80df531d4/
            * assets/IE00B579F325/
            * assets/IE00B579F325_XETR_GBP/
            * assets/IE00B579F325_XETR/
      operationId: api_v2_assets_retrieve
      parameters:
      - explode: false
        in: path
        name: asset_identifier
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDetail'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/assets/{asset_identifier}/intraday-prices/:
    get:
      description: |-
        Prices (from an Asset) list view endpoints.

        GET: Prices retrieve (rest framework builtin overriding get_object)
      operationId: api_v2_assets_intraday_prices_list
      parameters:
      - explode: false
        in: path
        name: asset_identifier
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: date_after
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: date_before
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: datetime_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: datetime_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIntradayPriceList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/assets/{asset_identifier}/intraday-prices/latest/:
    get:
      description: |-
        Prices (from an Asset) list view endpoints.

        GET: Prices retrieve (rest framework builtin overriding get_object)
      operationId: api_v2_assets_intraday_prices_latest_retrieve
      parameters:
      - explode: false
        in: path
        name: asset_identifier
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntradayPrice'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/assets/{asset_identifier}/performance/:
    get:
      description: |-
        Retrieve asset's yearly performance.

        This View overwrites ListAPIView's 'list' method because it doesn't have
        any hook that allows us to call 'get_asset_price_year_graph after the
        filtering is applied.
      operationId: api_v2_assets_performance_list
      parameters:
      - explode: false
        in: path
        name: asset_identifier
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: date_year_after
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: date_year_before
        required: false
        schema:
          type: number
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetGrowthList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/assets/{asset_identifier}/prices/:
    get:
      description: |-
        Prices (from an Asset) list view endpoints.

        GET: Prices retrieve (rest framework builtin overriding get_object)
      operationId: api_v2_assets_prices_list
      parameters:
      - explode: false
        in: path
        name: asset_identifier
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: date_after
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: date_before
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: datetime_after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: datetime_before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPriceList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/assets/{asset_identifier}/prices/latest/:
    get:
      description: |-
        Prices (from an Asset) list view endpoints.

        GET: Prices retrieve (rest framework builtin overriding get_object)
      operationId: api_v2_assets_prices_latest_retrieve
      parameters:
      - explode: false
        in: path
        name: asset_identifier
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/assets/categories/:
    get:
      description: Retrieve all asset categories
      operationId: api_v2_assets_categories_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetCategoryList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/auth/impersonation_token/:
    post:
      description: |-
        API View that receives an impersonation token and check its validity
        Returns a JSON Web Token that can be used for authenticated (and restricted) requests.
      operationId: Auth impersonation token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpersonationToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImpersonationToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImpersonationToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersionationResponse'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - Auth
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/auth/login/:
    post:
      description: |-
        API View that receives a POST with a user's username and password.

        Returns a JSON Web Token that can be used for authenticated requests.
      operationId: Auth Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONWebToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JSONWebToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JSONWebToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTResponse'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - Auth
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/auth/onboarding_token/:
    post:
      description: |-
        API View that receives a onboarding token and check its validity

        Returns a JSON Web Token that can be used for authenticated requests.
      operationId: Auth Get Onboarding Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OnboardingToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OnboardingToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingResponse'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - Auth
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/auth/password/:
    patch:
      description: Request a password reset
      operationId: User request password reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Auth
      x-contentType: application/json
      x-accepts: application/json
    post:
      description: Set a new password for an user
      operationId: User Set Password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Auth
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Change password for an user
      operationId: User Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Auth
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/auth/token_renewal/:
    post:
      description: |-
        API View that receives a POST with a refresh token as token.

        Returns a refreshed JSON Web Token that can be used for authenticated requests.
      operationId: Auth Resfresh JWT Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTRefreshResponse'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - Auth
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/billing/invoices/:
    get:
      operationId: api_v2_billing_invoices_list
      parameters:
      - explode: true
        in: query
        name: date_from
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: date_to
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - CHARGED
          - PENDING
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/billing/invoices/{uuid}/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_billing_invoices_retrieve
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDetails'
            application/pdf:
              schema:
                $ref: '#/components/schemas/InvoiceDetails'
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDetails'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/broker/orders/:
    get:
      operationId: api_v2_broker_orders_list
      parameters:
      - explode: true
        in: query
        name: advice_external_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: asset
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: completed_after
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: completed_before
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Additional order attributes for the specific portal
        explode: true
        in: query
        name: extra_data
        required: false
        schema:
          additionalProperties: {}
          nullable: true
          type: object
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: portfolio
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    post:
      operationId: api_v2_broker_orders_create
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrder'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/broker/orders/{uuid}/:
    delete:
      description: Cancel or request cancellation to the broker
      operationId: api_v2_broker_orders_destroy
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    get:
      operationId: api_v2_broker_orders_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/clients/:
    get:
      description: List client for a Relationship manager
      operationId: Client List
      parameters:
      - explode: true
        in: query
        name: external_custodian_id
        required: false
        schema:
          type: string
        style: form
      - description: Additional client attributes for the specific portal
        explode: true
        in: query
        name: extra_data
        required: false
        schema:
          additionalProperties: {}
          nullable: true
          type: object
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Ordering
        explode: false
        in: query
        name: ordering
        required: false
        schema:
          items:
            enum:
            - -activated
            - -created
            - -first_name
            - -last_name
            - -risk_level
            - -status
            - activated
            - created
            - first_name
            - last_name
            - risk_level
            - status
            type: string
          type: array
        style: form
      - description: A search term.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - ACTIVE
          - CUSTODIAN_PENDING
          - INACTIVE
          - KYC_PENDING
          - ONBOARDING
          - PENDING
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientDetailList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      x-accepts: application/json
    post:
      description: Create a client
      operationId: Client Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCreate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/activities/:
    get:
      operationId: api_v2_clients_activities_list
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: target
        required: false
        schema:
          items:
            enum:
            - ""
            - cashcorporateaction
            - charge
            - deposit
            - portfolio
            - rebalance
            - sharescorporateaction
            - withdrawal
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedActivityListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/activities/{uuid}/:
    get:
      operationId: api_v2_clients_activities_retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedActivityList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/addresses/:
    get:
      description: List address for a client
      operationId: Client Addresses List
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Address
      x-accepts: application/json
    post:
      description: Create an address for a client
      operationId: Client Address Create
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressCreate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Address
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/addresses/{uuid}/:
    delete:
      description: Delete a client address
      operationId: Client Address Delete
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Address
      x-accepts: application/json
    get:
      description: Retrieve a client address
      operationId: Client Address Retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Address
      x-accepts: application/json
    patch:
      description: Partial Update a client address
      operationId: Client Address Partial Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddressUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddressUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddressUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Address
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Update a client address
      operationId: Client Address Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Address
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/advice-engines/:
    get:
      operationId: api_v2_clients_advice_engines_list
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/advice-engines/{uuid}/:
    get:
      operationId: api_v2_clients_advice_engines_retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/bank-accounts/:
    get:
      description: List Bank Account for a client
      operationId: Client Bank Accounts List
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankAccountListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Bank Account
      x-accepts: application/json
    post:
      description: Create a bank account for a client
      operationId: Client Bank Account Create
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountCreateUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Bank Account
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/bank-accounts/{uuid}/:
    delete:
      description: Delete a client bank account
      operationId: Client Bank Account Delete
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Bank Account
      x-accepts: application/json
    get:
      description: Retrieve a client bank account
      operationId: Client Bank Account Retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Bank Account
      x-accepts: application/json
    patch:
      description: Partial Update a client bank account
      operationId: Client Bank Account Partial Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBankAccountCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBankAccountCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBankAccountCreateUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountCreateUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Bank Account
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Update a client bank account
      operationId: Client Bank Account Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountCreateUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Bank Account
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/billing/fees/:
    get:
      operationId: api_v2_clients_billing_fees_list
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvestorFeeList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
    post:
      operationId: api_v2_clients_billing_fees_create
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvestorFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvestorFee'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorFee'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/billing/fees/{uuid}/:
    delete:
      operationId: api_v2_clients_billing_fees_destroy
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
    get:
      operationId: api_v2_clients_billing_fees_retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorFee'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
    patch:
      operationId: api_v2_clients_billing_fees_partial_update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvestorFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvestorFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvestorFee'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorFee'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: api_v2_clients_billing_fees_update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvestorFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvestorFee'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorFee'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/billing/invoices/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_clients_billing_invoices_list
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceListList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceListList'
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/billing/invoices/{uuid}/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_clients_billing_invoices_retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/InvoiceList'
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/documents/:
    get:
      description: List Document for a client
      operationId: Client Document List
      parameters:
      - explode: true
        in: query
        name: client
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: description
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: doc_type
        required: false
        schema:
          items:
            enum:
            - BANK_DETAILS
            - CONTRACT
            - EMPLOYMENT
            - ID_PERSONAL
            - LEGAL
            - MARITAL_STATUS
            - MEDICAL
            - OTHERS
            - PENSION
            - TRANSFERS
            type: string
          type: array
        style: form
      - description: Additional document attributes for the specific portal
        explode: true
        in: query
        name: extra_data
        required: false
        schema:
          additionalProperties: {}
          nullable: true
          type: object
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Document
      x-accepts: application/json
    post:
      description: Create a document for a client
      operationId: Client Document Create
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Document
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/documents/{uuid}/:
    delete:
      description: Delete a client document
      operationId: Client Document Delete
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Document
      x-accepts: application/json
    get:
      description: Retrieve a client document
      operationId: Client Document Retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Document
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/nationalities/:
    get:
      description: List nationlities for a client
      operationId: Client Nationlities List
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNationalityListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Nationlity
      x-accepts: application/json
    post:
      description: Create nationality for a client
      operationId: Client Nationality Create
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationalityCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NationalityCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NationalityCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityCreate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Nationlity
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/nationalities/{uuid}/:
    delete:
      description: Delete a client nationality
      operationId: Client Nationlity Delete
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Nationlity
      x-accepts: application/json
    get:
      description: Retrieve a client nationality
      operationId: Client Nationlity Retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Nationlity
      x-accepts: application/json
    patch:
      description: Partial Update a client nationality
      operationId: Client Nationlity Partial Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNationalityUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNationalityUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNationalityUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Nationlity
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Update a client nationality
      operationId: Client Nationlity Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationalityUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NationalityUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NationalityUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Nationlity
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/report/statements/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_clients_report_statements_list
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/report/statements/{uuid}/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_clients_report_statements_retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statement'
            application/pdf:
              schema:
                $ref: '#/components/schemas/Statement'
            text/plain:
              schema:
                $ref: '#/components/schemas/Statement'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/report/tax-reports/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_clients_report_tax_reports_list
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/report/tax-reports/{uuid}/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_clients_report_tax_reports_retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxReport'
            application/pdf:
              schema:
                $ref: '#/components/schemas/TaxReport'
            text/plain:
              schema:
                $ref: '#/components/schemas/TaxReport'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/risk-assessments/:
    get:
      description: List Risk Assessment for a client
      operationId: Client Risk Assessment List
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - COMPLETED
            - OUTDATED
            - PENDING
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssessmentList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Risk Assessment
      x-accepts: application/json
    post:
      description: Create a risk assessment for a client
      operationId: Client Risk Assessment Create
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assessment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Assessment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Assessment'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Risk Assessment
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/risk-assessments/{uuid}/:
    delete:
      description: Delete a client risk assessment
      operationId: Client Risk Assessment Delete
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Risk Assessment
      x-accepts: application/json
    get:
      description: Retrieve a client risk assessment
      operationId: Client Risk Assessment Retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Risk Assessment
      x-accepts: application/json
    patch:
      description: Partial Update a client risk assessment
      operationId: Client Risk Assessment Partial Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssessment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssessment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssessment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Risk Assessment
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/tax-informations/:
    get:
      description: List tax information for a client
      operationId: Client Tax Information List
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaxInformationListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Tax Information
      x-accepts: application/json
    post:
      description: Create a tax inforation for a client
      operationId: Client Tax Information Create
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxInformationCreateUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Tax Information
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/tax-informations/{uuid}/:
    delete:
      description: Delete a client tax inforation
      operationId: Client Tax Information Delete
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Tax Information
      x-accepts: application/json
    get:
      description: Retrieve a client tax inforation
      operationId: Client Tax Information Retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxInformationList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Tax Information
      x-accepts: application/json
    patch:
      description: Partial Update a client tax inforation
      operationId: Client Tax Information Partial Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaxInformationCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaxInformationCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaxInformationCreateUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxInformationCreateUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Tax Information
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Update a client tax inforation
      operationId: Client Tax Information Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxInformationCreateUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - Tax Information
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/verifications/{verify_type_code}/:
    get:
      description: List Verification for a client
      operationId: Client Verification List
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: verify_type_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVerificationListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - KYC
      x-accepts: application/json
    post:
      description: Create a verification for a client
      operationId: Client Verification Create
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: verify_type_code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerificationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerificationCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationCreate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - KYC
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/verifications/{verify_type_code}/{uuid}/:
    get:
      description: 'Retrieve a client verification '
      operationId: Client Verification Retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: verify_type_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - KYC
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/verifications/{verify_type_code}/documents/:
    get:
      description: List Verification Document for a client
      operationId: Client Verification Document List
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: verify_type_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVerificationDocumentList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - KYC
      x-accepts: application/json
    post:
      description: Create a verification Document for a client
      operationId: Client Verification Document Create
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: verify_type_code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerificationWithType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerificationWithType'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationWithType'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - KYC
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/verifications/{verify_type_code}/documents/{uuid}/:
    delete:
      description: Delete a client verificatoin document
      operationId: Client Verification Document Delete
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: verify_type_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - KYC
      x-accepts: application/json
    get:
      description: Retrieve a client verification document
      operationId: Client Verification Document Retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: verify_type_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationDocument'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - KYC
      x-accepts: application/json
    patch:
      description: Partial Update a client verification document
      operationId: Client Verification Document Partial Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: verify_type_code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVerificationDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVerificationDocument'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationDocument'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - KYC
      x-contentType: multipart/form-data
      x-accepts: application/json
    put:
      description: Update a client verification document
      operationId: Client Verification Document Update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: verify_type_code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerificationDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerificationDocument'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationDocument'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      - KYC
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/watchlists/:
    get:
      description: |-
        Applies filters without declaring them explicitly.
        How? Creating those filters on the fly.

        # How it works.
        - Declare 'filterable_fields' in the view.
            E.g. filterable_fields = ['status', 'name']
            __all__ is allowed. It applies filters for all model attributes.

        - COMMON_FILTERS: common filters configuration.
            - key: field name. E.g. status.
            - filter_class. filter class for the field.
            - args. Args for the filter_class __init__.  These args are taken from the queryset model
                E.g. 'args': {'choices': 'STATUS_CHOICES'} means Filter(choices=queryset.model.STATUS_CHOICES)


        # How to use it:
        class PortfolioListCreateView(CommonFilterMixin, InvestorAPIViewMixin, ListCreateAPIView):
            filterable_fields = ['status', 'name']

        # Filters priority.
        1- Explicit filter declared in the filterset_class
        2- Filters declared in COMMON_FILTERS
        3- Filterset.FILTER_DEFAULTS
      operationId: api_v2_clients_watchlists_list
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWatchlistList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
    post:
      description: |-
        Applies filters without declaring them explicitly.
        How? Creating those filters on the fly.

        # How it works.
        - Declare 'filterable_fields' in the view.
            E.g. filterable_fields = ['status', 'name']
            __all__ is allowed. It applies filters for all model attributes.

        - COMMON_FILTERS: common filters configuration.
            - key: field name. E.g. status.
            - filter_class. filter class for the field.
            - args. Args for the filter_class __init__.  These args are taken from the queryset model
                E.g. 'args': {'choices': 'STATUS_CHOICES'} means Filter(choices=queryset.model.STATUS_CHOICES)


        # How to use it:
        class PortfolioListCreateView(CommonFilterMixin, InvestorAPIViewMixin, ListCreateAPIView):
            filterable_fields = ['status', 'name']

        # Filters priority.
        1- Explicit filter declared in the filterset_class
        2- Filters declared in COMMON_FILTERS
        3- Filterset.FILTER_DEFAULTS
      operationId: api_v2_clients_watchlists_create
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watchlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Watchlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Watchlist'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{client_uuid}/watchlists/{uuid}/:
    delete:
      description: |-
        Applies filters without declaring them explicitly.
        How? Creating those filters on the fly.

        # How it works.
        - Declare 'filterable_fields' in the view.
            E.g. filterable_fields = ['status', 'name']
            __all__ is allowed. It applies filters for all model attributes.

        - COMMON_FILTERS: common filters configuration.
            - key: field name. E.g. status.
            - filter_class. filter class for the field.
            - args. Args for the filter_class __init__.  These args are taken from the queryset model
                E.g. 'args': {'choices': 'STATUS_CHOICES'} means Filter(choices=queryset.model.STATUS_CHOICES)


        # How to use it:
        class PortfolioListCreateView(CommonFilterMixin, InvestorAPIViewMixin, ListCreateAPIView):
            filterable_fields = ['status', 'name']

        # Filters priority.
        1- Explicit filter declared in the filterset_class
        2- Filters declared in COMMON_FILTERS
        3- Filterset.FILTER_DEFAULTS
      operationId: api_v2_clients_watchlists_destroy
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
    get:
      description: |-
        Applies filters without declaring them explicitly.
        How? Creating those filters on the fly.

        # How it works.
        - Declare 'filterable_fields' in the view.
            E.g. filterable_fields = ['status', 'name']
            __all__ is allowed. It applies filters for all model attributes.

        - COMMON_FILTERS: common filters configuration.
            - key: field name. E.g. status.
            - filter_class. filter class for the field.
            - args. Args for the filter_class __init__.  These args are taken from the queryset model
                E.g. 'args': {'choices': 'STATUS_CHOICES'} means Filter(choices=queryset.model.STATUS_CHOICES)


        # How to use it:
        class PortfolioListCreateView(CommonFilterMixin, InvestorAPIViewMixin, ListCreateAPIView):
            filterable_fields = ['status', 'name']

        # Filters priority.
        1- Explicit filter declared in the filterset_class
        2- Filters declared in COMMON_FILTERS
        3- Filterset.FILTER_DEFAULTS
      operationId: api_v2_clients_watchlists_retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
    put:
      description: |-
        Applies filters without declaring them explicitly.
        How? Creating those filters on the fly.

        # How it works.
        - Declare 'filterable_fields' in the view.
            E.g. filterable_fields = ['status', 'name']
            __all__ is allowed. It applies filters for all model attributes.

        - COMMON_FILTERS: common filters configuration.
            - key: field name. E.g. status.
            - filter_class. filter class for the field.
            - args. Args for the filter_class __init__.  These args are taken from the queryset model
                E.g. 'args': {'choices': 'STATUS_CHOICES'} means Filter(choices=queryset.model.STATUS_CHOICES)


        # How to use it:
        class PortfolioListCreateView(CommonFilterMixin, InvestorAPIViewMixin, ListCreateAPIView):
            filterable_fields = ['status', 'name']

        # Filters priority.
        1- Explicit filter declared in the filterset_class
        2- Filters declared in COMMON_FILTERS
        3- Filterset.FILTER_DEFAULTS
      operationId: api_v2_clients_watchlists_update
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watchlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Watchlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Watchlist'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{uuid}/:
    get:
      description: Retrieve a client
      operationId: Client Retrieve
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDetail'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      x-accepts: application/json
    patch:
      description: Partial Update a client
      operationId: Client Partial Update
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApplicationClientUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedApplicationClientUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApplicationClientUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationClientUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Update a client
      operationId: Client Update
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationClientUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationClientUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationClientUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationClientUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{uuid}/onboarding/complete/:
    post:
      description: Complete onboarding for a client
      operationId: Client Complete onboarding
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientDetail'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDetail'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/{uuid}/performance/twrr/:
    get:
      description: Calculate TWRR Performance for client
      operationId: Client TWRR Performance
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPerformance'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - Client
      x-accepts: application/json
  /api/v2/clients/{uuid}/verify/email/:
    put:
      description: Verify e-mail account with the given email token.
      operationId: api_v2_clients_verify_email_update
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerifyView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailVerifyView'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailVerifyView'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerifyView'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/me/verify/email/:
    post:
      description: Request e-mail account verification notification.
      operationId: api_v2_clients_me_verify_email_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailVerifyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerifyRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/clients/national_documents/:
    get:
      operationId: api_v2_clients_national_documents_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNationalDocumentList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/clients/referral/{referral_code}/:
    get:
      description: Retrieves the currently logged in client referral code
      operationId: api_v2_clients_referral_retrieve
      parameters:
      - explode: false
        in: path
        name: referral_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientReferral'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/feeds/access-logs/:
    get:
      description: Retrieves the latest access to the client's account
      operationId: api_v2_feeds_access_logs_list
      parameters:
      - explode: true
        in: query
        name: browser
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: browser_version
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: channel
        required: false
        schema:
          enum:
          - ANDROID
          - BROWSER
          - IOS
          type: string
        style: form
      - explode: true
        in: query
        name: city
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: country
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: device_brand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: device_model
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ip_address
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: os
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: os_version
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user_agent
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccessLogList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/feeds/activities/:
    get:
      operationId: api_v2_feeds_activities_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: target
        required: false
        schema:
          items:
            enum:
            - ""
            - cashcorporateaction
            - charge
            - deposit
            - portfolio
            - rebalance
            - sharescorporateaction
            - withdrawal
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedActivityListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/goals/:
    get:
      operationId: api_v2_goals_list
      parameters:
      - explode: false
        in: path
        name: goal_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoalList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    post:
      operationId: api_v2_goals_create
      parameters:
      - explode: false
        in: path
        name: goal_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Goal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Goal'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/goals/{uuid}/:
    delete:
      operationId: api_v2_goals_destroy
      parameters:
      - explode: false
        in: path
        name: goal_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    get:
      operationId: api_v2_goals_retrieve
      parameters:
      - explode: false
        in: path
        name: goal_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    patch:
      operationId: api_v2_goals_partial_update
      parameters:
      - explode: false
        in: path
        name: goal_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoal'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/goals/decumulation/:
    post:
      description: Return a Goal Forecast Decumulation
      operationId: api_v2_goals_decumulation_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForecastDecumulationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForecastDecumulationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForecastDecumulationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastDecumulationRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/goals/forecast/:
    post:
      description: Return a Goal Forecast
      operationId: api_v2_goals_forecast_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForecastRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForecastRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForecastRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/inbox/conversations/:
    get:
      description: |-
        get:
        List all conversations with last_message of a user

        post:
        Create new conversation with N messages (without attachments)
      operationId: api_v2_inbox_conversations_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConversationListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    post:
      description: |-
        get:
        List all conversations with last_message of a user

        post:
        Create new conversation with N messages (without attachments)
      operationId: api_v2_inbox_conversations_create
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationCreate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v2/inbox/conversations/{conversation}/:
    get:
      description: List all messages from a conversation uuid
      operationId: api_v2_inbox_conversation_detail_messages_list
      parameters:
      - explode: false
        in: path
        name: conversation
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/inbox/conversations/{conversation}/messages/:
    post:
      description: View for creating message on a specific conversation
      operationId: api_v2_inbox_conversations_messages_create
      parameters:
      - explode: false
        in: path
        name: conversation
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v2/inbox/conversations/{conversation}/messages/{message}/attachments/{uuid}/:
    get:
      description: View to access to an attachment
      operationId: api_v2_inbox_conversations_messages_attachments_retrieve
      parameters:
      - explode: false
        in: path
        name: conversation
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - explode: false
        in: path
        name: message
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            application/pdf:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/plain:
              schema:
                $ref: '#/components/schemas/Attachment'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/mobile/{platform}/version/:
    get:
      description: Returns the number of the last required APP Version for a platform.
      operationId: api_v2_mobile_version_retrieve
      parameters:
      - explode: false
        in: path
        name: platform
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinimumAppVersion'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/platform/settings/:
    get:
      operationId: api_v2_platform_settings_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NucoroSetting'
                type: array
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portal/countries/:
    get:
      description: Retrieves the list of countries
      operationId: api_v2_portal_countries_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portal/settings/:
    get:
      operationId: api_v2_portal_settings_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalSettingValueList'
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - basicAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portal/tos/:
    get:
      description: List all ToS for the current Portal
      operationId: api_v2_portal_tos_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTosList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/portal/tos/{uuid}/:
    get:
      description: Retrieves a specific ToS
      operationId: api_v2_portal_tos_retrieve
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tos'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/portal/tos/current/:
    get:
      description: Retrieves the current ToS for the Portal
      operationId: api_v2_portal_tos_current_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tos'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/:
    get:
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      operationId: api_v2_portfolios_list
      parameters:
      - explode: true
        in: query
        name: client
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: external_custodian_id
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Ordering
        explode: false
        in: query
        name: ordering
        required: false
        schema:
          items:
            enum:
            - -name
            - -risk_level
            - name
            - risk_level
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: portfolio_type
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - ACTIVE
            - DELETED
            - DELETING
            - PENDING
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: valuation_date_after
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: valuation_date_before
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortfolioListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    post:
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      operationId: api_v2_portfolios_create
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PortfolioCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PortfolioCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioCreate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/activities/:
    get:
      operationId: api_v2_portfolios_activities_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: target
        required: false
        schema:
          items:
            enum:
            - ""
            - cashcorporateaction
            - charge
            - deposit
            - portfolio
            - rebalance
            - sharescorporateaction
            - withdrawal
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedActivityListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/activities/{uuid}/:
    get:
      operationId: api_v2_portfolios_activities_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedActivityList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/allocations/:
    get:
      operationId: api_v2_portfolios_allocations_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: valuation_date_after
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: valuation_date_before
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAllocationListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/allocations/{id}/:
    get:
      operationId: api_v2_portfolios_allocations_retrieve
      parameters:
      - description: A unique integer value identifying this allocation.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/allocations/end-day/:
    get:
      operationId: api_v2_portfolios_allocations_end_day
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/allocations/end-day/{allocation_date}/:
    get:
      operationId: api_v2_portfolios_allocations_end_day_by_date_retrieve
      parameters:
      - explode: false
        in: path
        name: allocation_date
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationDetail'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/allocations/end-day/latest/:
    get:
      operationId: api_v2_portfolios_allocations_end_day_latest_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationDetail'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/allocations/intraday/latest/:
    get:
      operationId: api_v2_portfolios_allocations_intraday_latest_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentAllocation'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/deposits/:
    get:
      operationId: api_v2_portfolios_deposits_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - CANCELLED
            - COMPLETED
            - ERROR
            - PENDING
            - PROCESSING
            - REQUESTED
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepositListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    post:
      operationId: api_v2_portfolios_deposits_create
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepositCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepositCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositCreate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/deposits/{uuid}/:
    delete:
      operationId: api_v2_portfolios_deposits_destroy
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    get:
      operationId: api_v2_portfolios_deposits_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetail'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/orders/:
    get:
      operationId: api_v2_portfolios_orders_list
      parameters:
      - explode: true
        in: query
        name: advice_external_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: asset
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: completed_after
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: completed_before
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Additional order attributes for the specific portal
        explode: true
        in: query
        name: extra_data
        required: false
        schema:
          additionalProperties: {}
          nullable: true
          type: object
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: portfolio
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    post:
      operationId: api_v2_portfolios_orders_create
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrder'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/orders/{uuid}/:
    delete:
      description: Cancel or request cancellation to the broker
      operationId: api_v2_portfolios_orders_destroy
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    get:
      operationId: api_v2_portfolios_orders_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/performance/mwrr/:
    get:
      operationId: api_v2_portfolios_performance_mwrr_list
      parameters:
      - explode: true
        in: query
        name: date_after
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: date_before
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortfolioPerformanceList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/performance/positions/:
    get:
      operationId: api_v2_portfolios_performance_positions_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortfolioPerformancePositionsList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/performance/twrr/:
    get:
      operationId: api_v2_portfolios_performance_twrr_list
      parameters:
      - explode: true
        in: query
        name: date_after
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: date_before
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortfolioPerformanceList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/rebalances/:
    get:
      operationId: api_v2_portfolios_rebalances_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRebalanceList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/rebalances/{uuid}/:
    get:
      operationId: api_v2_portfolios_rebalances_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rebalance'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/withdrawals/:
    get:
      operationId: api_v2_portfolios_withdrawals_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - CANCELLED
            - COMPLETED
            - DRAFT
            - ERROR
            - PENDING
            - POSITIONS_SOLD
            - PROCESSING
            - REQUESTED
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvestorWithdrawalListList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    post:
      operationId: api_v2_portfolios_withdrawals_create
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorWithdrawalCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvestorWithdrawalCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvestorWithdrawalCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorWithdrawalCreate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/portfolios/{portfolio_uuid}/withdrawals/{uuid}/:
    delete:
      operationId: api_v2_portfolios_withdrawals_destroy
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    get:
      operationId: api_v2_portfolios_withdrawals_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalDetail'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{portfolio}/allocations/history/:
    get:
      description: |-
        Allocations History for a given portfolio

        It accepts two optional parameters, `date_to` and `date_from` to limit
        the daily allocations to a certain data range. If they are not given, all the
        allocations are returned.

        ---

        ## Parameters:

         * **name**: `date_from`
         * **description**: The initial date.
         * **parameter type**: query param

         * **name**: `date_from`
         * **description**: The final date.
         * **parameter type**: query param
      operationId: api_v2_portfolios_allocations_history_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/{uuid}/:
    delete:
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      operationId: api_v2_portfolios_destroy
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    get:
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      operationId: api_v2_portfolios_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDetail'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
    patch:
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      operationId: api_v2_portfolios_partial_update
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPortfolioUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPortfolioUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPortfolioUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      operationId: api_v2_portfolios_update
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PortfolioUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PortfolioUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/portfolios/{uuid}/restrictions/:
    get:
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      operationId: api_v2_portfolios_restrictions_retrieve
      parameters:
      - explode: false
        in: path
        name: portfolio_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioTypeRestrictions'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/portfoliotypes/:
    get:
      operationId: api_v2_portfolios_portfoliotypes_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortfolioTypeList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/portfolios/portfoliotypes/{code}/restrictions/:
    get:
      operationId: api_v2_portfolios_portfoliotypes_restrictions_list
      parameters:
      - explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasePortfolioTypeRestrictionsList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/allocations-by-asset/:
    get:
      operationId: api_v2_relationship_manager_analytics_allocations_by_asset_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationByAsset'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/asset-concentration-risk/:
    get:
      operationId: api_v2_relationship_manager_analytics_asset_concentration_risk_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetConcentrationRisk'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/aum/:
    get:
      operationId: api_v2_relationship_manager_analytics_aum_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/aum-evolution/:
    get:
      operationId: api_v2_relationship_manager_analytics_aum_evolution_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AUMEvoluation'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/aum-portfolio-risk/:
    get:
      operationId: api_v2_relationship_manager_analytics_aum_portfolio_risk_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AUMPortfolioRisk'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/client-by-risk/:
    get:
      operationId: api_v2_relationship_manager_analytics_client_by_risk_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/client-by-status/:
    get:
      operationId: api_v2_relationship_manager_analytics_client_by_status_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/client-ranking/:
    get:
      operationId: api_v2_relationship_manager_analytics_client_ranking_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientRanking'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/inflows-outflows/:
    get:
      operationId: api_v2_relationship_manager_analytics_inflows_outflows_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/portfolio-risk-performance/:
    get:
      operationId: api_v2_relationship_manager_analytics_portfolio_risk_performance_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/total-active-clients/:
    get:
      operationId: api_v2_relationship_manager_analytics_total_active_clients_retrieve
      parameters:
      - explode: false
        in: path
        name: relationship_manager_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      - Analytics
      x-accepts: application/json
  /api/v2/relationship-manager/{uuid}/:
    get:
      operationId: api_v2_relationship_manager_retrieve
      parameters:
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      x-accepts: application/json
  /api/v2/relationship-manager/me/:
    get:
      operationId: api_v2_relationship_manager_me_retrieve
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      - RelationShipManager
      x-accepts: application/json
  /api/v2/report/statements/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_report_statements_list
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/report/statements/{uuid}/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_report_statements_retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statement'
            application/pdf:
              schema:
                $ref: '#/components/schemas/Statement'
            text/plain:
              schema:
                $ref: '#/components/schemas/Statement'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/report/tax-report/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_report_tax_report_list
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/report/tax-report/{uuid}/:
    get:
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      operationId: api_v2_report_tax_report_retrieve
      parameters:
      - explode: false
        in: path
        name: client_uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - base64
          - json
          - pdf
          type: string
        style: form
      - explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxReport'
            application/pdf:
              schema:
                $ref: '#/components/schemas/TaxReport'
            text/plain:
              schema:
                $ref: '#/components/schemas/TaxReport'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - Application
      x-accepts: application/json
  /api/v2/risk/questions/:
    get:
      operationId: api_v2_risk_questions_list
      parameters:
      - description: Number of results to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The initial index from which to return the results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionList'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/verifications/verifier_webhook/{verifier}/{action}/:
    post:
      operationId: api_v2_verifications_verifier_webhook_create
      parameters:
      - explode: false
        in: path
        name: action
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: verifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: No response body
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      tags:
      - api
      x-accepts: application/json
  /api/v2/websocket/authentication/ticket/:
    post:
      operationId: api_v2_websocket_authentication_ticket_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/websocket/authorize/:
    post:
      operationId: api_v2_websocket_authorize_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/websocket/authorize/asset/:
    post:
      operationId: api_v2_websocket_authorize_asset_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/websocket/authorize/portfolio/:
    post:
      operationId: api_v2_websocket_authorize_portfolio_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/websocket/on_subscribe/:
    post:
      operationId: api_v2_websocket_on_subscribe_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscribe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscribe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscribe'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscribe'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
  /api/v2/websocket/on_unsubscribe/:
    post:
      operationId: api_v2_websocket_on_unsubscribe_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unsubscribe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Unsubscribe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Unsubscribe'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unsubscribe'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      tags:
      - api
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    AUMEvoluation:
      example:
        balance: 80082819046.10115
        valuation_date: 2000-01-23
      properties:
        valuation_date:
          format: date
          type: string
        balance:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
      required:
      - balance
      - valuation_date
      type: object
    AUMPortfolioRisk:
      example:
        risk_level: 0
        balance: 602745618307.0403
      properties:
        risk_level:
          type: integer
        balance:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
      required:
      - balance
      - risk_level
      type: object
    AccessLog:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        country: country
        device_model: device_model
        os: os
        city: city
        created: 2000-01-23T04:56:07.000+00:00
        os_version: os_version
        channel: ""
        ip_address: ip_address
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        device_brand: device_brand
        browser: browser
        browser_version: browser_version
        user_agent: user_agent
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        user_agent:
          readOnly: true
          type: string
        ip_address:
          readOnly: true
          type: string
        browser:
          readOnly: true
          type: string
        browser_version:
          readOnly: true
          type: string
        device_brand:
          readOnly: true
          type: string
        device_model:
          readOnly: true
          type: string
        os:
          readOnly: true
          type: string
        os_version:
          readOnly: true
          type: string
        channel:
          allOf:
          - $ref: '#/components/schemas/ChannelEnum'
          readOnly: true
        country:
          type: string
        city:
          readOnly: true
          type: string
      required:
      - browser
      - browser_version
      - channel
      - city
      - country
      - created
      - device_brand
      - device_model
      - ip_address
      - os
      - os_version
      - user_agent
      - uuid
      type: object
    ActivityTypeEnum:
      enum:
      - CREATED
      - UPDATED
      - DELETED
      type: string
    AddressCreate:
      example:
        country: country
        postcode: postcode
        locality: locality
        region: region
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        line2: line2
        line1: line1
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        line1:
          type: string
        line2:
          nullable: true
          type: string
        postcode:
          type: string
        locality:
          type: string
        country:
          type: string
        region:
          nullable: true
          type: string
      required:
      - country
      - line1
      - locality
      - postcode
      - uuid
      type: object
    AddressList:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        country: country
        postcode: postcode
        locality: locality
        region: region
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        line2: line2
        line1: line1
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        line1:
          readOnly: true
          type: string
        line2:
          readOnly: true
          type: string
        postcode:
          readOnly: true
          type: string
        locality:
          readOnly: true
          type: string
        country:
          type: string
        region:
          readOnly: true
          type: string
      required:
      - country
      - line1
      - line2
      - locality
      - postcode
      - region
      - uuid
      type: object
    AddressUpdate:
      example:
        country: country
        postcode: postcode
        locality: locality
        region: region
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        line2: line2
        line1: line1
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        line1:
          type: string
        line2:
          nullable: true
          type: string
        postcode:
          type: string
        locality:
          type: string
        country:
          type: string
        region:
          nullable: true
          type: string
      required:
      - country
      - line1
      - locality
      - postcode
      - uuid
      type: object
    AllocationByAsset:
      example:
        display_allocation_chart: true
        display_allocation_chart_configuration_error: true
        category_code: category_code
        allocations_by_code:
        - code: code
          balance: 80082819046.10115
          name: name
          weight: 602745618307.0403
        - code: code
          balance: 80082819046.10115
          name: name
          weight: 602745618307.0403
      properties:
        category_code:
          type: string
        display_allocation_chart:
          type: boolean
        display_allocation_chart_configuration_error:
          type: boolean
        allocations_by_code:
          items:
            $ref: '#/components/schemas/AllocationByCode'
          type: array
      required:
      - allocations_by_code
      - category_code
      - display_allocation_chart
      - display_allocation_chart_configuration_error
      type: object
    AllocationByCode:
      example:
        code: code
        balance: 80082819046.10115
        name: name
        weight: 602745618307.0403
      properties:
        code:
          type: string
        name:
          type: string
        balance:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        weight:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
      required:
      - balance
      - code
      - name
      - weight
      type: object
    AllocationDetail:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        earnings: -706837403899.4109
        performance: 2.3021358869347655
        balance: -839834361907.7977
        valuation_date: 2000-01-23
        trade_total: 127475331326.66577
        positions:
        - positions
        - positions
        invested: 205491236614.08057
        cash_active: 192426783336.63647
      properties:
        valuation_date:
          format: date
          type: string
        balance:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
          type: number
        invested:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
          type: number
        earnings:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
          type: number
        cash_active:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        trade_total:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
          type: number
        performance:
          format: double
          readOnly: true
          type: number
        positions:
          items:
            type: string
          readOnly: true
          type: array
      required:
      - cash_active
      - performance
      - positions
      - valuation_date
      type: object
    AllocationList:
      example:
        earnings: -706837403899.4109
        performance: 2.3021358869347655
        balance: -839834361907.7977
        valuation_date: 2000-01-23
        trade_total: 127475331326.66577
        invested: 205491236614.08057
        cash_active: 192426783336.63647
      properties:
        valuation_date:
          format: date
          readOnly: true
          type: string
        balance:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        invested:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        earnings:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        cash_active:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        trade_total:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        performance:
          format: double
          readOnly: true
          type: number
      required:
      - balance
      - cash_active
      - earnings
      - invested
      - performance
      - trade_total
      - valuation_date
      type: object
    AppVersion:
      properties:
        number:
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - number
      type: object
    ApplicationClientUpdate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        birthdate: 2000-01-23
        gender: ""
        country_birth:
          code: code
          long_name_it_ch: long_name_it_ch
          name_fr_ch: name_fr_ch
          long_name_fr_ch: long_name_fr_ch
          name_it_ch: name_it_ch
          name_en_gb: name_en_gb
          long_name_de_ch: long_name_de_ch
          long_name: long_name
          name_de_ch: name_de_ch
          long_name_en_gb: long_name_en_gb
          eea_country: true
          name_en_ch: name_en_ch
          name: name
          name_es_es: name_es_es
          id: 0
          long_name_en_ch: long_name_en_ch
          long_name_es_es: long_name_es_es
          iso3: iso3
        email_verified_last_request: 2000-01-23T04:56:07.000+00:00
        utm_medium: utm_medium
        language: language
        title: ""
        data_consent: true
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tos_consent: true
        password: password
        email_verify_last_request: 2000-01-23T04:56:07.000+00:00
        data_consent_date: 2000-01-23
        kyc_verified: true
        marketing_consent_date: 2000-01-23
        employment_status: ""
        marketing_consent: true
        first_name: first_name
        email: email
        utm_content: utm_content
        onboarded_by: onboarded_by
        profession: profession
        comments: comments
        email_verified: true
        utm_campaign: utm_campaign
        last_login: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        portfolios:
        - portfolios
        - portfolios
        onboarding_token: onboarding_token
        fee_segments:
        - fee_segments
        - fee_segments
        last_name: last_name
        phone_number_verified: 2000-01-23T04:56:07.000+00:00
        middle_name: middle_name
        is_verified: true
        utm_term: utm_term
        risk_level: 6
        marital_status: ""
        extra_data:
          key: ""
        referral_code: referral_code
        phone_number: phone_number
        tax_information:
        - tax_information
        - tax_information
        referred_by: referred_by
        updated: 2000-01-23T04:56:07.000+00:00
        tos_consent_date: 2000-01-23
        successful_referrals: 0
        status: ""
        activated: 2000-01-23T04:56:07.000+00:00
        utm_source: utm_source
      properties:
        email:
          format: email
          type: string
        birthdate:
          format: date
          type: string
        tos_consent:
          type: boolean
        marketing_consent:
          type: boolean
        data_consent:
          type: boolean
        tos_consent_date:
          format: date
          readOnly: true
          type: string
        tax_information:
          items:
            nullable: true
            type: string
          readOnly: true
          type: array
        country_birth:
          $ref: '#/components/schemas/CountryField'
        last_login:
          format: date-time
          readOnly: true
          type: string
        referred_by:
          nullable: true
          type: string
        successful_referrals:
          readOnly: true
          type: integer
        kyc_verified:
          readOnly: true
          type: boolean
        is_verified:
          readOnly: true
          type: boolean
        fee_segments:
          items:
            type: string
          readOnly: true
          type: array
        extra_data:
          additionalProperties: {}
          type: object
        portfolios:
          items:
            type: string
          readOnly: true
          type: array
        onboarded_by:
          nullable: true
          type: string
        risk_level:
          readOnly: true
          type: integer
        onboarding_token:
          readOnly: true
          type: string
        password:
          type: string
          writeOnly: true
        email_verified_last_request:
          format: date-time
          type: string
        uuid:
          format: uuid
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        updated:
          format: date-time
          readOnly: true
          title: Updated on
          type: string
        comments:
          nullable: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB65Enum'
          readOnly: true
        email_verified:
          type: boolean
        email_verify_last_request:
          format: date-time
          nullable: true
          type: string
        title:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TitleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        first_name:
          nullable: true
          type: string
        middle_name:
          nullable: true
          type: string
        last_name:
          nullable: true
          type: string
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        marital_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone_number:
          nullable: true
          type: string
        phone_number_verified:
          format: date-time
          nullable: true
          type: string
        language:
          maxLength: 5
          type: string
        employment_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/EmploymentStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        profession:
          maxLength: 250
          nullable: true
          type: string
        referral_code:
          maxLength: 250
          nullable: true
          type: string
        activated:
          format: date-time
          nullable: true
          type: string
        utm_source:
          maxLength: 250
          type: string
        utm_medium:
          maxLength: 250
          type: string
        utm_campaign:
          maxLength: 250
          type: string
        utm_term:
          maxLength: 250
          type: string
        utm_content:
          maxLength: 250
          type: string
        marketing_consent_date:
          format: date
          readOnly: true
          type: string
        data_consent_date:
          format: date
          readOnly: true
          type: string
      required:
      - country_birth
      - created
      - data_consent_date
      - email
      - fee_segments
      - is_verified
      - kyc_verified
      - language
      - last_login
      - marketing_consent_date
      - onboarding_token
      - portfolios
      - referred_by
      - risk_level
      - status
      - successful_referrals
      - tax_information
      - tos_consent_date
      - updated
      - uuid
      type: object
    Assessment:
      example:
        risk_level: 6
        created: 2000-01-23T04:56:07.000+00:00
        completed: 2000-01-23T04:56:07.000+00:00
        choices:
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          question_code: question_code
          description: description
          order: 2624
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          question_code: question_code
          description: description
          order: 2624
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        completed:
          format: date-time
          nullable: true
          type: string
        choices:
          items:
            $ref: '#/components/schemas/RiskChoiceQuestionCode'
          type: array
        status:
          $ref: '#/components/schemas/AssessmentStatusEnum'
        risk_level:
          readOnly: true
          type: integer
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
      required:
      - choices
      - created
      - risk_level
      - uuid
      type: object
    AssessmentStatusEnum:
      enum:
      - PENDING
      - COMPLETED
      - OUTDATED
      type: string
    AssetCategory:
      example:
        code: code
        name: name
        type: type
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order: 2624
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 150
          type: string
        code:
          maxLength: 50
          type: string
        order:
          maximum: 32767
          minimum: 0
          type: integer
        type:
          type: string
      required:
      - code
      - name
      - order
      - type
      - uuid
      type: object
    AssetConcentrationRisk:
      example:
        asset_class: asset_class
        name: name
        weight: 602745618307.0403
        uuid: uuid
        value: 80082819046.10115
      properties:
        name:
          type: string
        asset_class:
          type: string
        uuid:
          readOnly: true
          type: string
        value:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        weight:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
      required:
      - asset_class
      - name
      - uuid
      - value
      - weight
      type: object
    AssetDetail:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        market: market
        ticker: ticker
        extra_data:
          key: ""
        expense_ratio: 0.8008282
        name: name
        currency: currency
        categories:
        - code: code
          name: name
          type: type
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 2624
        - code: code
          name: name
          type: type
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 2624
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isin: isin
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 250
          type: string
        isin:
          maxLength: 120
          type: string
        ticker:
          maxLength: 120
          type: string
        status:
          $ref: '#/components/schemas/Status6f6Enum'
        market:
          readOnly: true
          type: string
        currency:
          type: string
        extra_data:
          additionalProperties: {}
          nullable: true
          type: object
        categories:
          items:
            $ref: '#/components/schemas/AssetCategory'
          type: array
        asset_type:
          $ref: '#/components/schemas/AssetTypeEnum'
        expense_ratio:
          description: This field determines the administrative and operational costs
            associated to certain types of assets like ETFs or mutual funds.
          format: float
          type: number
      required:
      - categories
      - currency
      - isin
      - market
      - name
      - ticker
      - uuid
      type: object
    AssetGrowth:
      example:
        amount: 205.49123661408066
        year: 0
      properties:
        year:
          readOnly: true
          type: integer
        amount:
          format: double
          maximum: 1000
          minimum: -1000
          readOnly: true
          type: number
      required:
      - amount
      - year
      type: object
    AssetList:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        market: market
        ticker: ticker
        extra_data:
          key: ""
        name: name
        asset_type: ""
        currency: currency
        categories:
        - code: code
          name: name
          type: type
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 2624
        - code: code
          name: name
          type: type
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 2624
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isin: isin
        status: ""
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        isin:
          readOnly: true
          type: string
        ticker:
          readOnly: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/Status6f6Enum'
          readOnly: true
        market:
          readOnly: true
          type: string
        currency:
          type: string
        extra_data:
          additionalProperties: {}
          readOnly: true
          type: object
        categories:
          items:
            $ref: '#/components/schemas/AssetCategory'
          type: array
        asset_type:
          allOf:
          - $ref: '#/components/schemas/AssetTypeEnum'
          readOnly: true
      required:
      - asset_type
      - categories
      - currency
      - extra_data
      - isin
      - market
      - name
      - status
      - ticker
      - uuid
      type: object
    AssetModelPortfolio:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        weight: 0.14658129805029452
        asset:
          market: market
          ticker: ticker
          extra_data:
            key: ""
          name: name
          currency: currency
          categories:
          - categories
          - categories
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isin: isin
      properties:
        asset:
          $ref: '#/components/schemas/RelatedAssetSerializerWithAssetCategories'
        weight:
          format: double
          maximum: 1
          minimum: 0
          type: number
      required:
      - asset
      - weight
      type: object
    AssetTypeEnum:
      enum:
      - ETF
      - MUTUAL_FUND
      - STOCK
      type: string
    Attachment:
      example:
        attachment_filename: attachment_filename
        attachment_extension: attachment_extension
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        attachment_extension:
          readOnly: true
          type: string
        attachment_filename:
          readOnly: true
          type: string
        uuid:
          format: uuid
          readOnly: true
          type: string
      required:
      - attachment_extension
      - attachment_filename
      - uuid
      type: object
    AuthenticationResponse:
      example:
        session_token: session_token
        id: id
        error: error
        email: email
        status: ok
      properties:
        status:
          default: ok
          type: string
        error:
          type: string
        id:
          type: string
        email:
          format: email
          type: string
        session_token:
          type: string
      required:
      - email
      - id
      - session_token
      type: object
    BankAccountCreateUpdate:
      example:
        account_number: account_number
        joint: true
        account_holder_name: account_holder_name
        swift_code: swift_code
        iban: iban
        bank_name: bank_name
        account_sort_code: account_sort_code
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        account_number:
          maxLength: 30
          nullable: true
          type: string
        account_sort_code:
          maxLength: 6
          nullable: true
          type: string
        account_holder_name:
          nullable: true
          type: string
        joint:
          type: boolean
        bank_name:
          maxLength: 250
          nullable: true
          type: string
        iban:
          maxLength: 34
          nullable: true
          type: string
        swift_code:
          maxLength: 11
          nullable: true
          type: string
      required:
      - uuid
      type: object
    BankAccountList:
      example:
        account_number: account_number
        joint: true
        account_holder_name: account_holder_name
        swift_code: swift_code
        iban: iban
        bank_name: bank_name
        account_sort_code: account_sort_code
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        account_number:
          readOnly: true
          type: string
        account_sort_code:
          readOnly: true
          type: string
        account_holder_name:
          readOnly: true
          type: string
        joint:
          readOnly: true
          type: boolean
        bank_name:
          readOnly: true
          type: string
        iban:
          readOnly: true
          type: string
        swift_code:
          readOnly: true
          type: string
      required:
      - account_holder_name
      - account_number
      - account_sort_code
      - bank_name
      - iban
      - joint
      - swift_code
      - uuid
      type: object
    BasePortfolioTypeRestrictions:
      example:
        date_to: 2000-01-23
        key: key
        clean_value: 0.8008281904610115
        date_from: 2000-01-23
      properties:
        key:
          readOnly: true
          type: string
        date_from:
          format: date
          readOnly: true
          type: string
        date_to:
          format: date
          readOnly: true
          type: string
        clean_value:
          readOnly: true
          type: number
      required:
      - clean_value
      - date_from
      - date_to
      - key
      type: object
    BlankEnum:
      enum:
      - ""
      type: string
    Category:
      example:
        code: code
        extra_data:
          key: ""
        name: name
        description: description
        categories:
        - code: code
          name: name
          type: type
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 2624
        - code: code
          name: name
          type: type
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 2624
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        code:
          readOnly: true
          type: string
        categories:
          items:
            $ref: '#/components/schemas/AssetCategory'
          type: array
        name:
          maxLength: 120
          type: string
        status:
          $ref: '#/components/schemas/CategoryStatusEnum'
        extra_data:
          additionalProperties: {}
          description: Additional ETSCategory attributes
          nullable: true
          type: object
        description:
          nullable: true
          type: string
      required:
      - categories
      - code
      - name
      - uuid
      type: object
    CategoryStatusEnum:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    ChannelEnum:
      enum:
      - BROWSER
      - IOS
      - ANDROID
      type: string
    ClientCreate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        birthdate: 2000-01-23
        gender: ""
        utm_campaign: utm_campaign
        profile:
          key: ""
        utm_medium: utm_medium
        last_name: last_name
        language: language
        title: ""
        middle_name: middle_name
        data_consent: true
        tos_consent: true
        utm_term: utm_term
        marital_status: ""
        password: password
        extra_data:
          key: ""
        referral_code: referral_code
        phone_number: phone_number
        employment_status: ""
        first_name: first_name
        marketing_consent: true
        email: email
        activated: 2000-01-23T04:56:07.000+00:00
        utm_source: utm_source
        utm_content: utm_content
      properties:
        email:
          format: email
          type: string
        birthdate:
          format: date
          type: string
        title:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TitleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        first_name:
          nullable: true
          type: string
        last_name:
          nullable: true
          type: string
        middle_name:
          nullable: true
          type: string
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        marital_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        language:
          maxLength: 5
          type: string
        employment_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/EmploymentStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        activated:
          format: date-time
          nullable: true
          type: string
        profile:
          additionalProperties: {}
          type: object
          writeOnly: true
        password:
          type: string
          writeOnly: true
        referral_code:
          type: string
          writeOnly: true
        utm_source:
          maxLength: 250
          type: string
        utm_medium:
          maxLength: 250
          type: string
        utm_campaign:
          maxLength: 250
          type: string
        utm_term:
          maxLength: 250
          type: string
        utm_content:
          maxLength: 250
          type: string
        tos_consent:
          type: boolean
        data_consent:
          type: boolean
        marketing_consent:
          type: boolean
        extra_data:
          additionalProperties: {}
          type: object
        phone_number:
          nullable: true
          type: string
      required:
      - email
      type: object
    ClientDetail:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        birthdate: 2000-01-23
        gender: ""
        country_birth:
          code: code
          long_name_it_ch: long_name_it_ch
          name_fr_ch: name_fr_ch
          long_name_fr_ch: long_name_fr_ch
          name_it_ch: name_it_ch
          name_en_gb: name_en_gb
          long_name_de_ch: long_name_de_ch
          long_name: long_name
          name_de_ch: name_de_ch
          long_name_en_gb: long_name_en_gb
          eea_country: true
          name_en_ch: name_en_ch
          name: name
          name_es_es: name_es_es
          id: 0
          long_name_en_ch: long_name_en_ch
          long_name_es_es: long_name_es_es
          iso3: iso3
        utm_medium: utm_medium
        language: language
        title: ""
        data_consent: true
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tos_consent: true
        email_verify_last_request: 2000-01-23T04:56:07.000+00:00
        data_consent_date: 2000-01-23
        kyc_verified: true
        marketing_consent_date: 2000-01-23
        employment_status: ""
        marketing_consent: true
        first_name: first_name
        email: email
        utm_content: utm_content
        onboarded_by: onboarded_by
        profession: profession
        comments: comments
        email_verified: true
        utm_campaign: utm_campaign
        last_login: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        portfolios:
        - portfolios
        - portfolios
        onboarding_token: onboarding_token
        fee_segments:
        - fee_segments
        - fee_segments
        last_name: last_name
        phone_number_verified: 2000-01-23T04:56:07.000+00:00
        middle_name: middle_name
        is_verified: true
        utm_term: utm_term
        risk_level: 1
        marital_status: ""
        extra_data:
          key: ""
        referral_code: referral_code
        phone_number: phone_number
        tax_information:
        - tax_information
        - tax_information
        referred_by: referred_by
        updated: 2000-01-23T04:56:07.000+00:00
        tos_consent_date: 2000-01-23
        successful_referrals: 6
        status: ""
        activated: 2000-01-23T04:56:07.000+00:00
        utm_source: utm_source
      properties:
        email:
          format: email
          type: string
        birthdate:
          format: date
          type: string
        tos_consent:
          type: boolean
        marketing_consent:
          type: boolean
        data_consent:
          type: boolean
        tos_consent_date:
          format: date
          type: string
        tax_information:
          items:
            nullable: true
            type: string
          readOnly: true
          type: array
        country_birth:
          $ref: '#/components/schemas/CountryField'
        last_login:
          format: date-time
          readOnly: true
          type: string
        referred_by:
          nullable: true
          type: string
        successful_referrals:
          readOnly: true
          type: integer
        kyc_verified:
          readOnly: true
          type: boolean
        is_verified:
          readOnly: true
          type: boolean
        fee_segments:
          items:
            type: string
          readOnly: true
          type: array
        extra_data:
          additionalProperties: {}
          type: object
        portfolios:
          items:
            type: string
          readOnly: true
          type: array
        onboarded_by:
          nullable: true
          type: string
        risk_level:
          readOnly: true
          type: integer
        onboarding_token:
          readOnly: true
          type: string
        uuid:
          format: uuid
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        updated:
          format: date-time
          readOnly: true
          title: Updated on
          type: string
        comments:
          nullable: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB65Enum'
          readOnly: true
        email_verified:
          type: boolean
        email_verify_last_request:
          format: date-time
          nullable: true
          type: string
        title:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TitleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        first_name:
          nullable: true
          type: string
        middle_name:
          nullable: true
          type: string
        last_name:
          nullable: true
          type: string
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        marital_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone_number:
          nullable: true
          type: string
        phone_number_verified:
          format: date-time
          nullable: true
          type: string
        language:
          maxLength: 5
          type: string
        employment_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/EmploymentStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        profession:
          maxLength: 250
          nullable: true
          type: string
        referral_code:
          maxLength: 250
          nullable: true
          type: string
        activated:
          format: date-time
          nullable: true
          type: string
        utm_source:
          maxLength: 250
          type: string
        utm_medium:
          maxLength: 250
          type: string
        utm_campaign:
          maxLength: 250
          type: string
        utm_term:
          maxLength: 250
          type: string
        utm_content:
          maxLength: 250
          type: string
        marketing_consent_date:
          format: date
          readOnly: true
          type: string
        data_consent_date:
          format: date
          readOnly: true
          type: string
      required:
      - country_birth
      - created
      - data_consent
      - data_consent_date
      - email
      - extra_data
      - fee_segments
      - is_verified
      - kyc_verified
      - language
      - last_login
      - marketing_consent
      - marketing_consent_date
      - onboarding_token
      - portfolios
      - referred_by
      - risk_level
      - status
      - successful_referrals
      - tax_information
      - tos_consent
      - tos_consent_date
      - updated
      - uuid
      type: object
    ClientEmbedRanking:
      example:
        earnings: 602745618307.0403
        full_name: full_name
        balance: 80082819046.10115
        twrr: 596213391668.3182
        mwrr: 146581298050.29453
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          type: string
        full_name:
          type: string
        balance:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        earnings:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        mwrr:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        twrr:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
      required:
      - balance
      - earnings
      - full_name
      - mwrr
      - twrr
      - uuid
      type: object
    ClientPerformance:
      example:
        performance: -839834361907.7977
        valuation_date: 2000-01-23
      properties:
        valuation_date:
          format: date
          type: string
        performance:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
      required:
      - performance
      - valuation_date
      type: object
    ClientRanking:
      example:
        top_performing:
        - earnings: 602745618307.0403
          full_name: full_name
          balance: 80082819046.10115
          twrr: 596213391668.3182
          mwrr: 146581298050.29453
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - earnings: 602745618307.0403
          full_name: full_name
          balance: 80082819046.10115
          twrr: 596213391668.3182
          mwrr: 146581298050.29453
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bottom_performing:
        - earnings: 602745618307.0403
          full_name: full_name
          balance: 80082819046.10115
          twrr: 596213391668.3182
          mwrr: 146581298050.29453
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - earnings: 602745618307.0403
          full_name: full_name
          balance: 80082819046.10115
          twrr: 596213391668.3182
          mwrr: 146581298050.29453
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        top_performing:
          items:
            $ref: '#/components/schemas/ClientEmbedRanking'
          type: array
        bottom_performing:
          items:
            $ref: '#/components/schemas/ClientEmbedRanking'
          type: array
      required:
      - bottom_performing
      - top_performing
      type: object
    ClientReferral:
      example:
        last_name: last_name
        first_name: first_name
      properties:
        first_name:
          readOnly: true
          type: string
        last_name:
          readOnly: true
          type: string
      required:
      - first_name
      - last_name
      type: object
    ConversationCreate:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        subject: subject
        messages: ""
        portal: 0
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        portal:
          readOnly: true
          type: integer
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        subject:
          maxLength: 80
          type: string
        messages:
          allOf:
          - $ref: '#/components/schemas/Message'
          nullable: true
      required:
      - created
      - portal
      - subject
      - uuid
      type: object
    ConversationList:
      example:
        unreads: 0
        created: 2000-01-23T04:56:07.000+00:00
        subject: subject
        last_message:
          attachments:
          - attachment_filename: attachment_filename
            attachment_extension: attachment_extension
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - attachment_filename: attachment_filename
            attachment_extension: attachment_extension
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          user: user
          read_date: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          content: content
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        subject:
          type: string
        last_message:
          $ref: '#/components/schemas/Message'
        unreads:
          readOnly: true
          type: integer
      required:
      - created
      - last_message
      - subject
      - unreads
      - uuid
      type: object
    CoreCategoryGroup:
      example:
        risk_level: 2624
        code: code
        categories:
        - code: code
          extra_data:
            key: ""
          name: name
          description: description
          categories:
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - code: code
          extra_data:
            key: ""
          name: name
          description: description
          categories:
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        code:
          readOnly: true
          type: string
        risk_level:
          maximum: 32767
          minimum: 0
          type: integer
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
      required:
      - categories
      - code
      - risk_level
      - uuid
      type: object
    CountryField:
      example:
        code: code
        long_name_it_ch: long_name_it_ch
        name_fr_ch: name_fr_ch
        long_name_fr_ch: long_name_fr_ch
        name_it_ch: name_it_ch
        name_en_gb: name_en_gb
        long_name_de_ch: long_name_de_ch
        long_name: long_name
        name_de_ch: name_de_ch
        long_name_en_gb: long_name_en_gb
        eea_country: true
        name_en_ch: name_en_ch
        name: name
        name_es_es: name_es_es
        id: 0
        long_name_en_ch: long_name_en_ch
        long_name_es_es: long_name_es_es
        iso3: iso3
      properties:
        id:
          readOnly: true
          type: integer
        code:
          maxLength: 2
          type: string
        iso3:
          maxLength: 3
          type: string
        name:
          maxLength: 150
          type: string
        name_en_gb:
          maxLength: 150
          nullable: true
          title: Name [en-gb]
          type: string
        name_en_ch:
          maxLength: 150
          nullable: true
          title: Name [en-ch]
          type: string
        name_fr_ch:
          maxLength: 150
          nullable: true
          title: Name [fr-ch]
          type: string
        name_de_ch:
          maxLength: 150
          nullable: true
          title: Name [de-ch]
          type: string
        name_es_es:
          maxLength: 150
          nullable: true
          title: Name [es-es]
          type: string
        name_it_ch:
          maxLength: 150
          nullable: true
          title: Name [it-ch]
          type: string
        long_name:
          maxLength: 250
          type: string
        long_name_en_gb:
          maxLength: 250
          nullable: true
          title: Long name [en-gb]
          type: string
        long_name_en_ch:
          maxLength: 250
          nullable: true
          title: Long name [en-ch]
          type: string
        long_name_fr_ch:
          maxLength: 250
          nullable: true
          title: Long name [fr-ch]
          type: string
        long_name_de_ch:
          maxLength: 250
          nullable: true
          title: Long name [de-ch]
          type: string
        long_name_es_es:
          maxLength: 250
          nullable: true
          title: Long name [es-es]
          type: string
        long_name_it_ch:
          maxLength: 250
          nullable: true
          title: Long name [it-ch]
          type: string
        eea_country:
          type: boolean
      required:
      - code
      - id
      - iso3
      - long_name
      - name
      type: object
    CountryList:
      example:
        eea_country: true
        code: code
        name: name
        long_name: long_name
        iso3: iso3
      properties:
        code:
          readOnly: true
          type: string
        iso3:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        long_name:
          readOnly: true
          type: string
        eea_country:
          readOnly: true
          type: boolean
      required:
      - code
      - eea_country
      - iso3
      - long_name
      - name
      type: object
    CreateOrder:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        shares: 1
        duration: ""
        stop_price: 146581298050.30307
        portfolio: portfolio
        asset:
          market: market
          ticker: ticker
          extra_data:
            key: ""
          name: name
          currency: currency
          categories:
          - categories
          - categories
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isin: isin
        limit_price: 602745618307.0443
      properties:
        shares:
          minimum: 1
          type: integer
        asset:
          $ref: '#/components/schemas/RelatedAssetSerializerWithAssetCategories'
        portfolio:
          type: string
        order_type:
          $ref: '#/components/schemas/OrderTypeEnum'
        method:
          $ref: '#/components/schemas/CreateOrderMethodEnum'
        limit_price:
          format: double
          maximum: 1000000000000
          minimum: 0.01
          nullable: true
          type: number
        stop_price:
          format: double
          maximum: 1000000000000
          minimum: 0.01
          nullable: true
          type: number
        duration:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/DurationEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - asset
      - method
      - order_type
      - shares
      type: object
    CreateOrderMethodEnum:
      enum:
      - MARKET
      - STOP
      - LIMIT
      type: string
    Currency:
      example:
        symbol: symbol
        code: code
        name: name
      properties:
        code:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        symbol:
          readOnly: true
          type: string
      required:
      - code
      - name
      - symbol
      type: object
    CurrentAllocation:
      example:
        valuation_datetime: 2000-01-23T04:56:07.000+00:00
        earnings: 192426783336.63647
        performance: -170878394023.21277
        balance: 205491236614.08057
        trade_total: 477256389677.17676
        positions:
        - shares: 127475331326.66577
          fx_rate_account: 3.616076749251911
          price: -539572822613.04694
          weight: 9.301444243932576
          asset_currency_value: 2.027123023002322
          asset: ""
          value: 412280248300.6218
        - shares: 127475331326.66577
          fx_rate_account: 3.616076749251911
          price: -539572822613.04694
          weight: 9.301444243932576
          asset_currency_value: 2.027123023002322
          asset: ""
          value: 412280248300.6218
        cash_active: -839834361907.7977
        invested: -706837403899.4109
        cash_available: 1.2315135367772556
      properties:
        cash_active:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        balance:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        invested:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        earnings:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        positions:
          items:
            $ref: '#/components/schemas/Position'
          type: array
        valuation_datetime:
          format: date-time
          readOnly: true
          type: string
        performance:
          default: 0.0
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        trade_total:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        cash_available:
          format: double
          readOnly: true
          type: number
      required:
      - balance
      - cash_active
      - cash_available
      - earnings
      - invested
      - positions
      - trade_total
      - valuation_datetime
      type: object
    DepositCreate:
      example:
        reference: reference
        reason: reason
        amount: -839834361907.7977
        transacted_at: 2000-01-23T04:56:07.000+00:00
        provider: provider
        extra_data:
          key: ""
        completed: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: ""
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        provider:
          type: string
        reference:
          readOnly: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB6aEnum'
          readOnly: true
        reason:
          description: Cancelled reason
          readOnly: true
          type: string
        completed:
          format: date-time
          readOnly: true
          type: string
        deposit_type:
          $ref: '#/components/schemas/DepositTypeEnum'
        transacted_at:
          format: date-time
          readOnly: true
          type: string
        extra_data:
          additionalProperties: {}
          description: Additional deposit attributes for the specific portal
          nullable: true
          type: object
      required:
      - amount
      - completed
      - provider
      - reason
      - reference
      - status
      - transacted_at
      - uuid
      type: object
    DepositDetail:
      example:
        reference: reference
        reason: reason
        amount: -839834361907.7977
        transacted_at: 2000-01-23T04:56:07.000+00:00
        portfolio: portfolio
        provider: provider
        extra_data:
          key: ""
        completed: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        portfolio:
          type: string
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        provider:
          type: string
        reference:
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/StatusB6aEnum'
        reason:
          description: Cancelled reason
          maxLength: 250
          type: string
        completed:
          format: date-time
          nullable: true
          type: string
        deposit_type:
          $ref: '#/components/schemas/DepositTypeEnum'
        transacted_at:
          format: date-time
          nullable: true
          type: string
        extra_data:
          additionalProperties: {}
          description: Additional deposit attributes for the specific portal
          nullable: true
          type: object
      required:
      - amount
      - portfolio
      - provider
      - reference
      - uuid
      type: object
    DepositList:
      example:
        reference: reference
        amount: -839834361907.7977
        transacted_at: 2000-01-23T04:56:07.000+00:00
        extra_data:
          key: ""
        completed: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deposit_type: ""
        status: ""
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        reference:
          readOnly: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB6aEnum'
          readOnly: true
        deposit_type:
          allOf:
          - $ref: '#/components/schemas/DepositTypeEnum'
          readOnly: true
        completed:
          format: date-time
          readOnly: true
          type: string
        transacted_at:
          format: date-time
          readOnly: true
          type: string
        extra_data:
          additionalProperties: {}
          description: Additional deposit attributes for the specific portal
          readOnly: true
          type: object
      required:
      - amount
      - completed
      - deposit_type
      - extra_data
      - reference
      - status
      - transacted_at
      - uuid
      type: object
    DepositTypeEnum:
      enum:
      - CONTRIBUTION
      - TRANSFER
      type: string
    DocTypeEnum:
      enum:
      - ID_PERSONAL
      - BANK_DETAILS
      - EMPLOYMENT
      - MARITAL_STATUS
      - PENSION
      - LEGAL
      - TRANSFERS
      - MEDICAL
      - CONTRACT
      - OTHERS
      type: string
    Document:
      example:
        path: https://openapi-generator.tech
        extra_data:
          key: ""
        name: name
        description: description
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        doc_type:
          $ref: '#/components/schemas/DocTypeEnum'
        description:
          maxLength: 250
          type: string
        path:
          format: uri
          readOnly: true
          type: string
        extra_data:
          additionalProperties: {}
          description: Additional document attributes for the specific portal
          nullable: true
          type: object
      required:
      - doc_type
      - name
      - path
      - uuid
      type: object
    DocumentTypeEnum:
      enum:
      - passport
      - driving_licence
      - national_identity_card
      - utility_bill
      - local_tax_bill
      - bank_statement
      - lease_agreement
      - rent_receipt
      - letter
      - certificate_marriage
      - decree_absolute
      - final_order
      - client_photo
      type: string
    DurationEnum:
      enum:
      - GOOD_TILL_CANCEL
      - DAY_ORDER
      type: string
    ETSForecastRequest:
      example:
        recurring_amount: 146581298050.29453
        recurring_period: 7
        favourite_categories:
        - favourite_categories
        - favourite_categories
        risk_level: 6
        time_horizon: 4
        initial_amount: 602745618307.4376
        excluded_categories:
        - excluded_categories
        - excluded_categories
      properties:
        time_horizon:
          maximum: 50
          minimum: 1
          type: integer
        initial_amount:
          format: double
          maximum: 1000000000000
          minimum: 1
          type: number
        recurring_amount:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        recurring_period:
          maximum: 12
          minimum: 0
          type: integer
        risk_level:
          maximum: 10
          minimum: 1
          type: integer
        favourite_categories:
          items:
            type: string
          type: array
        excluded_categories:
          items:
            type: string
          type: array
      required:
      - initial_amount
      - risk_level
      - time_horizon
      type: object
    EmailVerifyRequest:
      example:
        email: email
      properties:
        email:
          format: email
          type: string
      type: object
    EmailVerifyView:
      example:
        token: token
      properties:
        token:
          type: string
      required:
      - token
      type: object
    EmploymentStatusEnum:
      enum:
      - EMPLOYED
      - SELF_EMPLOYED
      - RETIRED
      - UNEMPLOYED
      type: string
    FeeTypeEnum:
      enum:
      - portal_service
      - seller_fee
      type: string
    FeedActivityList:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        created: 2000-01-23T04:56:07.000+00:00
        activity_type: ""
        activity_data:
          key: ""
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        activity_type:
          allOf:
          - $ref: '#/components/schemas/ActivityTypeEnum'
          readOnly: true
        activity_data:
          additionalProperties: {}
          readOnly: true
          type: object
      required:
      - activity_data
      - activity_type
      - created
      - uuid
      type: object
    ForecastDecumulationRequest:
      example:
        recurring_amount: 602745618307.0403
        risk_level: 1
        retirement_age: 69
        life_expectancy: 83
        initial_amount: 80082819046.10115
        withdrawal_amount: 596213391668.3182
      properties:
        initial_amount:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        recurring_amount:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        risk_level:
          type: integer
        withdrawal_amount:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        retirement_age:
          maximum: 110
          minimum: 18
          type: integer
        life_expectancy:
          maximum: 110
          minimum: 75
          type: integer
      required:
      - initial_amount
      - recurring_amount
      - retirement_age
      - risk_level
      - withdrawal_amount
      type: object
    ForecastRequest:
      example:
        recurring_amount: 146581298050.29453
        risk_level: 1
        goal_amount: 80082819047.02107
        initial_amount: 602745618307.0403
        deadline: 2000-01-23
      properties:
        goal_amount:
          format: double
          maximum: 1000000000000
          minimum: 1
          type: number
        deadline:
          format: date
          type: string
        initial_amount:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        recurring_amount:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        risk_level:
          minimum: 1
          type: integer
      required:
      - deadline
      - goal_amount
      - initial_amount
      - recurring_amount
      - risk_level
      type: object
    GenderEnum:
      enum:
      - M
      - F
      - U
      type: string
    Goal:
      example:
        recurring_amount: -706837403899.4109
        risk_level: 19536
        portfolio: portfolio
        created: 2000-01-23T04:56:07.000+00:00
        goal_amount: 80082819046.19315
        name: name
        initial_amount: 602745618307.0801
        deadline: 2000-01-23
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 150
          type: string
        portfolio:
          nullable: true
          type: string
        goal_amount:
          description: Desired amount needed to fulfill the goal
          format: double
          maximum: 1000000000000
          minimum: 0.1
          type: number
        deadline:
          description: Due date to reach the goal.
          format: date
          type: string
        initial_amount:
          description: Initial deposit amount to start from. No sense to start by
            0
          format: double
          maximum: 1000000000000
          minimum: 0.1
          type: number
        recurring_amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
          type: number
        risk_level:
          maximum: 32767
          minimum: 0
          type: integer
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
      required:
      - created
      - deadline
      - goal_amount
      - initial_amount
      - name
      - risk_level
      - uuid
      type: object
    ImpersionationResponse:
      example:
        access: access
        refresh: refresh
        email: email
        status: status
      properties:
        access:
          type: string
        refresh:
          type: string
        email:
          format: email
          type: string
        status:
          type: string
      required:
      - access
      - email
      - refresh
      - status
      type: object
    ImpersonationToken:
      example:
        impersonator: impersonator
        impersonated: impersonated
        token: token
      properties:
        impersonator:
          type: string
        impersonated:
          format: email
          type: string
        token:
          type: string
      required:
      - impersonated
      - impersonator
      - token
      type: object
    IntradayPrice:
      example:
        amount: -839834361907.7977
        datetime: 2000-01-23T04:56:07.000+00:00
        high_price: -706837403899.4109
        open_price: 205491236614.08057
        low_price: 192426783336.63647
        previous_close_price: 127475331326.66577
      properties:
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        datetime:
          format: date-time
          readOnly: true
          type: string
        open_price:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        high_price:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        low_price:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        previous_close_price:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
      required:
      - amount
      - datetime
      - high_price
      - low_price
      - open_price
      - previous_close_price
      type: object
    InvestorFee:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        concept: concept
        value_unit: ""
        fee_type: ""
        date_to: 2000-01-23
        value: 8.008281904610115
        amount_from: 205491236.61408067
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        date_from: 2000-01-23
        amount_to: -706837403.899411
      properties:
        value:
          description: Determinates a percentage or an amount (between 0 and 1 if
            percentage otherwise Positive Decimal)
          format: double
          maximum: 100
          minimum: 0
          type: number
        value_unit:
          allOf:
          - $ref: '#/components/schemas/ValueUnitEnum'
          description: Determines the type of the value(Fixed, Percentage)
        fee_type:
          allOf:
          - $ref: '#/components/schemas/FeeTypeEnum'
          description: Each choice should have a related method on fee model that
            contains the logic to charge the client
        concept:
          description: Describes the concept that will be shown on invoice
          maxLength: 100
          type: string
        date_from:
          description: Defines the end date when the percentage should be applied
          format: date
          nullable: true
          type: string
        date_to:
          description: Defines the start date when the percentage should be applied
          format: date
          nullable: true
          type: string
        amount_from:
          description: Defines the amount start range when the percentage should be
            applied
          format: double
          maximum: 1000000000
          minimum: -1000000000
          nullable: true
          type: number
        amount_to:
          description: Defines the amount end range when the percentage should be
            applied
          format: double
          maximum: 1000000000
          minimum: -1000000000
          nullable: true
          type: number
        uuid:
          format: uuid
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        updated:
          format: date-time
          readOnly: true
          title: Updated on
          type: string
      required:
      - concept
      - created
      - fee_type
      - updated
      - uuid
      type: object
    InvestorModelPortfolio:
      example:
        risk_level: 6
        allocation:
        - weight: 0.14658129805029452
          asset:
            market: market
            ticker: ticker
            extra_data:
              key: ""
            name: name
            currency: currency
            categories:
            - categories
            - categories
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isin: isin
        - weight: 0.14658129805029452
          asset:
            market: market
            ticker: ticker
            extra_data:
              key: ""
            name: name
            currency: currency
            categories:
            - categories
            - categories
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isin: isin
        extra_data:
          key: ""
        name: name
        cash_weight: -8.398343619077977
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        cash_weight:
          description: Percentage on the interval 0-1.
          format: double
          maximum: 10
          minimum: -10
          readOnly: true
          type: number
        risk_level:
          readOnly: true
          type: integer
        allocation:
          items:
            $ref: '#/components/schemas/AssetModelPortfolio'
          readOnly: true
          type: array
        extra_data:
          additionalProperties: {}
          description: Additional ModelPortfolio attributes
          readOnly: true
          type: object
      required:
      - allocation
      - cash_weight
      - extra_data
      - name
      - risk_level
      - uuid
      type: object
    InvestorWithdrawalCreate:
      example:
        reason: reason
        amount: -839834361907.7977
        provider: provider
        purpose: purpose
        extra_data:
          key: ""
        withdrawal_type: withdrawal_type
        completed: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: ""
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        provider:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/Status14bEnum'
          readOnly: true
        reason:
          description: Cancelled reason
          readOnly: true
          type: string
        completed:
          format: date-time
          readOnly: true
          type: string
        purpose:
          description: Withdrawal reason
          maxLength: 250
          nullable: true
          type: string
        withdrawal_type:
          readOnly: true
          type: string
        extra_data:
          additionalProperties: {}
          description: Additional withdrawal attributes for the specific portal
          nullable: true
          type: object
      required:
      - amount
      - completed
      - provider
      - reason
      - status
      - uuid
      - withdrawal_type
      type: object
    InvestorWithdrawalList:
      example:
        amount: -839834361907.7977
        extra_data:
          key: ""
        withdrawal_type: withdrawal_type
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: ""
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        status:
          allOf:
          - $ref: '#/components/schemas/Status14bEnum'
          readOnly: true
        withdrawal_type:
          readOnly: true
          type: string
        extra_data:
          additionalProperties: {}
          description: Additional withdrawal attributes for the specific portal
          readOnly: true
          type: object
      required:
      - amount
      - extra_data
      - status
      - uuid
      - withdrawal_type
      type: object
    InvoiceDetails:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        number: number
        amount: -839834361907.7977
        charges:
        - charges
        - charges
        created: 2000-01-23T04:56:07.000+00:00
        date_to: 2000-01-23
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        url: https://openapi-generator.tech
        date_from: 2000-01-23
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        number:
          description: Invoice legal number
          maxLength: 50
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/Status260Enum'
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        date_from:
          description: Beginning of charge period
          format: date
          nullable: true
          type: string
        date_to:
          description: End of charge period
          format: date
          nullable: true
          type: string
        url:
          format: uri
          readOnly: true
          type: string
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        charges:
          items:
            nullable: true
            type: string
          type: array
      required:
      - amount
      - charges
      - created
      - url
      - uuid
      type: object
    InvoiceList:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        number: number
        amount: -839834361907.7977
        charges:
        - charges
        - charges
        date_to: 2000-01-23
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: ""
        date_from: 2000-01-23
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        number:
          description: Invoice legal number
          readOnly: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/Status260Enum'
          readOnly: true
        date_from:
          description: Beginning of charge period
          format: date
          readOnly: true
          type: string
        date_to:
          description: End of charge period
          format: date
          readOnly: true
          type: string
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        charges:
          items:
            nullable: true
            type: string
          type: array
      required:
      - amount
      - charges
      - date_from
      - date_to
      - number
      - status
      - uuid
      type: object
    JSONWebToken:
      example:
        password: password
        captcha: captcha
        username: username
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        captcha:
          type: string
          writeOnly: true
      required:
      - password
      - username
      type: object
    JWTRefreshResponse:
      example:
        access: access
        refresh: refresh
        status: status
      properties:
        access:
          type: string
        refresh:
          type: string
        status:
          type: string
      required:
      - access
      - refresh
      - status
      type: object
    JWTResponse:
      example:
        access: access
        refresh: refresh
        status: status
      properties:
        access:
          type: string
        refresh:
          type: string
        status:
          type: string
      required:
      - access
      - refresh
      - status
      type: object
    MaritalStatusEnum:
      enum:
      - NOT_DISCLOSED
      - SINGLE
      - MARRIED_CIVIL_PARTNER
      - CIVIL_PARTNER
      - DIVORCED_DISSOLVED_CIVIL_PARTNERSHIP
      - WIDOWED_SURVIVING_CIVIL_PARTNER
      - SEPARATED
      type: string
    Message:
      example:
        attachments:
        - attachment_filename: attachment_filename
          attachment_extension: attachment_extension
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - attachment_filename: attachment_filename
          attachment_extension: attachment_extension
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created: 2000-01-23T04:56:07.000+00:00
        user: user
        read_date: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        content: content
      properties:
        user:
          readOnly: true
          type: string
        read_date:
          format: date-time
          readOnly: true
          type: string
        content:
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          readOnly: true
          type: array
        uuid:
          format: uuid
          readOnly: true
          type: string
      required:
      - attachments
      - created
      - read_date
      - user
      - uuid
      type: object
    MinimumAppVersion:
      example:
        required: ""
      properties:
        required:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          readOnly: true
      required:
      - required
      type: object
    ModelPortfolioForecastRequest:
      example:
        recurring_amount: 146581298050.29453
        recurring_period: 7
        time_horizon: 4
        model_portfolio: model_portfolio
        initial_amount: 602745618307.4376
      properties:
        time_horizon:
          maximum: 50
          minimum: 1
          type: integer
        initial_amount:
          format: double
          maximum: 1000000000000
          minimum: 1
          type: number
        recurring_amount:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        recurring_period:
          maximum: 12
          minimum: 0
          type: integer
        model_portfolio:
          type: string
      required:
      - initial_amount
      - model_portfolio
      - time_horizon
      type: object
    NationalDocument:
      example:
        code: code
        name: name
        countries:
        - countries
        - countries
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        code:
          maxLength: 20
          type: string
        name:
          maxLength: 120
          type: string
        countries:
          items:
            type: string
          type: array
      required:
      - code
      - countries
      - name
      - uuid
      type: object
    NationalityCreate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        country: country
        document_number: document_number
        document_type: document_type
      properties:
        country:
          type: string
        document_number:
          nullable: true
          type: string
        document_type:
          type: string
      required:
      - country
      type: object
    NationalityList:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        country: country
        document_number: document_number
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        document_type: document_type
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        country:
          type: string
        document_type:
          type: string
        document_number:
          readOnly: true
          type: string
      required:
      - country
      - document_number
      - uuid
      type: object
    NationalityUpdate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        country: country
        document_number: document_number
        document_type: document_type
      properties:
        country:
          type: string
        document_number:
          nullable: true
          type: string
        document_type:
          type: string
      required:
      - country
      type: object
    NucoroSetting:
      example:
        key: key
      properties:
        key:
          type: string
      required:
      - key
      type: object
    NullEnum:
      enum:
      - null
      type: string
    OnboardingResponse:
      example:
        access: access
        refresh: refresh
        status: status
      properties:
        access:
          type: string
        refresh:
          type: string
        status:
          type: string
      required:
      - access
      - refresh
      - status
      type: object
    OnboardingToken:
      example:
        email: email
        token: token
      properties:
        email:
          type: string
        token:
          type: string
      required:
      - email
      - token
      type: object
    OrderList:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        reason: reason
        amount: 205491236614.08057
        method: ""
        created: 2000-01-23T04:56:07.000+00:00
        completed: 2000-01-23T04:56:07.000+00:00
        withdrawal: withdrawal
        price_avg: -706837403899.4109
        limit_price: 5.637376656633329
        shares: -839834361907.7977
        duration: duration
        rebalance: rebalance
        trade: trade
        stop_price: 5.962133916683182
        portfolio: portfolio
        currency:
          symbol: symbol
          code: code
          name: name
        asset: ""
        order_type: ""
        status: ""
      properties:
        asset:
          allOf:
          - $ref: '#/components/schemas/RelatedAssetSerializerWithAssetCategories'
          readOnly: true
        trade:
          readOnly: true
          type: string
        order_type:
          allOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          readOnly: true
        method:
          allOf:
          - $ref: '#/components/schemas/OrderListMethodEnum'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/OrderListStatusEnum'
          readOnly: true
        reason:
          readOnly: true
          type: string
        completed:
          format: date-time
          readOnly: true
          type: string
        rebalance:
          readOnly: true
          type: string
        portfolio:
          readOnly: true
          type: string
        shares:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        price_avg:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        withdrawal:
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        stop_price:
          format: double
          nullable: true
          readOnly: true
          type: number
        limit_price:
          format: double
          nullable: true
          readOnly: true
          type: number
        duration:
          readOnly: true
          type: string
      required:
      - amount
      - asset
      - completed
      - created
      - currency
      - duration
      - limit_price
      - method
      - order_type
      - portfolio
      - price_avg
      - reason
      - rebalance
      - shares
      - status
      - stop_price
      - trade
      - withdrawal
      type: object
    OrderListMethodEnum:
      enum:
      - MARKET
      - QUOTE
      - INTERNAL
      - LIMIT
      - STOP
      type: string
    OrderListStatusEnum:
      enum:
      - PENDING
      - WAITING_FOR_PRICE
      - PROCESSING
      - QUOTED
      - COMPLETED
      - VERIFIED
      - ERROR
      - CANCELLED
      type: string
    OrderTypeEnum:
      enum:
      - BUY
      - SELL
      - VERIFICATION
      type: string
    PaginatedAccessLogList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - country: country
          device_model: device_model
          os: os
          city: city
          created: 2000-01-23T04:56:07.000+00:00
          os_version: os_version
          channel: ""
          ip_address: ip_address
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          device_brand: device_brand
          browser: browser
          browser_version: browser_version
          user_agent: user_agent
        - country: country
          device_model: device_model
          os: os
          city: city
          created: 2000-01-23T04:56:07.000+00:00
          os_version: os_version
          channel: ""
          ip_address: ip_address
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          device_brand: device_brand
          browser: browser
          browser_version: browser_version
          user_agent: user_agent
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/AccessLog'
          type: array
      type: object
    PaginatedAddressListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - country: country
          postcode: postcode
          locality: locality
          region: region
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          line2: line2
          line1: line1
        - country: country
          postcode: postcode
          locality: locality
          region: region
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          line2: line2
          line1: line1
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/AddressList'
          type: array
      type: object
    PaginatedAllocationListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - earnings: -706837403899.4109
          performance: 2.3021358869347655
          balance: -839834361907.7977
          valuation_date: 2000-01-23
          trade_total: 127475331326.66577
          invested: 205491236614.08057
          cash_active: 192426783336.63647
        - earnings: -706837403899.4109
          performance: 2.3021358869347655
          balance: -839834361907.7977
          valuation_date: 2000-01-23
          trade_total: 127475331326.66577
          invested: 205491236614.08057
          cash_active: 192426783336.63647
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/AllocationList'
          type: array
      type: object
    PaginatedAssessmentList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - risk_level: 6
          created: 2000-01-23T04:56:07.000+00:00
          completed: 2000-01-23T04:56:07.000+00:00
          choices:
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            question_code: question_code
            description: description
            order: 2624
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            question_code: question_code
            description: description
            order: 2624
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - risk_level: 6
          created: 2000-01-23T04:56:07.000+00:00
          completed: 2000-01-23T04:56:07.000+00:00
          choices:
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            question_code: question_code
            description: description
            order: 2624
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            question_code: question_code
            description: description
            order: 2624
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Assessment'
          type: array
      type: object
    PaginatedAssetCategoryList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - code: code
          name: name
          type: type
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 2624
        - code: code
          name: name
          type: type
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 2624
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/AssetCategory'
          type: array
      type: object
    PaginatedAssetGrowthList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - amount: 205.49123661408066
          year: 0
        - amount: 205.49123661408066
          year: 0
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/AssetGrowth'
          type: array
      type: object
    PaginatedAssetListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - market: market
          ticker: ticker
          extra_data:
            key: ""
          name: name
          asset_type: ""
          currency: currency
          categories:
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isin: isin
          status: ""
        - market: market
          ticker: ticker
          extra_data:
            key: ""
          name: name
          asset_type: ""
          currency: currency
          categories:
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isin: isin
          status: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/AssetList'
          type: array
      type: object
    PaginatedBankAccountListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - account_number: account_number
          joint: true
          account_holder_name: account_holder_name
          swift_code: swift_code
          iban: iban
          bank_name: bank_name
          account_sort_code: account_sort_code
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - account_number: account_number
          joint: true
          account_holder_name: account_holder_name
          swift_code: swift_code
          iban: iban
          bank_name: bank_name
          account_sort_code: account_sort_code
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/BankAccountList'
          type: array
      type: object
    PaginatedBasePortfolioTypeRestrictionsList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - date_to: 2000-01-23
          key: key
          clean_value: 0.8008281904610115
          date_from: 2000-01-23
        - date_to: 2000-01-23
          key: key
          clean_value: 0.8008281904610115
          date_from: 2000-01-23
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/BasePortfolioTypeRestrictions'
          type: array
      type: object
    PaginatedCategoryList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - code: code
          extra_data:
            key: ""
          name: name
          description: description
          categories:
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - code: code
          extra_data:
            key: ""
          name: name
          description: description
          categories:
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Category'
          type: array
      type: object
    PaginatedClientDetailList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - birthdate: 2000-01-23
          gender: ""
          country_birth:
            code: code
            long_name_it_ch: long_name_it_ch
            name_fr_ch: name_fr_ch
            long_name_fr_ch: long_name_fr_ch
            name_it_ch: name_it_ch
            name_en_gb: name_en_gb
            long_name_de_ch: long_name_de_ch
            long_name: long_name
            name_de_ch: name_de_ch
            long_name_en_gb: long_name_en_gb
            eea_country: true
            name_en_ch: name_en_ch
            name: name
            name_es_es: name_es_es
            id: 0
            long_name_en_ch: long_name_en_ch
            long_name_es_es: long_name_es_es
            iso3: iso3
          utm_medium: utm_medium
          language: language
          title: ""
          data_consent: true
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tos_consent: true
          email_verify_last_request: 2000-01-23T04:56:07.000+00:00
          data_consent_date: 2000-01-23
          kyc_verified: true
          marketing_consent_date: 2000-01-23
          employment_status: ""
          marketing_consent: true
          first_name: first_name
          email: email
          utm_content: utm_content
          onboarded_by: onboarded_by
          profession: profession
          comments: comments
          email_verified: true
          utm_campaign: utm_campaign
          last_login: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          portfolios:
          - portfolios
          - portfolios
          onboarding_token: onboarding_token
          fee_segments:
          - fee_segments
          - fee_segments
          last_name: last_name
          phone_number_verified: 2000-01-23T04:56:07.000+00:00
          middle_name: middle_name
          is_verified: true
          utm_term: utm_term
          risk_level: 1
          marital_status: ""
          extra_data:
            key: ""
          referral_code: referral_code
          phone_number: phone_number
          tax_information:
          - tax_information
          - tax_information
          referred_by: referred_by
          updated: 2000-01-23T04:56:07.000+00:00
          tos_consent_date: 2000-01-23
          successful_referrals: 6
          status: ""
          activated: 2000-01-23T04:56:07.000+00:00
          utm_source: utm_source
        - birthdate: 2000-01-23
          gender: ""
          country_birth:
            code: code
            long_name_it_ch: long_name_it_ch
            name_fr_ch: name_fr_ch
            long_name_fr_ch: long_name_fr_ch
            name_it_ch: name_it_ch
            name_en_gb: name_en_gb
            long_name_de_ch: long_name_de_ch
            long_name: long_name
            name_de_ch: name_de_ch
            long_name_en_gb: long_name_en_gb
            eea_country: true
            name_en_ch: name_en_ch
            name: name
            name_es_es: name_es_es
            id: 0
            long_name_en_ch: long_name_en_ch
            long_name_es_es: long_name_es_es
            iso3: iso3
          utm_medium: utm_medium
          language: language
          title: ""
          data_consent: true
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tos_consent: true
          email_verify_last_request: 2000-01-23T04:56:07.000+00:00
          data_consent_date: 2000-01-23
          kyc_verified: true
          marketing_consent_date: 2000-01-23
          employment_status: ""
          marketing_consent: true
          first_name: first_name
          email: email
          utm_content: utm_content
          onboarded_by: onboarded_by
          profession: profession
          comments: comments
          email_verified: true
          utm_campaign: utm_campaign
          last_login: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          portfolios:
          - portfolios
          - portfolios
          onboarding_token: onboarding_token
          fee_segments:
          - fee_segments
          - fee_segments
          last_name: last_name
          phone_number_verified: 2000-01-23T04:56:07.000+00:00
          middle_name: middle_name
          is_verified: true
          utm_term: utm_term
          risk_level: 1
          marital_status: ""
          extra_data:
            key: ""
          referral_code: referral_code
          phone_number: phone_number
          tax_information:
          - tax_information
          - tax_information
          referred_by: referred_by
          updated: 2000-01-23T04:56:07.000+00:00
          tos_consent_date: 2000-01-23
          successful_referrals: 6
          status: ""
          activated: 2000-01-23T04:56:07.000+00:00
          utm_source: utm_source
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/ClientDetail'
          type: array
      type: object
    PaginatedConversationListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - unreads: 0
          created: 2000-01-23T04:56:07.000+00:00
          subject: subject
          last_message:
            attachments:
            - attachment_filename: attachment_filename
              attachment_extension: attachment_extension
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - attachment_filename: attachment_filename
              attachment_extension: attachment_extension
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created: 2000-01-23T04:56:07.000+00:00
            user: user
            read_date: 2000-01-23T04:56:07.000+00:00
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            content: content
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - unreads: 0
          created: 2000-01-23T04:56:07.000+00:00
          subject: subject
          last_message:
            attachments:
            - attachment_filename: attachment_filename
              attachment_extension: attachment_extension
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - attachment_filename: attachment_filename
              attachment_extension: attachment_extension
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            created: 2000-01-23T04:56:07.000+00:00
            user: user
            read_date: 2000-01-23T04:56:07.000+00:00
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            content: content
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/ConversationList'
          type: array
      type: object
    PaginatedCoreCategoryGroupList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - risk_level: 2624
          code: code
          categories:
          - code: code
            extra_data:
              key: ""
            name: name
            description: description
            categories:
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - code: code
            extra_data:
              key: ""
            name: name
            description: description
            categories:
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - risk_level: 2624
          code: code
          categories:
          - code: code
            extra_data:
              key: ""
            name: name
            description: description
            categories:
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - code: code
            extra_data:
              key: ""
            name: name
            description: description
            categories:
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/CoreCategoryGroup'
          type: array
      type: object
    PaginatedCountryListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - eea_country: true
          code: code
          name: name
          long_name: long_name
          iso3: iso3
        - eea_country: true
          code: code
          name: name
          long_name: long_name
          iso3: iso3
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/CountryList'
          type: array
      type: object
    PaginatedDepositListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - reference: reference
          amount: -839834361907.7977
          transacted_at: 2000-01-23T04:56:07.000+00:00
          extra_data:
            key: ""
          completed: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deposit_type: ""
          status: ""
        - reference: reference
          amount: -839834361907.7977
          transacted_at: 2000-01-23T04:56:07.000+00:00
          extra_data:
            key: ""
          completed: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deposit_type: ""
          status: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/DepositList'
          type: array
      type: object
    PaginatedDocumentList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - path: https://openapi-generator.tech
          extra_data:
            key: ""
          name: name
          description: description
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - path: https://openapi-generator.tech
          extra_data:
            key: ""
          name: name
          description: description
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Document'
          type: array
      type: object
    PaginatedFeedActivityListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - created: 2000-01-23T04:56:07.000+00:00
          activity_type: ""
          activity_data:
            key: ""
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - created: 2000-01-23T04:56:07.000+00:00
          activity_type: ""
          activity_data:
            key: ""
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/FeedActivityList'
          type: array
      type: object
    PaginatedGoalList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - recurring_amount: -706837403899.4109
          risk_level: 19536
          portfolio: portfolio
          created: 2000-01-23T04:56:07.000+00:00
          goal_amount: 80082819046.19315
          name: name
          initial_amount: 602745618307.0801
          deadline: 2000-01-23
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - recurring_amount: -706837403899.4109
          risk_level: 19536
          portfolio: portfolio
          created: 2000-01-23T04:56:07.000+00:00
          goal_amount: 80082819046.19315
          name: name
          initial_amount: 602745618307.0801
          deadline: 2000-01-23
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Goal'
          type: array
      type: object
    PaginatedIntradayPriceList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - amount: -839834361907.7977
          datetime: 2000-01-23T04:56:07.000+00:00
          high_price: -706837403899.4109
          open_price: 205491236614.08057
          low_price: 192426783336.63647
          previous_close_price: 127475331326.66577
        - amount: -839834361907.7977
          datetime: 2000-01-23T04:56:07.000+00:00
          high_price: -706837403899.4109
          open_price: 205491236614.08057
          low_price: 192426783336.63647
          previous_close_price: 127475331326.66577
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/IntradayPrice'
          type: array
      type: object
    PaginatedInvestorFeeList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - created: 2000-01-23T04:56:07.000+00:00
          concept: concept
          value_unit: ""
          fee_type: ""
          date_to: 2000-01-23
          value: 8.008281904610115
          amount_from: 205491236.61408067
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated: 2000-01-23T04:56:07.000+00:00
          date_from: 2000-01-23
          amount_to: -706837403.899411
        - created: 2000-01-23T04:56:07.000+00:00
          concept: concept
          value_unit: ""
          fee_type: ""
          date_to: 2000-01-23
          value: 8.008281904610115
          amount_from: 205491236.61408067
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated: 2000-01-23T04:56:07.000+00:00
          date_from: 2000-01-23
          amount_to: -706837403.899411
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/InvestorFee'
          type: array
      type: object
    PaginatedInvestorModelPortfolioList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - risk_level: 6
          allocation:
          - weight: 0.14658129805029452
            asset:
              market: market
              ticker: ticker
              extra_data:
                key: ""
              name: name
              currency: currency
              categories:
              - categories
              - categories
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isin: isin
          - weight: 0.14658129805029452
            asset:
              market: market
              ticker: ticker
              extra_data:
                key: ""
              name: name
              currency: currency
              categories:
              - categories
              - categories
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isin: isin
          extra_data:
            key: ""
          name: name
          cash_weight: -8.398343619077977
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - risk_level: 6
          allocation:
          - weight: 0.14658129805029452
            asset:
              market: market
              ticker: ticker
              extra_data:
                key: ""
              name: name
              currency: currency
              categories:
              - categories
              - categories
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isin: isin
          - weight: 0.14658129805029452
            asset:
              market: market
              ticker: ticker
              extra_data:
                key: ""
              name: name
              currency: currency
              categories:
              - categories
              - categories
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isin: isin
          extra_data:
            key: ""
          name: name
          cash_weight: -8.398343619077977
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/InvestorModelPortfolio'
          type: array
      type: object
    PaginatedInvestorWithdrawalListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - amount: -839834361907.7977
          extra_data:
            key: ""
          withdrawal_type: withdrawal_type
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: ""
        - amount: -839834361907.7977
          extra_data:
            key: ""
          withdrawal_type: withdrawal_type
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/InvestorWithdrawalList'
          type: array
      type: object
    PaginatedInvoiceListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - number: number
          amount: -839834361907.7977
          charges:
          - charges
          - charges
          date_to: 2000-01-23
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: ""
          date_from: 2000-01-23
        - number: number
          amount: -839834361907.7977
          charges:
          - charges
          - charges
          date_to: 2000-01-23
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: ""
          date_from: 2000-01-23
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/InvoiceList'
          type: array
      type: object
    PaginatedMessageList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - attachments:
          - attachment_filename: attachment_filename
            attachment_extension: attachment_extension
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - attachment_filename: attachment_filename
            attachment_extension: attachment_extension
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          user: user
          read_date: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          content: content
        - attachments:
          - attachment_filename: attachment_filename
            attachment_extension: attachment_extension
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - attachment_filename: attachment_filename
            attachment_extension: attachment_extension
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created: 2000-01-23T04:56:07.000+00:00
          user: user
          read_date: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          content: content
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Message'
          type: array
      type: object
    PaginatedNationalDocumentList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - code: code
          name: name
          countries:
          - countries
          - countries
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - code: code
          name: name
          countries:
          - countries
          - countries
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/NationalDocument'
          type: array
      type: object
    PaginatedNationalityListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - country: country
          document_number: document_number
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          document_type: document_type
        - country: country
          document_number: document_number
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          document_type: document_type
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/NationalityList'
          type: array
      type: object
    PaginatedOrderListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - reason: reason
          amount: 205491236614.08057
          method: ""
          created: 2000-01-23T04:56:07.000+00:00
          completed: 2000-01-23T04:56:07.000+00:00
          withdrawal: withdrawal
          price_avg: -706837403899.4109
          limit_price: 5.637376656633329
          shares: -839834361907.7977
          duration: duration
          rebalance: rebalance
          trade: trade
          stop_price: 5.962133916683182
          portfolio: portfolio
          currency:
            symbol: symbol
            code: code
            name: name
          asset: ""
          order_type: ""
          status: ""
        - reason: reason
          amount: 205491236614.08057
          method: ""
          created: 2000-01-23T04:56:07.000+00:00
          completed: 2000-01-23T04:56:07.000+00:00
          withdrawal: withdrawal
          price_avg: -706837403899.4109
          limit_price: 5.637376656633329
          shares: -839834361907.7977
          duration: duration
          rebalance: rebalance
          trade: trade
          stop_price: 5.962133916683182
          portfolio: portfolio
          currency:
            symbol: symbol
            code: code
            name: name
          asset: ""
          order_type: ""
          status: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/OrderList'
          type: array
      type: object
    PaginatedPortfolioListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - advice_engine: advice_engine
          time_horizon: 6
          created: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          risk_level: 0
          advisor: advisor
          balance: 146581298050.29453
          name: name
          client: client
          currency: currency
          portfolio_type: portfolio_type
          invested: 596213391668.3182
          status: ""
        - advice_engine: advice_engine
          time_horizon: 6
          created: 2000-01-23T04:56:07.000+00:00
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          risk_level: 0
          advisor: advisor
          balance: 146581298050.29453
          name: name
          client: client
          currency: currency
          portfolio_type: portfolio_type
          invested: 596213391668.3182
          status: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/PortfolioList'
          type: array
      type: object
    PaginatedPortfolioPerformanceList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - performance: 205491236614.08057
          valuation_date: 2000-01-23
          percentage: -839834361907.7977
        - performance: 205491236614.08057
          valuation_date: 2000-01-23
          percentage: -839834361907.7977
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/PortfolioPerformance'
          type: array
      type: object
    PaginatedPortfolioPerformancePositionsList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - valuation_datetime: 2000-01-23T04:56:07.000+00:00
          unrealised_pl: 860288848786.5151
          weight: -706837403899.4109
          asset_currency_value: 127475331326.66577
          position_return: 412280248300.6218
          daily_pl: 477256389677.17676
          avg_entry_price: -170878394023.21277
          shares: -839834361907.7977
          earnings: -594575395399.5356
          fx_rate_account: 192426783336.63647
          price: 205491236614.08057
          last_update: 2000-01-23T04:56:07.000+00:00
          currency: currency
          asset: asset
          realised_pl: -276784650149.6178
          value: -539572822613.04694
        - valuation_datetime: 2000-01-23T04:56:07.000+00:00
          unrealised_pl: 860288848786.5151
          weight: -706837403899.4109
          asset_currency_value: 127475331326.66577
          position_return: 412280248300.6218
          daily_pl: 477256389677.17676
          avg_entry_price: -170878394023.21277
          shares: -839834361907.7977
          earnings: -594575395399.5356
          fx_rate_account: 192426783336.63647
          price: 205491236614.08057
          last_update: 2000-01-23T04:56:07.000+00:00
          currency: currency
          asset: asset
          realised_pl: -276784650149.6178
          value: -539572822613.04694
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/PortfolioPerformancePositions'
          type: array
      type: object
    PaginatedPortfolioTypeList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - code: code
          name: name
        - code: code
          name: name
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/PortfolioType'
          type: array
      type: object
    PaginatedPresetCategoryGroupList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - code: code
          categories:
          - code: code
            extra_data:
              key: ""
            name: name
            description: description
            categories:
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - code: code
            extra_data:
              key: ""
            name: name
            description: description
            categories:
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - code: code
          categories:
          - code: code
            extra_data:
              key: ""
            name: name
            description: description
            categories:
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - code: code
            extra_data:
              key: ""
            name: name
            description: description
            categories:
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            - code: code
              name: name
              type: type
              uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              order: 2624
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/PresetCategoryGroup'
          type: array
      type: object
    PaginatedPriceList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - date: 2000-01-23T04:56:07.000+00:00
          amount: -839834361907.7977
          datetime: 2000-01-23T04:56:07.000+00:00
        - date: 2000-01-23T04:56:07.000+00:00
          amount: -839834361907.7977
          datetime: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Price'
          type: array
      type: object
    PaginatedQuestionList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          choices:
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            description: description
            order: 6
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            description: description
            order: 6
          order: 0
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          choices:
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            description: description
            order: 6
          - code: code
            created: 2000-01-23T04:56:07.000+00:00
            description: description
            order: 6
          order: 0
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Question'
          type: array
      type: object
    PaginatedRebalanceList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - reason: reason
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          broker_orders:
          - broker_orders
          - broker_orders
          status: ""
        - reason: reason
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          broker_orders:
          - broker_orders
          - broker_orders
          status: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Rebalance'
          type: array
      type: object
    PaginatedStatementList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - created: 2000-01-23T04:56:07.000+00:00
          date_to: 2000-01-23
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          date_from: 2000-01-23
          status: ""
        - created: 2000-01-23T04:56:07.000+00:00
          date_to: 2000-01-23
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          date_from: 2000-01-23
          status: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
      type: object
    PaginatedTaxInformationListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - country: country
          document_number: document_number
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          document_type: document_type
        - country: country
          document_number: document_number
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          document_type: document_type
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/TaxInformationList'
          type: array
      type: object
    PaginatedTaxReportList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - created: 2000-01-23T04:56:07.000+00:00
          date_to: 2000-01-23
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          date_from: 2000-01-23
          status: ""
        - created: 2000-01-23T04:56:07.000+00:00
          date_to: 2000-01-23
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          date_from: 2000-01-23
          status: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/TaxReport'
          type: array
      type: object
    PaginatedTosList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - next_tos_uuid: next_tos_uuid
          previous_tos_uuid: previous_tos_uuid
          published: 2000-01-23
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version: version
          content: content
        - next_tos_uuid: next_tos_uuid
          previous_tos_uuid: previous_tos_uuid
          published: 2000-01-23
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version: version
          content: content
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Tos'
          type: array
      type: object
    PaginatedVerificationDocumentList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - document_back: document_back
          document_front: document_front
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - document_back: document_back
          document_front: document_front
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/VerificationDocument'
          type: array
      type: object
    PaginatedVerificationListList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - verify_type: ""
          result: ""
          created: 2000-01-23T04:56:07.000+00:00
          verification_documents:
          - verification_documents
          - verification_documents
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
        - verify_type: ""
          result: ""
          created: 2000-01-23T04:56:07.000+00:00
          verification_documents:
          - verification_documents
          - verification_documents
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/VerificationList'
          type: array
      type: object
    PaginatedWatchlistList:
      example:
        next: http://api.example.org/accounts/?offset=400&limit=100
        previous: http://api.example.org/accounts/?offset=200&limit=100
        count: 123
        results:
        - assets:
          - market: market
            ticker: ticker
            extra_data:
              key: ""
            name: name
            currency: currency
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isin: isin
          - market: market
            ticker: ticker
            extra_data:
              key: ""
            name: name
            currency: currency
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isin: isin
          name: name
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - assets:
          - market: market
            ticker: ticker
            extra_data:
              key: ""
            name: name
            currency: currency
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isin: isin
          - market: market
            ticker: ticker
            extra_data:
              key: ""
            name: name
            currency: currency
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isin: isin
          name: name
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count:
          example: 123
          type: integer
        next:
          example: http://api.example.org/accounts/?offset=400&limit=100
          format: uri
          nullable: true
          type: string
        previous:
          example: http://api.example.org/accounts/?offset=200&limit=100
          format: uri
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/Watchlist'
          type: array
      type: object
    PasswordReset:
      example:
        password: password
        email: email
        token: token
      properties:
        email:
          format: email
          type: string
        token:
          type: string
        password:
          type: string
      required:
      - email
      - password
      - token
      type: object
    PasswordResetRequest:
      example:
        email: email
      properties:
        email:
          format: email
          type: string
      required:
      - email
      type: object
    PasswordUpdate:
      example:
        old_password: old_password
        new_password: new_password
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required:
      - new_password
      type: object
    PatchedAddressUpdate:
      example:
        country: country
        postcode: postcode
        locality: locality
        region: region
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        line2: line2
        line1: line1
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        line1:
          type: string
        line2:
          nullable: true
          type: string
        postcode:
          type: string
        locality:
          type: string
        country:
          type: string
        region:
          nullable: true
          type: string
      type: object
    PatchedApplicationClientUpdate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        birthdate: 2000-01-23
        gender: ""
        country_birth:
          code: code
          long_name_it_ch: long_name_it_ch
          name_fr_ch: name_fr_ch
          long_name_fr_ch: long_name_fr_ch
          name_it_ch: name_it_ch
          name_en_gb: name_en_gb
          long_name_de_ch: long_name_de_ch
          long_name: long_name
          name_de_ch: name_de_ch
          long_name_en_gb: long_name_en_gb
          eea_country: true
          name_en_ch: name_en_ch
          name: name
          name_es_es: name_es_es
          id: 0
          long_name_en_ch: long_name_en_ch
          long_name_es_es: long_name_es_es
          iso3: iso3
        email_verified_last_request: 2000-01-23T04:56:07.000+00:00
        utm_medium: utm_medium
        language: language
        title: ""
        data_consent: true
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tos_consent: true
        password: password
        email_verify_last_request: 2000-01-23T04:56:07.000+00:00
        data_consent_date: 2000-01-23
        kyc_verified: true
        marketing_consent_date: 2000-01-23
        employment_status: ""
        marketing_consent: true
        first_name: first_name
        email: email
        utm_content: utm_content
        onboarded_by: onboarded_by
        profession: profession
        comments: comments
        email_verified: true
        utm_campaign: utm_campaign
        last_login: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        portfolios:
        - portfolios
        - portfolios
        onboarding_token: onboarding_token
        fee_segments:
        - fee_segments
        - fee_segments
        last_name: last_name
        phone_number_verified: 2000-01-23T04:56:07.000+00:00
        middle_name: middle_name
        is_verified: true
        utm_term: utm_term
        risk_level: 6
        marital_status: ""
        extra_data:
          key: ""
        referral_code: referral_code
        phone_number: phone_number
        tax_information:
        - tax_information
        - tax_information
        referred_by: referred_by
        updated: 2000-01-23T04:56:07.000+00:00
        tos_consent_date: 2000-01-23
        successful_referrals: 0
        status: ""
        activated: 2000-01-23T04:56:07.000+00:00
        utm_source: utm_source
      properties:
        email:
          format: email
          type: string
        birthdate:
          format: date
          type: string
        tos_consent:
          type: boolean
        marketing_consent:
          type: boolean
        data_consent:
          type: boolean
        tos_consent_date:
          format: date
          readOnly: true
          type: string
        tax_information:
          items:
            nullable: true
            type: string
          readOnly: true
          type: array
        country_birth:
          $ref: '#/components/schemas/CountryField'
        last_login:
          format: date-time
          readOnly: true
          type: string
        referred_by:
          nullable: true
          type: string
        successful_referrals:
          readOnly: true
          type: integer
        kyc_verified:
          readOnly: true
          type: boolean
        is_verified:
          readOnly: true
          type: boolean
        fee_segments:
          items:
            type: string
          readOnly: true
          type: array
        extra_data:
          additionalProperties: {}
          type: object
        portfolios:
          items:
            type: string
          readOnly: true
          type: array
        onboarded_by:
          nullable: true
          type: string
        risk_level:
          readOnly: true
          type: integer
        onboarding_token:
          readOnly: true
          type: string
        password:
          type: string
          writeOnly: true
        email_verified_last_request:
          format: date-time
          type: string
        uuid:
          format: uuid
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        updated:
          format: date-time
          readOnly: true
          title: Updated on
          type: string
        comments:
          nullable: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB65Enum'
          readOnly: true
        email_verified:
          type: boolean
        email_verify_last_request:
          format: date-time
          nullable: true
          type: string
        title:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TitleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        first_name:
          nullable: true
          type: string
        middle_name:
          nullable: true
          type: string
        last_name:
          nullable: true
          type: string
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        marital_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone_number:
          nullable: true
          type: string
        phone_number_verified:
          format: date-time
          nullable: true
          type: string
        language:
          maxLength: 5
          type: string
        employment_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/EmploymentStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        profession:
          maxLength: 250
          nullable: true
          type: string
        referral_code:
          maxLength: 250
          nullable: true
          type: string
        activated:
          format: date-time
          nullable: true
          type: string
        utm_source:
          maxLength: 250
          type: string
        utm_medium:
          maxLength: 250
          type: string
        utm_campaign:
          maxLength: 250
          type: string
        utm_term:
          maxLength: 250
          type: string
        utm_content:
          maxLength: 250
          type: string
        marketing_consent_date:
          format: date
          readOnly: true
          type: string
        data_consent_date:
          format: date
          readOnly: true
          type: string
      type: object
    PatchedAssessment:
      example:
        risk_level: 0
        created: 2000-01-23T04:56:07.000+00:00
        completed: 2000-01-23T04:56:07.000+00:00
        choices:
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          question_code: question_code
          description: description
          order: 2624
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          question_code: question_code
          description: description
          order: 2624
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        completed:
          format: date-time
          nullable: true
          type: string
        choices:
          items:
            $ref: '#/components/schemas/RiskChoiceQuestionCode'
          type: array
        status:
          $ref: '#/components/schemas/AssessmentStatusEnum'
        risk_level:
          readOnly: true
          type: integer
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
      type: object
    PatchedBankAccountCreateUpdate:
      example:
        account_number: account_number
        joint: true
        account_holder_name: account_holder_name
        swift_code: swift_code
        iban: iban
        bank_name: bank_name
        account_sort_code: account_sort_code
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        account_number:
          maxLength: 30
          nullable: true
          type: string
        account_sort_code:
          maxLength: 6
          nullable: true
          type: string
        account_holder_name:
          nullable: true
          type: string
        joint:
          type: boolean
        bank_name:
          maxLength: 250
          nullable: true
          type: string
        iban:
          maxLength: 34
          nullable: true
          type: string
        swift_code:
          maxLength: 11
          nullable: true
          type: string
      type: object
    PatchedGoal:
      example:
        recurring_amount: -706837403899.4109
        risk_level: 19536
        portfolio: portfolio
        created: 2000-01-23T04:56:07.000+00:00
        goal_amount: 80082819046.19315
        name: name
        initial_amount: 602745618307.0801
        deadline: 2000-01-23
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 150
          type: string
        portfolio:
          nullable: true
          type: string
        goal_amount:
          description: Desired amount needed to fulfill the goal
          format: double
          maximum: 1000000000000
          minimum: 0.1
          type: number
        deadline:
          description: Due date to reach the goal.
          format: date
          type: string
        initial_amount:
          description: Initial deposit amount to start from. No sense to start by
            0
          format: double
          maximum: 1000000000000
          minimum: 0.1
          type: number
        recurring_amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
          type: number
        risk_level:
          maximum: 32767
          minimum: 0
          type: integer
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
      type: object
    PatchedInvestorFee:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        concept: concept
        value_unit: ""
        fee_type: ""
        date_to: 2000-01-23
        value: 8.008281904610115
        amount_from: 205491236.61408067
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        date_from: 2000-01-23
        amount_to: -706837403.899411
      properties:
        value:
          description: Determinates a percentage or an amount (between 0 and 1 if
            percentage otherwise Positive Decimal)
          format: double
          maximum: 100
          minimum: 0
          type: number
        value_unit:
          allOf:
          - $ref: '#/components/schemas/ValueUnitEnum'
          description: Determines the type of the value(Fixed, Percentage)
        fee_type:
          allOf:
          - $ref: '#/components/schemas/FeeTypeEnum'
          description: Each choice should have a related method on fee model that
            contains the logic to charge the client
        concept:
          description: Describes the concept that will be shown on invoice
          maxLength: 100
          type: string
        date_from:
          description: Defines the end date when the percentage should be applied
          format: date
          nullable: true
          type: string
        date_to:
          description: Defines the start date when the percentage should be applied
          format: date
          nullable: true
          type: string
        amount_from:
          description: Defines the amount start range when the percentage should be
            applied
          format: double
          maximum: 1000000000
          minimum: -1000000000
          nullable: true
          type: number
        amount_to:
          description: Defines the amount end range when the percentage should be
            applied
          format: double
          maximum: 1000000000
          minimum: -1000000000
          nullable: true
          type: number
        uuid:
          format: uuid
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        updated:
          format: date-time
          readOnly: true
          title: Updated on
          type: string
      type: object
    PatchedNationalityUpdate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        country: country
        document_number: document_number
        document_type: document_type
      properties:
        country:
          type: string
        document_number:
          nullable: true
          type: string
        document_type:
          type: string
      type: object
    PatchedPasswordResetRequest:
      example:
        email: email
      properties:
        email:
          format: email
          type: string
      type: object
    PatchedPortfolioUpdate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        advice_engine: advice_engine
        time_horizon: 19750
        created: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        risk_level: 2624
        advisor: advisor
        extra_data:
          key: ""
        name: name
        client: client
        currency: currency
        portfolio_type: portfolio_type
        status: ""
        activated: 2000-01-23T04:56:07.000+00:00
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 150
          type: string
        portfolio_type:
          type: string
        risk_level:
          maximum: 32767
          minimum: 0
          nullable: true
          type: integer
        time_horizon:
          maximum: 32767
          minimum: 0
          nullable: true
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/Status2efEnum'
          readOnly: true
        currency:
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        activated:
          format: date-time
          readOnly: true
          type: string
        advisor:
          type: string
        advice_engine:
          type: string
        extra_data:
          additionalProperties: {}
          type: object
        client:
          type: string
      type: object
    PatchedTaxInformationCreateUpdate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        country: country
        document_number: document_number
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        document_type: document_type
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        country:
          type: string
        document_number:
          type: string
        document_type:
          type: string
      type: object
    PatchedVerificationDocument:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        document_front:
          type: string
        document_back:
          type: string
      type: object
    PortalSettingValueList:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        id: 0
        portal: 6
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        value: value
        key: 1
      properties:
        id:
          readOnly: true
          type: integer
        uuid:
          format: uuid
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        updated:
          format: date-time
          readOnly: true
          title: Updated on
          type: string
        value:
          maxLength: 250
          type: string
        portal:
          type: integer
        key:
          type: integer
      required:
      - created
      - id
      - key
      - portal
      - updated
      - uuid
      - value
      type: object
    PortfolioCreate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        advice_engine: advice_engine
        time_horizon: 6
        created: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        risk_level: 0
        advisor: advisor
        extra_data:
          key: ""
        name: name
        client: client
        currency: currency
        portfolio_type: portfolio_type
        status: ""
        activated: 2000-01-23T04:56:07.000+00:00
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 150
          type: string
        portfolio_type:
          type: string
        risk_level:
          type: integer
        time_horizon:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/Status2efEnum'
          readOnly: true
        currency:
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        activated:
          format: date-time
          readOnly: true
          type: string
        advisor:
          type: string
        advice_engine:
          type: string
        extra_data:
          additionalProperties: {}
          type: object
        client:
          type: string
      required:
      - activated
      - advice_engine
      - advisor
      - created
      - name
      - portfolio_type
      - risk_level
      - status
      - time_horizon
      - uuid
      type: object
    PortfolioDetail:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        advice_engine: advice_engine
        time_horizon: 19750
        created: 2000-01-23T04:56:07.000+00:00
        deposit_reference: deposit_reference
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        risk_level: 2624
        advisor: advisor
        performance: 596213391668.3182
        balance: 146581298050.29453
        extra_data:
          key: ""
        name: name
        client: client
        currency: currency
        portfolio_type: portfolio_type
        activated: 2000-01-23T04:56:07.000+00:00
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 150
          type: string
        portfolio_type:
          type: string
        risk_level:
          maximum: 32767
          minimum: 0
          nullable: true
          type: integer
        time_horizon:
          maximum: 32767
          minimum: 0
          nullable: true
          type: integer
        status:
          $ref: '#/components/schemas/Status2efEnum'
        extra_data:
          additionalProperties: {}
          description: Additional Portfolio attributes
          nullable: true
          type: object
        currency:
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        activated:
          format: date-time
          nullable: true
          type: string
        balance:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        performance:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        deposit_reference:
          readOnly: true
          type: string
        advisor:
          nullable: true
          type: string
        advice_engine:
          nullable: true
          type: string
        client:
          type: string
      required:
      - balance
      - created
      - deposit_reference
      - name
      - performance
      - portfolio_type
      - uuid
      type: object
    PortfolioList:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        advice_engine: advice_engine
        time_horizon: 6
        created: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        risk_level: 0
        advisor: advisor
        balance: 146581298050.29453
        name: name
        client: client
        currency: currency
        portfolio_type: portfolio_type
        invested: 596213391668.3182
        status: ""
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        client:
          type: string
        name:
          readOnly: true
          type: string
        portfolio_type:
          type: string
        risk_level:
          readOnly: true
          type: integer
        time_horizon:
          readOnly: true
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/Status2efEnum'
          readOnly: true
        balance:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        invested:
          format: double
          maximum: 1000000000000
          minimum: 0
          type: number
        currency:
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        advisor:
          nullable: true
          type: string
        advice_engine:
          nullable: true
          type: string
      required:
      - balance
      - created
      - invested
      - name
      - portfolio_type
      - risk_level
      - status
      - time_horizon
      - uuid
      type: object
    PortfolioPerformance:
      example:
        performance: 205491236614.08057
        valuation_date: 2000-01-23
        percentage: -839834361907.7977
      properties:
        valuation_date:
          format: date
          type: string
        percentage:
          default: 0.0
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        performance:
          default: 0.0
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
      required:
      - valuation_date
      type: object
    PortfolioPerformancePositions:
      example:
        valuation_datetime: 2000-01-23T04:56:07.000+00:00
        unrealised_pl: 860288848786.5151
        weight: -706837403899.4109
        asset_currency_value: 127475331326.66577
        position_return: 412280248300.6218
        daily_pl: 477256389677.17676
        avg_entry_price: -170878394023.21277
        shares: -839834361907.7977
        earnings: -594575395399.5356
        fx_rate_account: 192426783336.63647
        price: 205491236614.08057
        last_update: 2000-01-23T04:56:07.000+00:00
        currency: currency
        asset: asset
        realised_pl: -276784650149.6178
        value: -539572822613.04694
      properties:
        valuation_datetime:
          format: date-time
          type: string
        last_update:
          format: date-time
          type: string
        asset:
          type: string
        shares:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        price:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        currency:
          type: string
        weight:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        fx_rate_account:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        asset_currency_value:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        value:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        position_return:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        unrealised_pl:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        realised_pl:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        earnings:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        avg_entry_price:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        daily_pl:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
      required:
      - asset
      - avg_entry_price
      - currency
      - daily_pl
      - earnings
      - last_update
      - position_return
      - price
      - realised_pl
      - shares
      - unrealised_pl
      - valuation_datetime
      - value
      type: object
    PortfolioType:
      example:
        code: code
        name: name
      properties:
        code:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
      required:
      - code
      - name
      type: object
    PortfolioTypeRestrictions:
      example:
        portfolio_type: portfolio_type
        key: key
      properties:
        portfolio_type:
          readOnly: true
          type: string
        key:
          readOnly: true
          type: string
      required:
      - key
      - portfolio_type
      type: object
    PortfolioUpdate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        advice_engine: advice_engine
        time_horizon: 19750
        created: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        risk_level: 2624
        advisor: advisor
        extra_data:
          key: ""
        name: name
        client: client
        currency: currency
        portfolio_type: portfolio_type
        status: ""
        activated: 2000-01-23T04:56:07.000+00:00
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 150
          type: string
        portfolio_type:
          type: string
        risk_level:
          maximum: 32767
          minimum: 0
          nullable: true
          type: integer
        time_horizon:
          maximum: 32767
          minimum: 0
          nullable: true
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/Status2efEnum'
          readOnly: true
        currency:
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        activated:
          format: date-time
          readOnly: true
          type: string
        advisor:
          type: string
        advice_engine:
          type: string
        extra_data:
          additionalProperties: {}
          type: object
        client:
          type: string
      required:
      - activated
      - advice_engine
      - advisor
      - created
      - name
      - portfolio_type
      - status
      - uuid
      type: object
    Position:
      example:
        shares: 127475331326.66577
        fx_rate_account: 3.616076749251911
        price: -539572822613.04694
        weight: 9.301444243932576
        asset_currency_value: 2.027123023002322
        asset: ""
        value: 412280248300.6218
      properties:
        asset:
          allOf:
          - $ref: '#/components/schemas/RelatedAssetSerializerWithAssetCategories'
          readOnly: true
        shares:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        price:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        value:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        weight:
          format: double
          readOnly: true
          type: number
        fx_rate_account:
          format: double
          readOnly: true
          type: number
        asset_currency_value:
          format: double
          readOnly: true
          type: number
      required:
      - asset
      - asset_currency_value
      - fx_rate_account
      - price
      - shares
      - value
      - weight
      type: object
    PresetCategoryGroup:
      example:
        code: code
        categories:
        - code: code
          extra_data:
            key: ""
          name: name
          description: description
          categories:
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - code: code
          extra_data:
            key: ""
          name: name
          description: description
          categories:
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          - code: code
            name: name
            type: type
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order: 2624
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        code:
          readOnly: true
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
      required:
      - categories
      - code
      - uuid
      type: object
    Price:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        amount: -839834361907.7977
        datetime: 2000-01-23T04:56:07.000+00:00
      properties:
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
          type: number
        datetime:
          format: date-time
          readOnly: true
          type: string
        date:
          format: date-time
          type: string
      required:
      - amount
      - date
      - datetime
      type: object
    Question:
      example:
        code: code
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        choices:
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          order: 6
        - code: code
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          order: 6
        order: 0
      properties:
        code:
          readOnly: true
          type: string
        order:
          readOnly: true
          type: integer
        description:
          readOnly: true
          type: string
        choices:
          items:
            $ref: '#/components/schemas/RiskChoice'
          type: array
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
      required:
      - choices
      - code
      - created
      - description
      - order
      type: object
    Rebalance:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        reason: reason
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        broker_orders:
        - broker_orders
        - broker_orders
        status: ""
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/RebalanceStatusEnum'
          readOnly: true
        reason:
          description: Cancelled reason
          readOnly: true
          type: string
        broker_orders:
          items:
            type: string
          readOnly: true
          type: array
      required:
      - broker_orders
      - reason
      - status
      - uuid
      type: object
    RebalanceStatusEnum:
      enum:
      - PENDING
      - CREATED
      - ADVICE_REQUESTED
      - ADVICE_COMPLETED
      - IN_PROCESS
      - PROCESSING
      - ORDERS_GENERATED
      - ORDERS_FILLED
      - SELL_TRADES_GENERATED
      - BUY_TRADES_GENERATED
      - POSITIONS_SOLD
      - COMPLETED
      - CANCELLED
      - ERROR
      type: string
    RelatedAssetSerializerWithAssetCategories:
      description: Allow get asset by multiple params or UUID
      example:
        market: market
        ticker: ticker
        extra_data:
          key: ""
        name: name
        currency: currency
        categories:
        - categories
        - categories
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isin: isin
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        market:
          type: string
        isin:
          maxLength: 120
          type: string
        currency:
          type: string
        ticker:
          maxLength: 120
          type: string
        name:
          maxLength: 250
          type: string
        extra_data:
          additionalProperties: {}
          nullable: true
          type: object
        categories:
          items:
            type: string
          readOnly: true
          type: array
      required:
      - categories
      - isin
      - name
      - ticker
      - uuid
      type: object
    RelatedAssetSerializerWithPermission:
      description: Allow get asset by multiple params or UUID
      example:
        market: market
        ticker: ticker
        extra_data:
          key: ""
        name: name
        currency: currency
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isin: isin
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        market:
          type: string
        isin:
          maxLength: 120
          type: string
        currency:
          type: string
        ticker:
          maxLength: 120
          type: string
        name:
          maxLength: 250
          type: string
        extra_data:
          additionalProperties: {}
          nullable: true
          type: object
      required:
      - isin
      - name
      - ticker
      - uuid
      type: object
    RelationshipManager:
      example:
        last_name: last_name
        photo: https://openapi-generator.tech
        phone_number: phone_number
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        first_name: first_name
        email: email
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        first_name:
          nullable: true
          type: string
        last_name:
          nullable: true
          type: string
        phone_number:
          nullable: true
          type: string
        email:
          format: email
          readOnly: true
          type: string
        photo:
          format: uri
          nullable: true
          type: string
      required:
      - email
      - uuid
      type: object
    Response:
      example:
        error: error
        status: ok
      properties:
        status:
          default: ok
          type: string
        error:
          type: string
      type: object
    ResultEnum:
      enum:
      - ACCEPTED
      - REJECTED
      - DOUBT
      type: string
    RiskChoice:
      example:
        code: code
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        order: 6
      properties:
        code:
          readOnly: true
          type: string
        order:
          readOnly: true
          type: integer
        description:
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
      required:
      - code
      - created
      - description
      - order
      type: object
    RiskChoiceQuestionCode:
      example:
        code: code
        created: 2000-01-23T04:56:07.000+00:00
        question_code: question_code
        description: description
        order: 2624
      properties:
        code:
          maxLength: 60
          pattern: ^[-a-zA-Z0-9_]+$
          type: string
        order:
          maximum: 32767
          minimum: 0
          type: integer
        description:
          nullable: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        question_code:
          type: string
      required:
      - code
      - created
      - question_code
      type: object
    Statement:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        date_to: 2000-01-23
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        date_from: 2000-01-23
        status: ""
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        date_from:
          format: date
          type: string
        date_to:
          format: date
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/Status181Enum'
          readOnly: true
      required:
      - created
      - date_from
      - date_to
      - status
      - uuid
      type: object
    Status14bEnum:
      enum:
      - DRAFT
      - PENDING
      - PROCESSING
      - POSITIONS_SOLD
      - REQUESTED
      - COMPLETED
      - ERROR
      - CANCELLED
      type: string
    Status181Enum:
      enum:
      - GENERATING
      - ERROR
      - COMPLETED
      type: string
    Status260Enum:
      enum:
      - PENDING
      - CHARGED
      type: string
    Status2efEnum:
      enum:
      - PENDING
      - ACTIVE
      - DELETING
      - DELETED
      type: string
    Status6f6Enum:
      enum:
      - ACTIVE
      - INACTIVE
      - DELETED
      type: string
    StatusB65Enum:
      enum:
      - ONBOARDING
      - PENDING
      - ACTIVE
      - INACTIVE
      - CUSTODIAN_PENDING
      - KYC_PENDING
      type: string
    StatusB6aEnum:
      enum:
      - PENDING
      - REQUESTED
      - PROCESSING
      - COMPLETED
      - ERROR
      - CANCELLED
      type: string
    StatusBd7Enum:
      enum:
      - PENDING
      - PROCESSING
      - COMPLETED
      - PAUSED
      - REOPENED
      - OTHER
      - ERROR
      - CANCELLED
      - OUTDATED
      type: string
    Subscribe:
      example:
        id: id
        subscription: subscription
      properties:
        id:
          type: string
        subscription:
          type: string
      required:
      - id
      - subscription
      type: object
    TaxInformationCreateUpdate:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        country: country
        document_number: document_number
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        document_type: document_type
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        country:
          type: string
        document_number:
          type: string
        document_type:
          type: string
      required:
      - country
      - document_number
      - uuid
      type: object
    TaxInformationList:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        country: country
        document_number: document_number
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        document_type: document_type
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        country:
          type: string
        document_type:
          type: string
        document_number:
          readOnly: true
          type: string
      required:
      - country
      - document_number
      - uuid
      type: object
    TaxReport:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        date_to: 2000-01-23
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        date_from: 2000-01-23
        status: ""
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        date_from:
          format: date
          readOnly: true
          title: From
          type: string
        date_to:
          format: date
          readOnly: true
          title: To
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/Status181Enum'
          readOnly: true
      required:
      - created
      - date_from
      - date_to
      - status
      - uuid
      type: object
    TitleEnum:
      enum:
      - MR
      - MS
      - MX
      type: string
    TokenRefresh:
      example:
        refresh: refresh
      properties:
        refresh:
          type: string
      required:
      - refresh
      type: object
    Tos:
      example:
        next_tos_uuid: next_tos_uuid
        previous_tos_uuid: previous_tos_uuid
        published: 2000-01-23
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: version
        content: content
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        version:
          maxLength: 20
          type: string
        content:
          type: string
        published:
          format: date
          type: string
        previous_tos_uuid:
          readOnly: true
          type: string
        next_tos_uuid:
          readOnly: true
          type: string
      required:
      - content
      - next_tos_uuid
      - previous_tos_uuid
      - uuid
      - version
      type: object
    Unsubscribe:
      example:
        id: id
        subscription: subscription
      properties:
        id:
          type: string
        subscription:
          type: string
      required:
      - id
      - subscription
      type: object
    ValueUnitEnum:
      enum:
      - fixed_amount
      - percentage
      type: string
    VerificationCreate:
      example:
        result: ""
        created: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        verify_type:
          $ref: '#/components/schemas/VerifyTypeEnum'
        status:
          $ref: '#/components/schemas/StatusBd7Enum'
        result:
          oneOf:
          - $ref: '#/components/schemas/ResultEnum'
          - $ref: '#/components/schemas/BlankEnum'
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        updated:
          format: date-time
          readOnly: true
          title: Updated on
          type: string
      required:
      - created
      - updated
      - uuid
      - verify_type
      type: object
    VerificationDocument:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        document_back: document_back
        document_front: document_front
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        document_front:
          type: string
        document_back:
          type: string
      required:
      - document_back
      - document_front
      - document_type
      - uuid
      type: object
    VerificationDocumentCreate:
      example:
        document_back:
          path: https://openapi-generator.tech
          extra_data:
            key: ""
          name: name
          description: description
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        document_front:
          path: https://openapi-generator.tech
          extra_data:
            key: ""
          name: name
          description: description
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        document_type: document_type
      properties:
        document_type:
          type: string
        uuid:
          format: uuid
          type: string
        document_front:
          $ref: '#/components/schemas/Document'
        document_back:
          $ref: '#/components/schemas/Document'
      required:
      - document_back
      - document_front
      - document_type
      - uuid
      type: object
    VerificationList:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        verify_type: ""
        result: ""
        created: 2000-01-23T04:56:07.000+00:00
        verification_documents:
        - verification_documents
        - verification_documents
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        verify_type:
          allOf:
          - $ref: '#/components/schemas/VerifyTypeEnum'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBd7Enum'
          readOnly: true
        result:
          allOf:
          - $ref: '#/components/schemas/ResultEnum'
          readOnly: true
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        updated:
          format: date-time
          readOnly: true
          title: Updated on
          type: string
        verification_documents:
          items:
            type: string
          type: array
      required:
      - created
      - result
      - status
      - updated
      - uuid
      - verification_documents
      - verify_type
      type: object
    VerificationWithType:
      example:
        result: ""
        created: 2000-01-23T04:56:07.000+00:00
        verification_documents:
        - document_back:
            path: https://openapi-generator.tech
            extra_data:
              key: ""
            name: name
            description: description
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          document_front:
            path: https://openapi-generator.tech
            extra_data:
              key: ""
            name: name
            description: description
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          document_type: document_type
        - document_back:
            path: https://openapi-generator.tech
            extra_data:
              key: ""
            name: name
            description: description
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          document_front:
            path: https://openapi-generator.tech
            extra_data:
              key: ""
            name: name
            description: description
            uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          document_type: document_type
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        verify_type:
          $ref: '#/components/schemas/VerifyTypeEnum'
        status:
          $ref: '#/components/schemas/StatusBd7Enum'
        result:
          oneOf:
          - $ref: '#/components/schemas/ResultEnum'
          - $ref: '#/components/schemas/BlankEnum'
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        updated:
          format: date-time
          readOnly: true
          title: Updated on
          type: string
        verification_documents:
          items:
            $ref: '#/components/schemas/VerificationDocumentCreate'
          nullable: true
          readOnly: true
          type: array
      required:
      - created
      - updated
      - uuid
      - verification_documents
      - verify_type
      type: object
    VerifyTypeEnum:
      enum:
      - IDENTITY
      - BANKING
      type: string
    Watchlist:
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      example:
        assets:
        - market: market
          ticker: ticker
          extra_data:
            key: ""
          name: name
          currency: currency
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isin: isin
        - market: market
          ticker: ticker
          extra_data:
            key: ""
          name: name
          currency: currency
          uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isin: isin
        name: name
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 250
          type: string
        assets:
          items:
            $ref: '#/components/schemas/RelatedAssetSerializerWithPermission'
          type: array
      required:
      - assets
      - name
      - uuid
      type: object
    WebsocketAuthentication:
      example:
        ticket: ticket
      properties:
        ticket:
          type: string
      required:
      - ticket
      type: object
    WithdrawalDetail:
      example:
        reason: reason
        amount: -839834361907.7977
        portfolio: portfolio
        provider: provider
        purpose: purpose
        extra_data:
          key: ""
        created: 2000-01-23T04:56:07.000+00:00
        withdrawal_type: withdrawal_type
        completed: 2000-01-23T04:56:07.000+00:00
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        uuid:
          format: uuid
          readOnly: true
          type: string
        portfolio:
          type: string
        amount:
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          type: number
        provider:
          type: string
        status:
          $ref: '#/components/schemas/Status14bEnum'
        reason:
          description: Cancelled reason
          maxLength: 250
          type: string
        completed:
          format: date-time
          nullable: true
          type: string
        purpose:
          description: Withdrawal reason
          maxLength: 250
          nullable: true
          type: string
        created:
          format: date-time
          readOnly: true
          title: Created on
          type: string
        withdrawal_type:
          readOnly: true
          type: string
        extra_data:
          additionalProperties: {}
          description: Additional withdrawal attributes for the specific portal
          nullable: true
          type: object
      required:
      - amount
      - created
      - portfolio
      - provider
      - status
      - uuid
      - withdrawal_type
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    cookieAuth:
      in: cookie
      name: Session
      type: apiKey
    jwtAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
    oauth2:
      flows: {}
      type: oauth2
    tokenAuth:
      description: Token-based authentication with required prefix "Token"
      in: header
      name: Authorization
      type: apiKey

