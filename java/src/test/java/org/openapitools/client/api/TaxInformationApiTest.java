/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PaginatedTaxInformationListList;
import org.openapitools.client.model.PatchedTaxInformationCreateUpdate;
import org.openapitools.client.model.TaxInformationCreateUpdate;
import org.openapitools.client.model.TaxInformationList;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaxInformationApi
 */
@Ignore
public class TaxInformationApiTest {

    private final TaxInformationApi api = new TaxInformationApi();

    
    /**
     * 
     *
     * Create a tax inforation for a client
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientTaxInformationCreateTest() throws ApiException {
        UUID clientUuid = null;
        TaxInformationCreateUpdate taxInformationCreateUpdate = null;
        TaxInformationCreateUpdate response = api.clientTaxInformationCreate(clientUuid, taxInformationCreateUpdate);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a client tax inforation
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientTaxInformationDeleteTest() throws ApiException {
        UUID clientUuid = null;
        UUID uuid = null;
        api.clientTaxInformationDelete(clientUuid, uuid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * List tax information for a client
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientTaxInformationListTest() throws ApiException {
        UUID clientUuid = null;
        Integer limit = null;
        Integer offset = null;
        PaginatedTaxInformationListList response = api.clientTaxInformationList(clientUuid, limit, offset);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Partial Update a client tax inforation
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientTaxInformationPartialUpdateTest() throws ApiException {
        UUID clientUuid = null;
        UUID uuid = null;
        PatchedTaxInformationCreateUpdate patchedTaxInformationCreateUpdate = null;
        TaxInformationCreateUpdate response = api.clientTaxInformationPartialUpdate(clientUuid, uuid, patchedTaxInformationCreateUpdate);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retrieve a client tax inforation
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientTaxInformationRetrieveTest() throws ApiException {
        UUID clientUuid = null;
        UUID uuid = null;
        TaxInformationList response = api.clientTaxInformationRetrieve(clientUuid, uuid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Update a client tax inforation
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientTaxInformationUpdateTest() throws ApiException {
        UUID clientUuid = null;
        UUID uuid = null;
        TaxInformationCreateUpdate taxInformationCreateUpdate = null;
        TaxInformationCreateUpdate response = api.clientTaxInformationUpdate(clientUuid, uuid, taxInformationCreateUpdate);

        // TODO: test validations
    }
    
}
