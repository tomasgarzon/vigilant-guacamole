/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DocumentTypeEnum;
import org.threeten.bp.OffsetDateTime;
import org.openapitools.client.model.OneOfResultEnumBlankEnum;
import org.openapitools.client.model.PaginatedVerificationDocumentList;
import org.openapitools.client.model.PaginatedVerificationListList;
import org.openapitools.client.model.StatusBd7Enum;
import java.util.UUID;
import org.openapitools.client.model.VerificationCreate;
import org.openapitools.client.model.VerificationDocument;
import org.openapitools.client.model.VerificationDocumentCreate;
import org.openapitools.client.model.VerificationList;
import org.openapitools.client.model.VerificationWithType;
import org.openapitools.client.model.VerifyTypeEnum;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KycApi
 */
@Ignore
public class KycApiTest {

    private final KycApi api = new KycApi();

    
    /**
     * 
     *
     * Create a verification for a client
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientVerificationCreateTest() throws ApiException {
        UUID clientUuid = null;
        String verifyTypeCode = null;
        VerificationCreate verificationCreate = null;
        VerificationCreate response = api.clientVerificationCreate(clientUuid, verifyTypeCode, verificationCreate);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Create a verification Document for a client
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientVerificationDocumentCreateTest() throws ApiException {
        UUID clientUuid = null;
        String verifyTypeCode = null;
        UUID uuid = null;
        VerifyTypeEnum verifyType = null;
        OffsetDateTime created = null;
        OffsetDateTime updated = null;
        List<VerificationDocumentCreate> verificationDocuments = null;
        StatusBd7Enum status = null;
        OneOfResultEnumBlankEnum result = null;
        VerificationWithType response = api.clientVerificationDocumentCreate(clientUuid, verifyTypeCode, uuid, verifyType, created, updated, verificationDocuments, status, result);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete a client verificatoin document
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientVerificationDocumentDeleteTest() throws ApiException {
        UUID clientUuid = null;
        UUID uuid = null;
        String verifyTypeCode = null;
        api.clientVerificationDocumentDelete(clientUuid, uuid, verifyTypeCode);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * List Verification Document for a client
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientVerificationDocumentListTest() throws ApiException {
        UUID clientUuid = null;
        String verifyTypeCode = null;
        Integer limit = null;
        Integer offset = null;
        PaginatedVerificationDocumentList response = api.clientVerificationDocumentList(clientUuid, verifyTypeCode, limit, offset);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Partial Update a client verification document
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientVerificationDocumentPartialUpdateTest() throws ApiException {
        UUID clientUuid = null;
        UUID uuid = null;
        String verifyTypeCode = null;
        UUID uuid2 = null;
        DocumentTypeEnum documentType = null;
        String documentFront = null;
        String documentBack = null;
        VerificationDocument response = api.clientVerificationDocumentPartialUpdate(clientUuid, uuid, verifyTypeCode, uuid2, documentType, documentFront, documentBack);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retrieve a client verification document
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientVerificationDocumentRetrieveTest() throws ApiException {
        UUID clientUuid = null;
        UUID uuid = null;
        String verifyTypeCode = null;
        VerificationDocument response = api.clientVerificationDocumentRetrieve(clientUuid, uuid, verifyTypeCode);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Update a client verification document
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientVerificationDocumentUpdateTest() throws ApiException {
        UUID clientUuid = null;
        UUID uuid = null;
        String verifyTypeCode = null;
        UUID uuid2 = null;
        DocumentTypeEnum documentType = null;
        String documentFront = null;
        String documentBack = null;
        VerificationDocument response = api.clientVerificationDocumentUpdate(clientUuid, uuid, verifyTypeCode, uuid2, documentType, documentFront, documentBack);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * List Verification for a client
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientVerificationListTest() throws ApiException {
        UUID clientUuid = null;
        String verifyTypeCode = null;
        Integer limit = null;
        Integer offset = null;
        PaginatedVerificationListList response = api.clientVerificationList(clientUuid, verifyTypeCode, limit, offset);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retrieve a client verification 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientVerificationRetrieveTest() throws ApiException {
        UUID clientUuid = null;
        UUID uuid = null;
        String verifyTypeCode = null;
        VerificationList response = api.clientVerificationRetrieve(clientUuid, uuid, verifyTypeCode);

        // TODO: test validations
    }
    
}
