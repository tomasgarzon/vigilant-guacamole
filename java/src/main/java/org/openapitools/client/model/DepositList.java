/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.client.model.DepositTypeEnum;
import org.openapitools.client.model.StatusB6aEnum;
import org.threeten.bp.OffsetDateTime;

/**
 * DepositList
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T11:21:17.898459Z[Etc/UTC]")
public class DepositList {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount;

  public static final String SERIALIZED_NAME_REFERENCE = "reference";
  @SerializedName(SERIALIZED_NAME_REFERENCE)
  private String reference;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusB6aEnum status;

  public static final String SERIALIZED_NAME_DEPOSIT_TYPE = "deposit_type";
  @SerializedName(SERIALIZED_NAME_DEPOSIT_TYPE)
  private DepositTypeEnum depositType;

  public static final String SERIALIZED_NAME_COMPLETED = "completed";
  @SerializedName(SERIALIZED_NAME_COMPLETED)
  private OffsetDateTime completed;

  public static final String SERIALIZED_NAME_TRANSACTED_AT = "transacted_at";
  @SerializedName(SERIALIZED_NAME_TRANSACTED_AT)
  private OffsetDateTime transactedAt;

  public static final String SERIALIZED_NAME_EXTRA_DATA = "extra_data";
  @SerializedName(SERIALIZED_NAME_EXTRA_DATA)
  private Map<String, Object> extraData = new HashMap<String, Object>();


   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UUID getUuid() {
    return uuid;
  }




   /**
   * Get amount
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return amount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getAmount() {
    return amount;
  }




   /**
   * Get reference
   * @return reference
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReference() {
    return reference;
  }




   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public StatusB6aEnum getStatus() {
    return status;
  }




   /**
   * Get depositType
   * @return depositType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public DepositTypeEnum getDepositType() {
    return depositType;
  }




   /**
   * Get completed
   * @return completed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCompleted() {
    return completed;
  }




   /**
   * Get transactedAt
   * @return transactedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getTransactedAt() {
    return transactedAt;
  }




   /**
   * Additional deposit attributes for the specific portal
   * @return extraData
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Additional deposit attributes for the specific portal")

  public Map<String, Object> getExtraData() {
    return extraData;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositList depositList = (DepositList) o;
    return Objects.equals(this.uuid, depositList.uuid) &&
        Objects.equals(this.amount, depositList.amount) &&
        Objects.equals(this.reference, depositList.reference) &&
        Objects.equals(this.status, depositList.status) &&
        Objects.equals(this.depositType, depositList.depositType) &&
        Objects.equals(this.completed, depositList.completed) &&
        Objects.equals(this.transactedAt, depositList.transactedAt) &&
        Objects.equals(this.extraData, depositList.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, amount, reference, status, depositType, completed, transactedAt, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositList {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    depositType: ").append(toIndentedString(depositType)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    transactedAt: ").append(toIndentedString(transactedAt)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

