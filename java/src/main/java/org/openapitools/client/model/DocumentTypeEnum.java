/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets DocumentTypeEnum
 */
@JsonAdapter(DocumentTypeEnum.Adapter.class)
public enum DocumentTypeEnum {
  
  PASSPORT("passport"),
  
  DRIVING_LICENCE("driving_licence"),
  
  NATIONAL_IDENTITY_CARD("national_identity_card"),
  
  UTILITY_BILL("utility_bill"),
  
  LOCAL_TAX_BILL("local_tax_bill"),
  
  BANK_STATEMENT("bank_statement"),
  
  LEASE_AGREEMENT("lease_agreement"),
  
  RENT_RECEIPT("rent_receipt"),
  
  LETTER("letter"),
  
  CERTIFICATE_MARRIAGE("certificate_marriage"),
  
  DECREE_ABSOLUTE("decree_absolute"),
  
  FINAL_ORDER("final_order"),
  
  CLIENT_PHOTO("client_photo");

  private String value;

  DocumentTypeEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DocumentTypeEnum fromValue(String value) {
    for (DocumentTypeEnum b : DocumentTypeEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<DocumentTypeEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final DocumentTypeEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DocumentTypeEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DocumentTypeEnum.fromValue(value);
    }
  }
}

