/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * ForecastRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T11:21:17.898459Z[Etc/UTC]")
public class ForecastRequest {
  public static final String SERIALIZED_NAME_GOAL_AMOUNT = "goal_amount";
  @SerializedName(SERIALIZED_NAME_GOAL_AMOUNT)
  private Double goalAmount;

  public static final String SERIALIZED_NAME_DEADLINE = "deadline";
  @SerializedName(SERIALIZED_NAME_DEADLINE)
  private LocalDate deadline;

  public static final String SERIALIZED_NAME_INITIAL_AMOUNT = "initial_amount";
  @SerializedName(SERIALIZED_NAME_INITIAL_AMOUNT)
  private Double initialAmount;

  public static final String SERIALIZED_NAME_RECURRING_AMOUNT = "recurring_amount";
  @SerializedName(SERIALIZED_NAME_RECURRING_AMOUNT)
  private Double recurringAmount;

  public static final String SERIALIZED_NAME_RISK_LEVEL = "risk_level";
  @SerializedName(SERIALIZED_NAME_RISK_LEVEL)
  private Integer riskLevel;


  public ForecastRequest goalAmount(Double goalAmount) {
    
    this.goalAmount = goalAmount;
    return this;
  }

   /**
   * Get goalAmount
   * minimum: 1
   * maximum: 1000000000000
   * @return goalAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getGoalAmount() {
    return goalAmount;
  }


  public void setGoalAmount(Double goalAmount) {
    this.goalAmount = goalAmount;
  }


  public ForecastRequest deadline(LocalDate deadline) {
    
    this.deadline = deadline;
    return this;
  }

   /**
   * Get deadline
   * @return deadline
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public LocalDate getDeadline() {
    return deadline;
  }


  public void setDeadline(LocalDate deadline) {
    this.deadline = deadline;
  }


  public ForecastRequest initialAmount(Double initialAmount) {
    
    this.initialAmount = initialAmount;
    return this;
  }

   /**
   * Get initialAmount
   * minimum: 0
   * maximum: 1000000000000
   * @return initialAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getInitialAmount() {
    return initialAmount;
  }


  public void setInitialAmount(Double initialAmount) {
    this.initialAmount = initialAmount;
  }


  public ForecastRequest recurringAmount(Double recurringAmount) {
    
    this.recurringAmount = recurringAmount;
    return this;
  }

   /**
   * Get recurringAmount
   * minimum: 0
   * maximum: 1000000000000
   * @return recurringAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getRecurringAmount() {
    return recurringAmount;
  }


  public void setRecurringAmount(Double recurringAmount) {
    this.recurringAmount = recurringAmount;
  }


  public ForecastRequest riskLevel(Integer riskLevel) {
    
    this.riskLevel = riskLevel;
    return this;
  }

   /**
   * Get riskLevel
   * minimum: 1
   * @return riskLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getRiskLevel() {
    return riskLevel;
  }


  public void setRiskLevel(Integer riskLevel) {
    this.riskLevel = riskLevel;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastRequest forecastRequest = (ForecastRequest) o;
    return Objects.equals(this.goalAmount, forecastRequest.goalAmount) &&
        Objects.equals(this.deadline, forecastRequest.deadline) &&
        Objects.equals(this.initialAmount, forecastRequest.initialAmount) &&
        Objects.equals(this.recurringAmount, forecastRequest.recurringAmount) &&
        Objects.equals(this.riskLevel, forecastRequest.riskLevel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(goalAmount, deadline, initialAmount, recurringAmount, riskLevel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastRequest {\n");
    sb.append("    goalAmount: ").append(toIndentedString(goalAmount)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    initialAmount: ").append(toIndentedString(initialAmount)).append("\n");
    sb.append("    recurringAmount: ").append(toIndentedString(recurringAmount)).append("\n");
    sb.append("    riskLevel: ").append(toIndentedString(riskLevel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

