/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * Goal
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T11:21:17.898459Z[Etc/UTC]")
public class Goal {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PORTFOLIO = "portfolio";
  @SerializedName(SERIALIZED_NAME_PORTFOLIO)
  private String portfolio;

  public static final String SERIALIZED_NAME_GOAL_AMOUNT = "goal_amount";
  @SerializedName(SERIALIZED_NAME_GOAL_AMOUNT)
  private Double goalAmount;

  public static final String SERIALIZED_NAME_DEADLINE = "deadline";
  @SerializedName(SERIALIZED_NAME_DEADLINE)
  private LocalDate deadline;

  public static final String SERIALIZED_NAME_INITIAL_AMOUNT = "initial_amount";
  @SerializedName(SERIALIZED_NAME_INITIAL_AMOUNT)
  private Double initialAmount;

  public static final String SERIALIZED_NAME_RECURRING_AMOUNT = "recurring_amount";
  @SerializedName(SERIALIZED_NAME_RECURRING_AMOUNT)
  private Double recurringAmount;

  public static final String SERIALIZED_NAME_RISK_LEVEL = "risk_level";
  @SerializedName(SERIALIZED_NAME_RISK_LEVEL)
  private Integer riskLevel;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;


   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UUID getUuid() {
    return uuid;
  }




  public Goal name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Goal portfolio(String portfolio) {
    
    this.portfolio = portfolio;
    return this;
  }

   /**
   * Get portfolio
   * @return portfolio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPortfolio() {
    return portfolio;
  }


  public void setPortfolio(String portfolio) {
    this.portfolio = portfolio;
  }


  public Goal goalAmount(Double goalAmount) {
    
    this.goalAmount = goalAmount;
    return this;
  }

   /**
   * Desired amount needed to fulfill the goal
   * minimum: 0.1
   * maximum: 1000000000000
   * @return goalAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Desired amount needed to fulfill the goal")

  public Double getGoalAmount() {
    return goalAmount;
  }


  public void setGoalAmount(Double goalAmount) {
    this.goalAmount = goalAmount;
  }


  public Goal deadline(LocalDate deadline) {
    
    this.deadline = deadline;
    return this;
  }

   /**
   * Due date to reach the goal.
   * @return deadline
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Due date to reach the goal.")

  public LocalDate getDeadline() {
    return deadline;
  }


  public void setDeadline(LocalDate deadline) {
    this.deadline = deadline;
  }


  public Goal initialAmount(Double initialAmount) {
    
    this.initialAmount = initialAmount;
    return this;
  }

   /**
   * Initial deposit amount to start from. No sense to start by 0
   * minimum: 0.1
   * maximum: 1000000000000
   * @return initialAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Initial deposit amount to start from. No sense to start by 0")

  public Double getInitialAmount() {
    return initialAmount;
  }


  public void setInitialAmount(Double initialAmount) {
    this.initialAmount = initialAmount;
  }


  public Goal recurringAmount(Double recurringAmount) {
    
    this.recurringAmount = recurringAmount;
    return this;
  }

   /**
   * Get recurringAmount
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return recurringAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getRecurringAmount() {
    return recurringAmount;
  }


  public void setRecurringAmount(Double recurringAmount) {
    this.recurringAmount = recurringAmount;
  }


  public Goal riskLevel(Integer riskLevel) {
    
    this.riskLevel = riskLevel;
    return this;
  }

   /**
   * Get riskLevel
   * minimum: 0
   * maximum: 32767
   * @return riskLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getRiskLevel() {
    return riskLevel;
  }


  public void setRiskLevel(Integer riskLevel) {
    this.riskLevel = riskLevel;
  }


   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreated() {
    return created;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Goal goal = (Goal) o;
    return Objects.equals(this.uuid, goal.uuid) &&
        Objects.equals(this.name, goal.name) &&
        Objects.equals(this.portfolio, goal.portfolio) &&
        Objects.equals(this.goalAmount, goal.goalAmount) &&
        Objects.equals(this.deadline, goal.deadline) &&
        Objects.equals(this.initialAmount, goal.initialAmount) &&
        Objects.equals(this.recurringAmount, goal.recurringAmount) &&
        Objects.equals(this.riskLevel, goal.riskLevel) &&
        Objects.equals(this.created, goal.created);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, name, portfolio, goalAmount, deadline, initialAmount, recurringAmount, riskLevel, created);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Goal {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    portfolio: ").append(toIndentedString(portfolio)).append("\n");
    sb.append("    goalAmount: ").append(toIndentedString(goalAmount)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    initialAmount: ").append(toIndentedString(initialAmount)).append("\n");
    sb.append("    recurringAmount: ").append(toIndentedString(recurringAmount)).append("\n");
    sb.append("    riskLevel: ").append(toIndentedString(riskLevel)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

