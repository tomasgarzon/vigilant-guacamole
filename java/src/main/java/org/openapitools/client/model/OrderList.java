/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.Currency;
import org.openapitools.client.model.OrderListMethodEnum;
import org.openapitools.client.model.OrderListStatusEnum;
import org.openapitools.client.model.OrderTypeEnum;
import org.openapitools.client.model.RelatedAssetSerializerWithAssetCategories;
import org.threeten.bp.OffsetDateTime;

/**
 * A ModelSerializer that takes additional arguments for \&quot;fields\&quot;, \&quot;omit\&quot; and \&quot;expand\&quot; in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations
 */
@ApiModel(description = "A ModelSerializer that takes additional arguments for \"fields\", \"omit\" and \"expand\" in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T11:21:17.898459Z[Etc/UTC]")
public class OrderList {
  public static final String SERIALIZED_NAME_ASSET = "asset";
  @SerializedName(SERIALIZED_NAME_ASSET)
  private RelatedAssetSerializerWithAssetCategories asset;

  public static final String SERIALIZED_NAME_TRADE = "trade";
  @SerializedName(SERIALIZED_NAME_TRADE)
  private String trade;

  public static final String SERIALIZED_NAME_ORDER_TYPE = "order_type";
  @SerializedName(SERIALIZED_NAME_ORDER_TYPE)
  private OrderTypeEnum orderType;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private OrderListMethodEnum method;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private OrderListStatusEnum status;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public static final String SERIALIZED_NAME_COMPLETED = "completed";
  @SerializedName(SERIALIZED_NAME_COMPLETED)
  private OffsetDateTime completed;

  public static final String SERIALIZED_NAME_REBALANCE = "rebalance";
  @SerializedName(SERIALIZED_NAME_REBALANCE)
  private String rebalance;

  public static final String SERIALIZED_NAME_PORTFOLIO = "portfolio";
  @SerializedName(SERIALIZED_NAME_PORTFOLIO)
  private String portfolio;

  public static final String SERIALIZED_NAME_SHARES = "shares";
  @SerializedName(SERIALIZED_NAME_SHARES)
  private Double shares;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount;

  public static final String SERIALIZED_NAME_PRICE_AVG = "price_avg";
  @SerializedName(SERIALIZED_NAME_PRICE_AVG)
  private Double priceAvg;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private Currency currency;

  public static final String SERIALIZED_NAME_WITHDRAWAL = "withdrawal";
  @SerializedName(SERIALIZED_NAME_WITHDRAWAL)
  private String withdrawal;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_STOP_PRICE = "stop_price";
  @SerializedName(SERIALIZED_NAME_STOP_PRICE)
  private Double stopPrice;

  public static final String SERIALIZED_NAME_LIMIT_PRICE = "limit_price";
  @SerializedName(SERIALIZED_NAME_LIMIT_PRICE)
  private Double limitPrice;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private String duration;


   /**
   * Get asset
   * @return asset
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public RelatedAssetSerializerWithAssetCategories getAsset() {
    return asset;
  }




   /**
   * Get trade
   * @return trade
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTrade() {
    return trade;
  }




   /**
   * Get orderType
   * @return orderType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OrderTypeEnum getOrderType() {
    return orderType;
  }




   /**
   * Get method
   * @return method
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OrderListMethodEnum getMethod() {
    return method;
  }




   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OrderListStatusEnum getStatus() {
    return status;
  }




   /**
   * Get reason
   * @return reason
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getReason() {
    return reason;
  }




   /**
   * Get completed
   * @return completed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCompleted() {
    return completed;
  }




   /**
   * Get rebalance
   * @return rebalance
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getRebalance() {
    return rebalance;
  }




   /**
   * Get portfolio
   * @return portfolio
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPortfolio() {
    return portfolio;
  }




   /**
   * Get shares
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return shares
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getShares() {
    return shares;
  }




   /**
   * Get amount
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return amount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getAmount() {
    return amount;
  }




   /**
   * Get priceAvg
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return priceAvg
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getPriceAvg() {
    return priceAvg;
  }




  public OrderList currency(Currency currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Currency getCurrency() {
    return currency;
  }


  public void setCurrency(Currency currency) {
    this.currency = currency;
  }


   /**
   * Get withdrawal
   * @return withdrawal
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getWithdrawal() {
    return withdrawal;
  }




   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreated() {
    return created;
  }




   /**
   * Get stopPrice
   * @return stopPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Double getStopPrice() {
    return stopPrice;
  }




   /**
   * Get limitPrice
   * @return limitPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Double getLimitPrice() {
    return limitPrice;
  }




   /**
   * Get duration
   * @return duration
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDuration() {
    return duration;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderList orderList = (OrderList) o;
    return Objects.equals(this.asset, orderList.asset) &&
        Objects.equals(this.trade, orderList.trade) &&
        Objects.equals(this.orderType, orderList.orderType) &&
        Objects.equals(this.method, orderList.method) &&
        Objects.equals(this.status, orderList.status) &&
        Objects.equals(this.reason, orderList.reason) &&
        Objects.equals(this.completed, orderList.completed) &&
        Objects.equals(this.rebalance, orderList.rebalance) &&
        Objects.equals(this.portfolio, orderList.portfolio) &&
        Objects.equals(this.shares, orderList.shares) &&
        Objects.equals(this.amount, orderList.amount) &&
        Objects.equals(this.priceAvg, orderList.priceAvg) &&
        Objects.equals(this.currency, orderList.currency) &&
        Objects.equals(this.withdrawal, orderList.withdrawal) &&
        Objects.equals(this.created, orderList.created) &&
        Objects.equals(this.stopPrice, orderList.stopPrice) &&
        Objects.equals(this.limitPrice, orderList.limitPrice) &&
        Objects.equals(this.duration, orderList.duration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asset, trade, orderType, method, status, reason, completed, rebalance, portfolio, shares, amount, priceAvg, currency, withdrawal, created, stopPrice, limitPrice, duration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderList {\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    trade: ").append(toIndentedString(trade)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    rebalance: ").append(toIndentedString(rebalance)).append("\n");
    sb.append("    portfolio: ").append(toIndentedString(portfolio)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    priceAvg: ").append(toIndentedString(priceAvg)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    withdrawal: ").append(toIndentedString(withdrawal)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    stopPrice: ").append(toIndentedString(stopPrice)).append("\n");
    sb.append("    limitPrice: ").append(toIndentedString(limitPrice)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

