/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * IntradayPrice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T11:21:17.898459Z[Etc/UTC]")
public class IntradayPrice {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount;

  public static final String SERIALIZED_NAME_DATETIME = "datetime";
  @SerializedName(SERIALIZED_NAME_DATETIME)
  private OffsetDateTime datetime;

  public static final String SERIALIZED_NAME_OPEN_PRICE = "open_price";
  @SerializedName(SERIALIZED_NAME_OPEN_PRICE)
  private Double openPrice;

  public static final String SERIALIZED_NAME_HIGH_PRICE = "high_price";
  @SerializedName(SERIALIZED_NAME_HIGH_PRICE)
  private Double highPrice;

  public static final String SERIALIZED_NAME_LOW_PRICE = "low_price";
  @SerializedName(SERIALIZED_NAME_LOW_PRICE)
  private Double lowPrice;

  public static final String SERIALIZED_NAME_PREVIOUS_CLOSE_PRICE = "previous_close_price";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_CLOSE_PRICE)
  private Double previousClosePrice;


   /**
   * Get amount
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return amount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getAmount() {
    return amount;
  }




   /**
   * Get datetime
   * @return datetime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getDatetime() {
    return datetime;
  }




  public IntradayPrice openPrice(Double openPrice) {
    
    this.openPrice = openPrice;
    return this;
  }

   /**
   * Get openPrice
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return openPrice
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getOpenPrice() {
    return openPrice;
  }


  public void setOpenPrice(Double openPrice) {
    this.openPrice = openPrice;
  }


  public IntradayPrice highPrice(Double highPrice) {
    
    this.highPrice = highPrice;
    return this;
  }

   /**
   * Get highPrice
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return highPrice
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getHighPrice() {
    return highPrice;
  }


  public void setHighPrice(Double highPrice) {
    this.highPrice = highPrice;
  }


  public IntradayPrice lowPrice(Double lowPrice) {
    
    this.lowPrice = lowPrice;
    return this;
  }

   /**
   * Get lowPrice
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return lowPrice
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getLowPrice() {
    return lowPrice;
  }


  public void setLowPrice(Double lowPrice) {
    this.lowPrice = lowPrice;
  }


  public IntradayPrice previousClosePrice(Double previousClosePrice) {
    
    this.previousClosePrice = previousClosePrice;
    return this;
  }

   /**
   * Get previousClosePrice
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return previousClosePrice
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getPreviousClosePrice() {
    return previousClosePrice;
  }


  public void setPreviousClosePrice(Double previousClosePrice) {
    this.previousClosePrice = previousClosePrice;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntradayPrice intradayPrice = (IntradayPrice) o;
    return Objects.equals(this.amount, intradayPrice.amount) &&
        Objects.equals(this.datetime, intradayPrice.datetime) &&
        Objects.equals(this.openPrice, intradayPrice.openPrice) &&
        Objects.equals(this.highPrice, intradayPrice.highPrice) &&
        Objects.equals(this.lowPrice, intradayPrice.lowPrice) &&
        Objects.equals(this.previousClosePrice, intradayPrice.previousClosePrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, datetime, openPrice, highPrice, lowPrice, previousClosePrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntradayPrice {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    datetime: ").append(toIndentedString(datetime)).append("\n");
    sb.append("    openPrice: ").append(toIndentedString(openPrice)).append("\n");
    sb.append("    highPrice: ").append(toIndentedString(highPrice)).append("\n");
    sb.append("    lowPrice: ").append(toIndentedString(lowPrice)).append("\n");
    sb.append("    previousClosePrice: ").append(toIndentedString(previousClosePrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

