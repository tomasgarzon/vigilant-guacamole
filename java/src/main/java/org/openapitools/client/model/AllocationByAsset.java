/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AllocationByCode;

/**
 * AllocationByAsset
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T11:21:17.898459Z[Etc/UTC]")
public class AllocationByAsset {
  public static final String SERIALIZED_NAME_CATEGORY_CODE = "category_code";
  @SerializedName(SERIALIZED_NAME_CATEGORY_CODE)
  private String categoryCode;

  public static final String SERIALIZED_NAME_DISPLAY_ALLOCATION_CHART = "display_allocation_chart";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ALLOCATION_CHART)
  private Boolean displayAllocationChart;

  public static final String SERIALIZED_NAME_DISPLAY_ALLOCATION_CHART_CONFIGURATION_ERROR = "display_allocation_chart_configuration_error";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ALLOCATION_CHART_CONFIGURATION_ERROR)
  private Boolean displayAllocationChartConfigurationError;

  public static final String SERIALIZED_NAME_ALLOCATIONS_BY_CODE = "allocations_by_code";
  @SerializedName(SERIALIZED_NAME_ALLOCATIONS_BY_CODE)
  private List<AllocationByCode> allocationsByCode = new ArrayList<AllocationByCode>();


  public AllocationByAsset categoryCode(String categoryCode) {
    
    this.categoryCode = categoryCode;
    return this;
  }

   /**
   * Get categoryCode
   * @return categoryCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCategoryCode() {
    return categoryCode;
  }


  public void setCategoryCode(String categoryCode) {
    this.categoryCode = categoryCode;
  }


  public AllocationByAsset displayAllocationChart(Boolean displayAllocationChart) {
    
    this.displayAllocationChart = displayAllocationChart;
    return this;
  }

   /**
   * Get displayAllocationChart
   * @return displayAllocationChart
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getDisplayAllocationChart() {
    return displayAllocationChart;
  }


  public void setDisplayAllocationChart(Boolean displayAllocationChart) {
    this.displayAllocationChart = displayAllocationChart;
  }


  public AllocationByAsset displayAllocationChartConfigurationError(Boolean displayAllocationChartConfigurationError) {
    
    this.displayAllocationChartConfigurationError = displayAllocationChartConfigurationError;
    return this;
  }

   /**
   * Get displayAllocationChartConfigurationError
   * @return displayAllocationChartConfigurationError
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getDisplayAllocationChartConfigurationError() {
    return displayAllocationChartConfigurationError;
  }


  public void setDisplayAllocationChartConfigurationError(Boolean displayAllocationChartConfigurationError) {
    this.displayAllocationChartConfigurationError = displayAllocationChartConfigurationError;
  }


  public AllocationByAsset allocationsByCode(List<AllocationByCode> allocationsByCode) {
    
    this.allocationsByCode = allocationsByCode;
    return this;
  }

  public AllocationByAsset addAllocationsByCodeItem(AllocationByCode allocationsByCodeItem) {
    this.allocationsByCode.add(allocationsByCodeItem);
    return this;
  }

   /**
   * Get allocationsByCode
   * @return allocationsByCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<AllocationByCode> getAllocationsByCode() {
    return allocationsByCode;
  }


  public void setAllocationsByCode(List<AllocationByCode> allocationsByCode) {
    this.allocationsByCode = allocationsByCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllocationByAsset allocationByAsset = (AllocationByAsset) o;
    return Objects.equals(this.categoryCode, allocationByAsset.categoryCode) &&
        Objects.equals(this.displayAllocationChart, allocationByAsset.displayAllocationChart) &&
        Objects.equals(this.displayAllocationChartConfigurationError, allocationByAsset.displayAllocationChartConfigurationError) &&
        Objects.equals(this.allocationsByCode, allocationByAsset.allocationsByCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryCode, displayAllocationChart, displayAllocationChartConfigurationError, allocationsByCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllocationByAsset {\n");
    sb.append("    categoryCode: ").append(toIndentedString(categoryCode)).append("\n");
    sb.append("    displayAllocationChart: ").append(toIndentedString(displayAllocationChart)).append("\n");
    sb.append("    displayAllocationChartConfigurationError: ").append(toIndentedString(displayAllocationChartConfigurationError)).append("\n");
    sb.append("    allocationsByCode: ").append(toIndentedString(allocationsByCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

