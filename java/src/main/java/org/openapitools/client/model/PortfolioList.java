/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.openapitools.client.model.Status2efEnum;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * A ModelSerializer that takes additional arguments for \&quot;fields\&quot;, \&quot;omit\&quot; and \&quot;expand\&quot; in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations
 */
@ApiModel(description = "A ModelSerializer that takes additional arguments for \"fields\", \"omit\" and \"expand\" in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T11:21:17.898459Z[Etc/UTC]")
public class PortfolioList {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_CLIENT = "client";
  @SerializedName(SERIALIZED_NAME_CLIENT)
  private String client;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PORTFOLIO_TYPE = "portfolio_type";
  @SerializedName(SERIALIZED_NAME_PORTFOLIO_TYPE)
  private String portfolioType;

  public static final String SERIALIZED_NAME_RISK_LEVEL = "risk_level";
  @SerializedName(SERIALIZED_NAME_RISK_LEVEL)
  private Integer riskLevel;

  public static final String SERIALIZED_NAME_TIME_HORIZON = "time_horizon";
  @SerializedName(SERIALIZED_NAME_TIME_HORIZON)
  private Integer timeHorizon;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Status2efEnum status;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private Double balance;

  public static final String SERIALIZED_NAME_INVESTED = "invested";
  @SerializedName(SERIALIZED_NAME_INVESTED)
  private Double invested;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_ADVISOR = "advisor";
  @SerializedName(SERIALIZED_NAME_ADVISOR)
  private String advisor;

  public static final String SERIALIZED_NAME_ADVICE_ENGINE = "advice_engine";
  @SerializedName(SERIALIZED_NAME_ADVICE_ENGINE)
  private String adviceEngine;


   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UUID getUuid() {
    return uuid;
  }




  public PortfolioList client(String client) {
    
    this.client = client;
    return this;
  }

   /**
   * Get client
   * @return client
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClient() {
    return client;
  }


  public void setClient(String client) {
    this.client = client;
  }


   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }




  public PortfolioList portfolioType(String portfolioType) {
    
    this.portfolioType = portfolioType;
    return this;
  }

   /**
   * Get portfolioType
   * @return portfolioType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPortfolioType() {
    return portfolioType;
  }


  public void setPortfolioType(String portfolioType) {
    this.portfolioType = portfolioType;
  }


   /**
   * Get riskLevel
   * @return riskLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getRiskLevel() {
    return riskLevel;
  }




   /**
   * Get timeHorizon
   * @return timeHorizon
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTimeHorizon() {
    return timeHorizon;
  }




   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Status2efEnum getStatus() {
    return status;
  }




  public PortfolioList balance(Double balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * minimum: 0
   * maximum: 1000000000000
   * @return balance
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getBalance() {
    return balance;
  }


  public void setBalance(Double balance) {
    this.balance = balance;
  }


  public PortfolioList invested(Double invested) {
    
    this.invested = invested;
    return this;
  }

   /**
   * Get invested
   * minimum: 0
   * maximum: 1000000000000
   * @return invested
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getInvested() {
    return invested;
  }


  public void setInvested(Double invested) {
    this.invested = invested;
  }


  public PortfolioList currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreated() {
    return created;
  }




  public PortfolioList advisor(String advisor) {
    
    this.advisor = advisor;
    return this;
  }

   /**
   * Get advisor
   * @return advisor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAdvisor() {
    return advisor;
  }


  public void setAdvisor(String advisor) {
    this.advisor = advisor;
  }


  public PortfolioList adviceEngine(String adviceEngine) {
    
    this.adviceEngine = adviceEngine;
    return this;
  }

   /**
   * Get adviceEngine
   * @return adviceEngine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAdviceEngine() {
    return adviceEngine;
  }


  public void setAdviceEngine(String adviceEngine) {
    this.adviceEngine = adviceEngine;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortfolioList portfolioList = (PortfolioList) o;
    return Objects.equals(this.uuid, portfolioList.uuid) &&
        Objects.equals(this.client, portfolioList.client) &&
        Objects.equals(this.name, portfolioList.name) &&
        Objects.equals(this.portfolioType, portfolioList.portfolioType) &&
        Objects.equals(this.riskLevel, portfolioList.riskLevel) &&
        Objects.equals(this.timeHorizon, portfolioList.timeHorizon) &&
        Objects.equals(this.status, portfolioList.status) &&
        Objects.equals(this.balance, portfolioList.balance) &&
        Objects.equals(this.invested, portfolioList.invested) &&
        Objects.equals(this.currency, portfolioList.currency) &&
        Objects.equals(this.created, portfolioList.created) &&
        Objects.equals(this.advisor, portfolioList.advisor) &&
        Objects.equals(this.adviceEngine, portfolioList.adviceEngine);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, client, name, portfolioType, riskLevel, timeHorizon, status, balance, invested, currency, created, advisor, adviceEngine);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortfolioList {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    portfolioType: ").append(toIndentedString(portfolioType)).append("\n");
    sb.append("    riskLevel: ").append(toIndentedString(riskLevel)).append("\n");
    sb.append("    timeHorizon: ").append(toIndentedString(timeHorizon)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    invested: ").append(toIndentedString(invested)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    advisor: ").append(toIndentedString(advisor)).append("\n");
    sb.append("    adviceEngine: ").append(toIndentedString(adviceEngine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

