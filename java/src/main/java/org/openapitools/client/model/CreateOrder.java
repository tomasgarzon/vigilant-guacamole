/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.CreateOrderMethodEnum;
import org.openapitools.client.model.OneOfDurationEnumNullEnum;
import org.openapitools.client.model.OrderTypeEnum;
import org.openapitools.client.model.RelatedAssetSerializerWithAssetCategories;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * A ModelSerializer that takes additional arguments for \&quot;fields\&quot;, \&quot;omit\&quot; and \&quot;expand\&quot; in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations
 */
@ApiModel(description = "A ModelSerializer that takes additional arguments for \"fields\", \"omit\" and \"expand\" in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T11:21:17.898459Z[Etc/UTC]")
public class CreateOrder {
  public static final String SERIALIZED_NAME_SHARES = "shares";
  @SerializedName(SERIALIZED_NAME_SHARES)
  private Integer shares;

  public static final String SERIALIZED_NAME_ASSET = "asset";
  @SerializedName(SERIALIZED_NAME_ASSET)
  private RelatedAssetSerializerWithAssetCategories asset;

  public static final String SERIALIZED_NAME_PORTFOLIO = "portfolio";
  @SerializedName(SERIALIZED_NAME_PORTFOLIO)
  private String portfolio;

  public static final String SERIALIZED_NAME_ORDER_TYPE = "order_type";
  @SerializedName(SERIALIZED_NAME_ORDER_TYPE)
  private OrderTypeEnum orderType;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private CreateOrderMethodEnum method;

  public static final String SERIALIZED_NAME_LIMIT_PRICE = "limit_price";
  @SerializedName(SERIALIZED_NAME_LIMIT_PRICE)
  private Double limitPrice;

  public static final String SERIALIZED_NAME_STOP_PRICE = "stop_price";
  @SerializedName(SERIALIZED_NAME_STOP_PRICE)
  private Double stopPrice;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private OneOfDurationEnumNullEnum duration;


  public CreateOrder shares(Integer shares) {
    
    this.shares = shares;
    return this;
  }

   /**
   * Get shares
   * minimum: 1
   * @return shares
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getShares() {
    return shares;
  }


  public void setShares(Integer shares) {
    this.shares = shares;
  }


  public CreateOrder asset(RelatedAssetSerializerWithAssetCategories asset) {
    
    this.asset = asset;
    return this;
  }

   /**
   * Get asset
   * @return asset
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public RelatedAssetSerializerWithAssetCategories getAsset() {
    return asset;
  }


  public void setAsset(RelatedAssetSerializerWithAssetCategories asset) {
    this.asset = asset;
  }


  public CreateOrder portfolio(String portfolio) {
    
    this.portfolio = portfolio;
    return this;
  }

   /**
   * Get portfolio
   * @return portfolio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPortfolio() {
    return portfolio;
  }


  public void setPortfolio(String portfolio) {
    this.portfolio = portfolio;
  }


  public CreateOrder orderType(OrderTypeEnum orderType) {
    
    this.orderType = orderType;
    return this;
  }

   /**
   * Get orderType
   * @return orderType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OrderTypeEnum getOrderType() {
    return orderType;
  }


  public void setOrderType(OrderTypeEnum orderType) {
    this.orderType = orderType;
  }


  public CreateOrder method(CreateOrderMethodEnum method) {
    
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public CreateOrderMethodEnum getMethod() {
    return method;
  }


  public void setMethod(CreateOrderMethodEnum method) {
    this.method = method;
  }


  public CreateOrder limitPrice(Double limitPrice) {
    
    this.limitPrice = limitPrice;
    return this;
  }

   /**
   * Get limitPrice
   * minimum: 0.01
   * maximum: 1000000000000
   * @return limitPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLimitPrice() {
    return limitPrice;
  }


  public void setLimitPrice(Double limitPrice) {
    this.limitPrice = limitPrice;
  }


  public CreateOrder stopPrice(Double stopPrice) {
    
    this.stopPrice = stopPrice;
    return this;
  }

   /**
   * Get stopPrice
   * minimum: 0.01
   * maximum: 1000000000000
   * @return stopPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getStopPrice() {
    return stopPrice;
  }


  public void setStopPrice(Double stopPrice) {
    this.stopPrice = stopPrice;
  }


  public CreateOrder duration(OneOfDurationEnumNullEnum duration) {
    
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OneOfDurationEnumNullEnum getDuration() {
    return duration;
  }


  public void setDuration(OneOfDurationEnumNullEnum duration) {
    this.duration = duration;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateOrder createOrder = (CreateOrder) o;
    return Objects.equals(this.shares, createOrder.shares) &&
        Objects.equals(this.asset, createOrder.asset) &&
        Objects.equals(this.portfolio, createOrder.portfolio) &&
        Objects.equals(this.orderType, createOrder.orderType) &&
        Objects.equals(this.method, createOrder.method) &&
        Objects.equals(this.limitPrice, createOrder.limitPrice) &&
        Objects.equals(this.stopPrice, createOrder.stopPrice) &&
        Objects.equals(this.duration, createOrder.duration);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && a.get().getClass().isArray() ? Arrays.equals((T[])a.get(), (T[])b.get()) : Objects.equals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(shares, asset, portfolio, orderType, method, limitPrice, stopPrice, duration);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent()
      ? (a.get().getClass().isArray() ? Arrays.hashCode((T[])a.get()) : Objects.hashCode(a.get()))
      : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateOrder {\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    portfolio: ").append(toIndentedString(portfolio)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    limitPrice: ").append(toIndentedString(limitPrice)).append("\n");
    sb.append("    stopPrice: ").append(toIndentedString(stopPrice)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

