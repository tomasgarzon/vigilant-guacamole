/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.RelatedAssetSerializerWithAssetCategories;

/**
 * Position
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T11:21:17.898459Z[Etc/UTC]")
public class Position {
  public static final String SERIALIZED_NAME_ASSET = "asset";
  @SerializedName(SERIALIZED_NAME_ASSET)
  private RelatedAssetSerializerWithAssetCategories asset;

  public static final String SERIALIZED_NAME_SHARES = "shares";
  @SerializedName(SERIALIZED_NAME_SHARES)
  private Double shares;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Double price;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Double value;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Double weight;

  public static final String SERIALIZED_NAME_FX_RATE_ACCOUNT = "fx_rate_account";
  @SerializedName(SERIALIZED_NAME_FX_RATE_ACCOUNT)
  private Double fxRateAccount;

  public static final String SERIALIZED_NAME_ASSET_CURRENCY_VALUE = "asset_currency_value";
  @SerializedName(SERIALIZED_NAME_ASSET_CURRENCY_VALUE)
  private Double assetCurrencyValue;


   /**
   * Get asset
   * @return asset
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public RelatedAssetSerializerWithAssetCategories getAsset() {
    return asset;
  }




  public Position shares(Double shares) {
    
    this.shares = shares;
    return this;
  }

   /**
   * Get shares
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return shares
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getShares() {
    return shares;
  }


  public void setShares(Double shares) {
    this.shares = shares;
  }


  public Position price(Double price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return price
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getPrice() {
    return price;
  }


  public void setPrice(Double price) {
    this.price = price;
  }


  public Position value(Double value) {
    
    this.value = value;
    return this;
  }

   /**
   * Get value
   * minimum: -1000000000000
   * maximum: 1000000000000
   * @return value
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getValue() {
    return value;
  }


  public void setValue(Double value) {
    this.value = value;
  }


   /**
   * Get weight
   * @return weight
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getWeight() {
    return weight;
  }




   /**
   * Get fxRateAccount
   * @return fxRateAccount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getFxRateAccount() {
    return fxRateAccount;
  }




   /**
   * Get assetCurrencyValue
   * @return assetCurrencyValue
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Double getAssetCurrencyValue() {
    return assetCurrencyValue;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Position position = (Position) o;
    return Objects.equals(this.asset, position.asset) &&
        Objects.equals(this.shares, position.shares) &&
        Objects.equals(this.price, position.price) &&
        Objects.equals(this.value, position.value) &&
        Objects.equals(this.weight, position.weight) &&
        Objects.equals(this.fxRateAccount, position.fxRateAccount) &&
        Objects.equals(this.assetCurrencyValue, position.assetCurrencyValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asset, shares, price, value, weight, fxRateAccount, assetCurrencyValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Position {\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    fxRateAccount: ").append(toIndentedString(fxRateAccount)).append("\n");
    sb.append("    assetCurrencyValue: ").append(toIndentedString(assetCurrencyValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

