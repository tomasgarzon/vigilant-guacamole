/*
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.client.model.AssetModelPortfolio;

/**
 * InvestorModelPortfolio
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-01T11:21:17.898459Z[Etc/UTC]")
public class InvestorModelPortfolio {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CASH_WEIGHT = "cash_weight";
  @SerializedName(SERIALIZED_NAME_CASH_WEIGHT)
  private Double cashWeight;

  public static final String SERIALIZED_NAME_RISK_LEVEL = "risk_level";
  @SerializedName(SERIALIZED_NAME_RISK_LEVEL)
  private Integer riskLevel;

  public static final String SERIALIZED_NAME_ALLOCATION = "allocation";
  @SerializedName(SERIALIZED_NAME_ALLOCATION)
  private List<AssetModelPortfolio> allocation = new ArrayList<AssetModelPortfolio>();

  public static final String SERIALIZED_NAME_EXTRA_DATA = "extra_data";
  @SerializedName(SERIALIZED_NAME_EXTRA_DATA)
  private Map<String, Object> extraData = new HashMap<String, Object>();


   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UUID getUuid() {
    return uuid;
  }




   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }




   /**
   * Percentage on the interval 0-1.
   * minimum: -10
   * maximum: 10
   * @return cashWeight
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Percentage on the interval 0-1.")

  public Double getCashWeight() {
    return cashWeight;
  }




   /**
   * Get riskLevel
   * @return riskLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getRiskLevel() {
    return riskLevel;
  }




   /**
   * Get allocation
   * @return allocation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<AssetModelPortfolio> getAllocation() {
    return allocation;
  }




   /**
   * Additional ModelPortfolio attributes
   * @return extraData
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Additional ModelPortfolio attributes")

  public Map<String, Object> getExtraData() {
    return extraData;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvestorModelPortfolio investorModelPortfolio = (InvestorModelPortfolio) o;
    return Objects.equals(this.uuid, investorModelPortfolio.uuid) &&
        Objects.equals(this.name, investorModelPortfolio.name) &&
        Objects.equals(this.cashWeight, investorModelPortfolio.cashWeight) &&
        Objects.equals(this.riskLevel, investorModelPortfolio.riskLevel) &&
        Objects.equals(this.allocation, investorModelPortfolio.allocation) &&
        Objects.equals(this.extraData, investorModelPortfolio.extraData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, name, cashWeight, riskLevel, allocation, extraData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvestorModelPortfolio {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    cashWeight: ").append(toIndentedString(cashWeight)).append("\n");
    sb.append("    riskLevel: ").append(toIndentedString(riskLevel)).append("\n");
    sb.append("    allocation: ").append(toIndentedString(allocation)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

