//
// BankAccountAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BankAccountAPI {

    /**

     - parameter clientUuid: (path)  
     - parameter bankAccountCreateUpdate: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func clientBankAccountCreate(clientUuid: UUID, bankAccountCreateUpdate: BankAccountCreateUpdate? = nil, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: BankAccountCreateUpdate?, _ error: Error?) -> Void)) {
        clientBankAccountCreateWithRequestBuilder(clientUuid: clientUuid, bankAccountCreateUpdate: bankAccountCreateUpdate).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - POST /api/v2/clients/{client_uuid}/bank-accounts/
     - Create a bank account for a client
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter clientUuid: (path)  
     - parameter bankAccountCreateUpdate: (body)  (optional)
     - returns: RequestBuilder<BankAccountCreateUpdate> 
     */
    open class func clientBankAccountCreateWithRequestBuilder(clientUuid: UUID, bankAccountCreateUpdate: BankAccountCreateUpdate? = nil) -> RequestBuilder<BankAccountCreateUpdate> {
        var localVariablePath = "/api/v2/clients/{client_uuid}/bank-accounts/"
        let clientUuidPreEscape = "\(APIHelper.mapValueToPathItem(clientUuid))"
        let clientUuidPostEscape = clientUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{client_uuid}", with: clientUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: bankAccountCreateUpdate)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BankAccountCreateUpdate>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter bankAccountUuid: (path)  
     - parameter clientUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func clientBankAccountDelete(bankAccountUuid: UUID, clientUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) {
        clientBankAccountDeleteWithRequestBuilder(bankAccountUuid: bankAccountUuid, clientUuid: clientUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - DELETE /api/v2/clients/{client_uuid}/bank-accounts/{bank_account_uuid}/
     - Delete a client bank account
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter bankAccountUuid: (path)  
     - parameter clientUuid: (path)  
     - returns: RequestBuilder<Void> 
     */
    open class func clientBankAccountDeleteWithRequestBuilder(bankAccountUuid: UUID, clientUuid: UUID) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v2/clients/{client_uuid}/bank-accounts/{bank_account_uuid}/"
        let bankAccountUuidPreEscape = "\(APIHelper.mapValueToPathItem(bankAccountUuid))"
        let bankAccountUuidPostEscape = bankAccountUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{bank_account_uuid}", with: bankAccountUuidPostEscape, options: .literal, range: nil)
        let clientUuidPreEscape = "\(APIHelper.mapValueToPathItem(clientUuid))"
        let clientUuidPostEscape = clientUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{client_uuid}", with: clientUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClient.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter bankAccountUuid: (path)  
     - parameter clientUuid: (path)  
     - parameter patchedBankAccountCreateUpdate: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func clientBankAccountPartialUpdate(bankAccountUuid: UUID, clientUuid: UUID, patchedBankAccountCreateUpdate: PatchedBankAccountCreateUpdate? = nil, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: BankAccountCreateUpdate?, _ error: Error?) -> Void)) {
        clientBankAccountPartialUpdateWithRequestBuilder(bankAccountUuid: bankAccountUuid, clientUuid: clientUuid, patchedBankAccountCreateUpdate: patchedBankAccountCreateUpdate).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - PATCH /api/v2/clients/{client_uuid}/bank-accounts/{bank_account_uuid}/
     - Partial Update a client bank account
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter bankAccountUuid: (path)  
     - parameter clientUuid: (path)  
     - parameter patchedBankAccountCreateUpdate: (body)  (optional)
     - returns: RequestBuilder<BankAccountCreateUpdate> 
     */
    open class func clientBankAccountPartialUpdateWithRequestBuilder(bankAccountUuid: UUID, clientUuid: UUID, patchedBankAccountCreateUpdate: PatchedBankAccountCreateUpdate? = nil) -> RequestBuilder<BankAccountCreateUpdate> {
        var localVariablePath = "/api/v2/clients/{client_uuid}/bank-accounts/{bank_account_uuid}/"
        let bankAccountUuidPreEscape = "\(APIHelper.mapValueToPathItem(bankAccountUuid))"
        let bankAccountUuidPostEscape = bankAccountUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{bank_account_uuid}", with: bankAccountUuidPostEscape, options: .literal, range: nil)
        let clientUuidPreEscape = "\(APIHelper.mapValueToPathItem(clientUuid))"
        let clientUuidPostEscape = clientUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{client_uuid}", with: clientUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: patchedBankAccountCreateUpdate)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BankAccountCreateUpdate>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter bankAccountUuid: (path)  
     - parameter clientUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func clientBankAccountRetrieve(bankAccountUuid: UUID, clientUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: BankAccountList?, _ error: Error?) -> Void)) {
        clientBankAccountRetrieveWithRequestBuilder(bankAccountUuid: bankAccountUuid, clientUuid: clientUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/clients/{client_uuid}/bank-accounts/{bank_account_uuid}/
     - Retrieve a client bank account
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter bankAccountUuid: (path)  
     - parameter clientUuid: (path)  
     - returns: RequestBuilder<BankAccountList> 
     */
    open class func clientBankAccountRetrieveWithRequestBuilder(bankAccountUuid: UUID, clientUuid: UUID) -> RequestBuilder<BankAccountList> {
        var localVariablePath = "/api/v2/clients/{client_uuid}/bank-accounts/{bank_account_uuid}/"
        let bankAccountUuidPreEscape = "\(APIHelper.mapValueToPathItem(bankAccountUuid))"
        let bankAccountUuidPostEscape = bankAccountUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{bank_account_uuid}", with: bankAccountUuidPostEscape, options: .literal, range: nil)
        let clientUuidPreEscape = "\(APIHelper.mapValueToPathItem(clientUuid))"
        let clientUuidPostEscape = clientUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{client_uuid}", with: clientUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BankAccountList>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter bankAccountUuid: (path)  
     - parameter clientUuid: (path)  
     - parameter bankAccountCreateUpdate: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func clientBankAccountUpdate(bankAccountUuid: UUID, clientUuid: UUID, bankAccountCreateUpdate: BankAccountCreateUpdate? = nil, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: BankAccountCreateUpdate?, _ error: Error?) -> Void)) {
        clientBankAccountUpdateWithRequestBuilder(bankAccountUuid: bankAccountUuid, clientUuid: clientUuid, bankAccountCreateUpdate: bankAccountCreateUpdate).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - PUT /api/v2/clients/{client_uuid}/bank-accounts/{bank_account_uuid}/
     - Update a client bank account
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter bankAccountUuid: (path)  
     - parameter clientUuid: (path)  
     - parameter bankAccountCreateUpdate: (body)  (optional)
     - returns: RequestBuilder<BankAccountCreateUpdate> 
     */
    open class func clientBankAccountUpdateWithRequestBuilder(bankAccountUuid: UUID, clientUuid: UUID, bankAccountCreateUpdate: BankAccountCreateUpdate? = nil) -> RequestBuilder<BankAccountCreateUpdate> {
        var localVariablePath = "/api/v2/clients/{client_uuid}/bank-accounts/{bank_account_uuid}/"
        let bankAccountUuidPreEscape = "\(APIHelper.mapValueToPathItem(bankAccountUuid))"
        let bankAccountUuidPostEscape = bankAccountUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{bank_account_uuid}", with: bankAccountUuidPostEscape, options: .literal, range: nil)
        let clientUuidPreEscape = "\(APIHelper.mapValueToPathItem(clientUuid))"
        let clientUuidPostEscape = clientUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{client_uuid}", with: clientUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: bankAccountCreateUpdate)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BankAccountCreateUpdate>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter clientUuid: (path)  
     - parameter limit: (query) Number of results to return per page. (optional)
     - parameter offset: (query) The initial index from which to return the results. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func clientBankAccountsList(clientUuid: UUID, limit: Int? = nil, offset: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: PaginatedBankAccountListList?, _ error: Error?) -> Void)) {
        clientBankAccountsListWithRequestBuilder(clientUuid: clientUuid, limit: limit, offset: offset).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/clients/{client_uuid}/bank-accounts/
     - List Bank Account for a client
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter clientUuid: (path)  
     - parameter limit: (query) Number of results to return per page. (optional)
     - parameter offset: (query) The initial index from which to return the results. (optional)
     - returns: RequestBuilder<PaginatedBankAccountListList> 
     */
    open class func clientBankAccountsListWithRequestBuilder(clientUuid: UUID, limit: Int? = nil, offset: Int? = nil) -> RequestBuilder<PaginatedBankAccountListList> {
        var localVariablePath = "/api/v2/clients/{client_uuid}/bank-accounts/"
        let clientUuidPreEscape = "\(APIHelper.mapValueToPathItem(clientUuid))"
        let clientUuidPostEscape = clientUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{client_uuid}", with: clientUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "limit": limit?.encodeToJSON(),
            "offset": offset?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<PaginatedBankAccountListList>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
