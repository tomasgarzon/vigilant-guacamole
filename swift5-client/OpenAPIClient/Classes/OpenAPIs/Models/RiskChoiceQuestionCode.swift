//
// RiskChoiceQuestionCode.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RiskChoiceQuestionCode: Codable, Hashable {

    public var code: String
    public var order: Int?
    public var description: String?
    public var created: Date
    public var questionCode: String

    public init(code: String, order: Int? = nil, description: String? = nil, created: Date, questionCode: String) {
        self.code = code
        self.order = order
        self.description = description
        self.created = created
        self.questionCode = questionCode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case code
        case order
        case description
        case created
        case questionCode = "question_code"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(code, forKey: .code)
        try container.encodeIfPresent(order, forKey: .order)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(created, forKey: .created)
        try container.encode(questionCode, forKey: .questionCode)
    }
}

