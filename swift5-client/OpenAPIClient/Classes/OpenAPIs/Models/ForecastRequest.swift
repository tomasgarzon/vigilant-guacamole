//
// ForecastRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ForecastRequest: Codable, Hashable {

    public var goalAmount: Double
    public var deadline: Date
    public var initialAmount: Double
    public var recurringAmount: Double
    public var riskLevel: Int

    public init(goalAmount: Double, deadline: Date, initialAmount: Double, recurringAmount: Double, riskLevel: Int) {
        self.goalAmount = goalAmount
        self.deadline = deadline
        self.initialAmount = initialAmount
        self.recurringAmount = recurringAmount
        self.riskLevel = riskLevel
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case goalAmount = "goal_amount"
        case deadline
        case initialAmount = "initial_amount"
        case recurringAmount = "recurring_amount"
        case riskLevel = "risk_level"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(goalAmount, forKey: .goalAmount)
        try container.encode(deadline, forKey: .deadline)
        try container.encode(initialAmount, forKey: .initialAmount)
        try container.encode(recurringAmount, forKey: .recurringAmount)
        try container.encode(riskLevel, forKey: .riskLevel)
    }
}

