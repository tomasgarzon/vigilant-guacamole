//
// VerificationDocument.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A ModelSerializer that takes additional arguments for \&quot;fields\&quot;, \&quot;omit\&quot; and \&quot;expand\&quot; in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations */
public struct VerificationDocument: Codable, Hashable {

    public var uuid: UUID
    public var documentType: DocumentTypeEnum
    public var documentFront: String
    public var documentBack: String

    public init(uuid: UUID, documentType: DocumentTypeEnum, documentFront: String, documentBack: String) {
        self.uuid = uuid
        self.documentType = documentType
        self.documentFront = documentFront
        self.documentBack = documentBack
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uuid
        case documentType = "document_type"
        case documentFront = "document_front"
        case documentBack = "document_back"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(uuid, forKey: .uuid)
        try container.encode(documentType, forKey: .documentType)
        try container.encode(documentFront, forKey: .documentFront)
        try container.encode(documentBack, forKey: .documentBack)
    }
}

