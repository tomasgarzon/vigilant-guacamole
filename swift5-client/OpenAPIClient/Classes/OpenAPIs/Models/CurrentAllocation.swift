//
// CurrentAllocation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CurrentAllocation: Codable, Hashable {

    public var cashActive: Double
    public var balance: Double
    public var invested: Double
    public var earnings: Double
    public var positions: [Position]
    public var valuationDatetime: Date
    public var performance: Double? = 0.0
    public var tradeTotal: Double
    public var cashAvailable: Double

    public init(cashActive: Double, balance: Double, invested: Double, earnings: Double, positions: [Position], valuationDatetime: Date, performance: Double? = 0.0, tradeTotal: Double, cashAvailable: Double) {
        self.cashActive = cashActive
        self.balance = balance
        self.invested = invested
        self.earnings = earnings
        self.positions = positions
        self.valuationDatetime = valuationDatetime
        self.performance = performance
        self.tradeTotal = tradeTotal
        self.cashAvailable = cashAvailable
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case cashActive = "cash_active"
        case balance
        case invested
        case earnings
        case positions
        case valuationDatetime = "valuation_datetime"
        case performance
        case tradeTotal = "trade_total"
        case cashAvailable = "cash_available"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(cashActive, forKey: .cashActive)
        try container.encode(balance, forKey: .balance)
        try container.encode(invested, forKey: .invested)
        try container.encode(earnings, forKey: .earnings)
        try container.encode(positions, forKey: .positions)
        try container.encode(valuationDatetime, forKey: .valuationDatetime)
        try container.encodeIfPresent(performance, forKey: .performance)
        try container.encode(tradeTotal, forKey: .tradeTotal)
        try container.encode(cashAvailable, forKey: .cashAvailable)
    }
}

