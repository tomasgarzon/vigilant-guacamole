/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AssetModelPortfolio A ModelSerializer that takes additional arguments for \"fields\", \"omit\" and \"expand\" in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations
type AssetModelPortfolio struct {
	Asset RelatedAssetSerializerWithAssetCategories `json:"asset"`
	Weight float64 `json:"weight"`
}

// NewAssetModelPortfolio instantiates a new AssetModelPortfolio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetModelPortfolio(asset RelatedAssetSerializerWithAssetCategories, weight float64) *AssetModelPortfolio {
	this := AssetModelPortfolio{}
	this.Asset = asset
	this.Weight = weight
	return &this
}

// NewAssetModelPortfolioWithDefaults instantiates a new AssetModelPortfolio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetModelPortfolioWithDefaults() *AssetModelPortfolio {
	this := AssetModelPortfolio{}
	return &this
}

// GetAsset returns the Asset field value
func (o *AssetModelPortfolio) GetAsset() RelatedAssetSerializerWithAssetCategories {
	if o == nil {
		var ret RelatedAssetSerializerWithAssetCategories
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *AssetModelPortfolio) GetAssetOk() (*RelatedAssetSerializerWithAssetCategories, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *AssetModelPortfolio) SetAsset(v RelatedAssetSerializerWithAssetCategories) {
	o.Asset = v
}

// GetWeight returns the Weight field value
func (o *AssetModelPortfolio) GetWeight() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *AssetModelPortfolio) GetWeightOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *AssetModelPortfolio) SetWeight(v float64) {
	o.Weight = v
}

func (o AssetModelPortfolio) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["asset"] = o.Asset
	}
	if true {
		toSerialize["weight"] = o.Weight
	}
	return json.Marshal(toSerialize)
}

type NullableAssetModelPortfolio struct {
	value *AssetModelPortfolio
	isSet bool
}

func (v NullableAssetModelPortfolio) Get() *AssetModelPortfolio {
	return v.value
}

func (v *NullableAssetModelPortfolio) Set(val *AssetModelPortfolio) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetModelPortfolio) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetModelPortfolio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetModelPortfolio(val *AssetModelPortfolio) *NullableAssetModelPortfolio {
	return &NullableAssetModelPortfolio{value: val, isSet: true}
}

func (v NullableAssetModelPortfolio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetModelPortfolio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


