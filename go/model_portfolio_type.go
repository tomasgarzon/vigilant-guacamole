/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PortfolioType struct for PortfolioType
type PortfolioType struct {
	Code string `json:"code"`
	Name string `json:"name"`
}

// NewPortfolioType instantiates a new PortfolioType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortfolioType(code string, name string) *PortfolioType {
	this := PortfolioType{}
	this.Code = code
	this.Name = name
	return &this
}

// NewPortfolioTypeWithDefaults instantiates a new PortfolioType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortfolioTypeWithDefaults() *PortfolioType {
	this := PortfolioType{}
	return &this
}

// GetCode returns the Code field value
func (o *PortfolioType) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *PortfolioType) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *PortfolioType) SetCode(v string) {
	o.Code = v
}

// GetName returns the Name field value
func (o *PortfolioType) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PortfolioType) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PortfolioType) SetName(v string) {
	o.Name = v
}

func (o PortfolioType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullablePortfolioType struct {
	value *PortfolioType
	isSet bool
}

func (v NullablePortfolioType) Get() *PortfolioType {
	return v.value
}

func (v *NullablePortfolioType) Set(val *PortfolioType) {
	v.value = val
	v.isSet = true
}

func (v NullablePortfolioType) IsSet() bool {
	return v.isSet
}

func (v *NullablePortfolioType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortfolioType(val *PortfolioType) *NullablePortfolioType {
	return &NullablePortfolioType{value: val, isSet: true}
}

func (v NullablePortfolioType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortfolioType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


