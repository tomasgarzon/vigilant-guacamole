/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// OrderListMethodEnum the model 'OrderListMethodEnum'
type OrderListMethodEnum string

// List of OrderListMethodEnum
const (
	MARKET OrderListMethodEnum = "MARKET"
	QUOTE OrderListMethodEnum = "QUOTE"
	INTERNAL OrderListMethodEnum = "INTERNAL"
	LIMIT OrderListMethodEnum = "LIMIT"
	STOP OrderListMethodEnum = "STOP"
)

var allowedOrderListMethodEnumEnumValues = []OrderListMethodEnum{
	"MARKET",
	"QUOTE",
	"INTERNAL",
	"LIMIT",
	"STOP",
}

func (v *OrderListMethodEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrderListMethodEnum(value)
	for _, existing := range allowedOrderListMethodEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrderListMethodEnum", value)
}

// NewOrderListMethodEnumFromValue returns a pointer to a valid OrderListMethodEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderListMethodEnumFromValue(v string) (*OrderListMethodEnum, error) {
	ev := OrderListMethodEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrderListMethodEnum: valid values are %v", v, allowedOrderListMethodEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderListMethodEnum) IsValid() bool {
	for _, existing := range allowedOrderListMethodEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrderListMethodEnum value
func (v OrderListMethodEnum) Ptr() *OrderListMethodEnum {
	return &v
}

type NullableOrderListMethodEnum struct {
	value *OrderListMethodEnum
	isSet bool
}

func (v NullableOrderListMethodEnum) Get() *OrderListMethodEnum {
	return v.value
}

func (v *NullableOrderListMethodEnum) Set(val *OrderListMethodEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderListMethodEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderListMethodEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderListMethodEnum(val *OrderListMethodEnum) *NullableOrderListMethodEnum {
	return &NullableOrderListMethodEnum{value: val, isSet: true}
}

func (v NullableOrderListMethodEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderListMethodEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

