/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// FeedActivityList A ModelSerializer that takes additional arguments for \"fields\", \"omit\" and \"expand\" in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations
type FeedActivityList struct {
	Uuid string `json:"uuid"`
	Created time.Time `json:"created"`
	ActivityType ActivityTypeEnum `json:"activity_type"`
	ActivityData map[string]interface{} `json:"activity_data"`
}

// NewFeedActivityList instantiates a new FeedActivityList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedActivityList(uuid string, created time.Time, activityType ActivityTypeEnum, activityData map[string]interface{}) *FeedActivityList {
	this := FeedActivityList{}
	this.Uuid = uuid
	this.Created = created
	this.ActivityType = activityType
	this.ActivityData = activityData
	return &this
}

// NewFeedActivityListWithDefaults instantiates a new FeedActivityList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedActivityListWithDefaults() *FeedActivityList {
	this := FeedActivityList{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *FeedActivityList) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *FeedActivityList) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *FeedActivityList) SetUuid(v string) {
	o.Uuid = v
}

// GetCreated returns the Created field value
func (o *FeedActivityList) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *FeedActivityList) GetCreatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *FeedActivityList) SetCreated(v time.Time) {
	o.Created = v
}

// GetActivityType returns the ActivityType field value
func (o *FeedActivityList) GetActivityType() ActivityTypeEnum {
	if o == nil {
		var ret ActivityTypeEnum
		return ret
	}

	return o.ActivityType
}

// GetActivityTypeOk returns a tuple with the ActivityType field value
// and a boolean to check if the value has been set.
func (o *FeedActivityList) GetActivityTypeOk() (*ActivityTypeEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ActivityType, true
}

// SetActivityType sets field value
func (o *FeedActivityList) SetActivityType(v ActivityTypeEnum) {
	o.ActivityType = v
}

// GetActivityData returns the ActivityData field value
func (o *FeedActivityList) GetActivityData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ActivityData
}

// GetActivityDataOk returns a tuple with the ActivityData field value
// and a boolean to check if the value has been set.
func (o *FeedActivityList) GetActivityDataOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ActivityData, true
}

// SetActivityData sets field value
func (o *FeedActivityList) SetActivityData(v map[string]interface{}) {
	o.ActivityData = v
}

func (o FeedActivityList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["activity_type"] = o.ActivityType
	}
	if true {
		toSerialize["activity_data"] = o.ActivityData
	}
	return json.Marshal(toSerialize)
}

type NullableFeedActivityList struct {
	value *FeedActivityList
	isSet bool
}

func (v NullableFeedActivityList) Get() *FeedActivityList {
	return v.value
}

func (v *NullableFeedActivityList) Set(val *FeedActivityList) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedActivityList) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedActivityList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedActivityList(val *FeedActivityList) *NullableFeedActivityList {
	return &NullableFeedActivityList{value: val, isSet: true}
}

func (v NullableFeedActivityList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedActivityList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


