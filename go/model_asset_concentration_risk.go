/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AssetConcentrationRisk struct for AssetConcentrationRisk
type AssetConcentrationRisk struct {
	Name string `json:"name"`
	AssetClass string `json:"asset_class"`
	Uuid string `json:"uuid"`
	Value float64 `json:"value"`
	Weight float64 `json:"weight"`
}

// NewAssetConcentrationRisk instantiates a new AssetConcentrationRisk object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetConcentrationRisk(name string, assetClass string, uuid string, value float64, weight float64) *AssetConcentrationRisk {
	this := AssetConcentrationRisk{}
	this.Name = name
	this.AssetClass = assetClass
	this.Uuid = uuid
	this.Value = value
	this.Weight = weight
	return &this
}

// NewAssetConcentrationRiskWithDefaults instantiates a new AssetConcentrationRisk object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetConcentrationRiskWithDefaults() *AssetConcentrationRisk {
	this := AssetConcentrationRisk{}
	return &this
}

// GetName returns the Name field value
func (o *AssetConcentrationRisk) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AssetConcentrationRisk) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AssetConcentrationRisk) SetName(v string) {
	o.Name = v
}

// GetAssetClass returns the AssetClass field value
func (o *AssetConcentrationRisk) GetAssetClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetClass
}

// GetAssetClassOk returns a tuple with the AssetClass field value
// and a boolean to check if the value has been set.
func (o *AssetConcentrationRisk) GetAssetClassOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AssetClass, true
}

// SetAssetClass sets field value
func (o *AssetConcentrationRisk) SetAssetClass(v string) {
	o.AssetClass = v
}

// GetUuid returns the Uuid field value
func (o *AssetConcentrationRisk) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *AssetConcentrationRisk) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *AssetConcentrationRisk) SetUuid(v string) {
	o.Uuid = v
}

// GetValue returns the Value field value
func (o *AssetConcentrationRisk) GetValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *AssetConcentrationRisk) GetValueOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *AssetConcentrationRisk) SetValue(v float64) {
	o.Value = v
}

// GetWeight returns the Weight field value
func (o *AssetConcentrationRisk) GetWeight() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *AssetConcentrationRisk) GetWeightOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *AssetConcentrationRisk) SetWeight(v float64) {
	o.Weight = v
}

func (o AssetConcentrationRisk) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["asset_class"] = o.AssetClass
	}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["weight"] = o.Weight
	}
	return json.Marshal(toSerialize)
}

type NullableAssetConcentrationRisk struct {
	value *AssetConcentrationRisk
	isSet bool
}

func (v NullableAssetConcentrationRisk) Get() *AssetConcentrationRisk {
	return v.value
}

func (v *NullableAssetConcentrationRisk) Set(val *AssetConcentrationRisk) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetConcentrationRisk) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetConcentrationRisk) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetConcentrationRisk(val *AssetConcentrationRisk) *NullableAssetConcentrationRisk {
	return &NullableAssetConcentrationRisk{value: val, isSet: true}
}

func (v NullableAssetConcentrationRisk) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetConcentrationRisk) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


