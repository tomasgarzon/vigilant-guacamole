/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TokenRefresh struct for TokenRefresh
type TokenRefresh struct {
	Refresh string `json:"refresh"`
}

// NewTokenRefresh instantiates a new TokenRefresh object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenRefresh(refresh string) *TokenRefresh {
	this := TokenRefresh{}
	this.Refresh = refresh
	return &this
}

// NewTokenRefreshWithDefaults instantiates a new TokenRefresh object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenRefreshWithDefaults() *TokenRefresh {
	this := TokenRefresh{}
	return &this
}

// GetRefresh returns the Refresh field value
func (o *TokenRefresh) GetRefresh() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Refresh
}

// GetRefreshOk returns a tuple with the Refresh field value
// and a boolean to check if the value has been set.
func (o *TokenRefresh) GetRefreshOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Refresh, true
}

// SetRefresh sets field value
func (o *TokenRefresh) SetRefresh(v string) {
	o.Refresh = v
}

func (o TokenRefresh) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["refresh"] = o.Refresh
	}
	return json.Marshal(toSerialize)
}

type NullableTokenRefresh struct {
	value *TokenRefresh
	isSet bool
}

func (v NullableTokenRefresh) Get() *TokenRefresh {
	return v.value
}

func (v *NullableTokenRefresh) Set(val *TokenRefresh) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenRefresh) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenRefresh) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenRefresh(val *TokenRefresh) *NullableTokenRefresh {
	return &NullableTokenRefresh{value: val, isSet: true}
}

func (v NullableTokenRefresh) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenRefresh) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


