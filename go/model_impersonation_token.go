/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ImpersonationToken struct for ImpersonationToken
type ImpersonationToken struct {
	Impersonator string `json:"impersonator"`
	Impersonated string `json:"impersonated"`
	Token string `json:"token"`
}

// NewImpersonationToken instantiates a new ImpersonationToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImpersonationToken(impersonator string, impersonated string, token string) *ImpersonationToken {
	this := ImpersonationToken{}
	this.Impersonator = impersonator
	this.Impersonated = impersonated
	this.Token = token
	return &this
}

// NewImpersonationTokenWithDefaults instantiates a new ImpersonationToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImpersonationTokenWithDefaults() *ImpersonationToken {
	this := ImpersonationToken{}
	return &this
}

// GetImpersonator returns the Impersonator field value
func (o *ImpersonationToken) GetImpersonator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Impersonator
}

// GetImpersonatorOk returns a tuple with the Impersonator field value
// and a boolean to check if the value has been set.
func (o *ImpersonationToken) GetImpersonatorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Impersonator, true
}

// SetImpersonator sets field value
func (o *ImpersonationToken) SetImpersonator(v string) {
	o.Impersonator = v
}

// GetImpersonated returns the Impersonated field value
func (o *ImpersonationToken) GetImpersonated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Impersonated
}

// GetImpersonatedOk returns a tuple with the Impersonated field value
// and a boolean to check if the value has been set.
func (o *ImpersonationToken) GetImpersonatedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Impersonated, true
}

// SetImpersonated sets field value
func (o *ImpersonationToken) SetImpersonated(v string) {
	o.Impersonated = v
}

// GetToken returns the Token field value
func (o *ImpersonationToken) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ImpersonationToken) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ImpersonationToken) SetToken(v string) {
	o.Token = v
}

func (o ImpersonationToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["impersonator"] = o.Impersonator
	}
	if true {
		toSerialize["impersonated"] = o.Impersonated
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableImpersonationToken struct {
	value *ImpersonationToken
	isSet bool
}

func (v NullableImpersonationToken) Get() *ImpersonationToken {
	return v.value
}

func (v *NullableImpersonationToken) Set(val *ImpersonationToken) {
	v.value = val
	v.isSet = true
}

func (v NullableImpersonationToken) IsSet() bool {
	return v.isSet
}

func (v *NullableImpersonationToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImpersonationToken(val *ImpersonationToken) *NullableImpersonationToken {
	return &NullableImpersonationToken{value: val, isSet: true}
}

func (v NullableImpersonationToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImpersonationToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


