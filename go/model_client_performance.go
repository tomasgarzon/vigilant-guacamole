/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClientPerformance struct for ClientPerformance
type ClientPerformance struct {
	ValuationDate string `json:"valuation_date"`
	Performance float64 `json:"performance"`
}

// NewClientPerformance instantiates a new ClientPerformance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientPerformance(valuationDate string, performance float64) *ClientPerformance {
	this := ClientPerformance{}
	this.ValuationDate = valuationDate
	this.Performance = performance
	return &this
}

// NewClientPerformanceWithDefaults instantiates a new ClientPerformance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientPerformanceWithDefaults() *ClientPerformance {
	this := ClientPerformance{}
	return &this
}

// GetValuationDate returns the ValuationDate field value
func (o *ClientPerformance) GetValuationDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValuationDate
}

// GetValuationDateOk returns a tuple with the ValuationDate field value
// and a boolean to check if the value has been set.
func (o *ClientPerformance) GetValuationDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ValuationDate, true
}

// SetValuationDate sets field value
func (o *ClientPerformance) SetValuationDate(v string) {
	o.ValuationDate = v
}

// GetPerformance returns the Performance field value
func (o *ClientPerformance) GetPerformance() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Performance
}

// GetPerformanceOk returns a tuple with the Performance field value
// and a boolean to check if the value has been set.
func (o *ClientPerformance) GetPerformanceOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Performance, true
}

// SetPerformance sets field value
func (o *ClientPerformance) SetPerformance(v float64) {
	o.Performance = v
}

func (o ClientPerformance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["valuation_date"] = o.ValuationDate
	}
	if true {
		toSerialize["performance"] = o.Performance
	}
	return json.Marshal(toSerialize)
}

type NullableClientPerformance struct {
	value *ClientPerformance
	isSet bool
}

func (v NullableClientPerformance) Get() *ClientPerformance {
	return v.value
}

func (v *NullableClientPerformance) Set(val *ClientPerformance) {
	v.value = val
	v.isSet = true
}

func (v NullableClientPerformance) IsSet() bool {
	return v.isSet
}

func (v *NullableClientPerformance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientPerformance(val *ClientPerformance) *NullableClientPerformance {
	return &NullableClientPerformance{value: val, isSet: true}
}

func (v NullableClientPerformance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientPerformance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


