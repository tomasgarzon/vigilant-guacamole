/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PatchedBankAccountCreateUpdate struct for PatchedBankAccountCreateUpdate
type PatchedBankAccountCreateUpdate struct {
	Uuid *string `json:"uuid,omitempty"`
	AccountNumber NullableString `json:"account_number,omitempty"`
	AccountSortCode NullableString `json:"account_sort_code,omitempty"`
	AccountHolderName NullableString `json:"account_holder_name,omitempty"`
	Joint *bool `json:"joint,omitempty"`
	BankName NullableString `json:"bank_name,omitempty"`
	Iban NullableString `json:"iban,omitempty"`
	SwiftCode NullableString `json:"swift_code,omitempty"`
}

// NewPatchedBankAccountCreateUpdate instantiates a new PatchedBankAccountCreateUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedBankAccountCreateUpdate() *PatchedBankAccountCreateUpdate {
	this := PatchedBankAccountCreateUpdate{}
	return &this
}

// NewPatchedBankAccountCreateUpdateWithDefaults instantiates a new PatchedBankAccountCreateUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedBankAccountCreateUpdateWithDefaults() *PatchedBankAccountCreateUpdate {
	this := PatchedBankAccountCreateUpdate{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *PatchedBankAccountCreateUpdate) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBankAccountCreateUpdate) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *PatchedBankAccountCreateUpdate) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *PatchedBankAccountCreateUpdate) SetUuid(v string) {
	o.Uuid = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBankAccountCreateUpdate) GetAccountNumber() string {
	if o == nil || o.AccountNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountNumber.Get()
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBankAccountCreateUpdate) GetAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountNumber.Get(), o.AccountNumber.IsSet()
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *PatchedBankAccountCreateUpdate) HasAccountNumber() bool {
	if o != nil && o.AccountNumber.IsSet() {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given NullableString and assigns it to the AccountNumber field.
func (o *PatchedBankAccountCreateUpdate) SetAccountNumber(v string) {
	o.AccountNumber.Set(&v)
}
// SetAccountNumberNil sets the value for AccountNumber to be an explicit nil
func (o *PatchedBankAccountCreateUpdate) SetAccountNumberNil() {
	o.AccountNumber.Set(nil)
}

// UnsetAccountNumber ensures that no value is present for AccountNumber, not even an explicit nil
func (o *PatchedBankAccountCreateUpdate) UnsetAccountNumber() {
	o.AccountNumber.Unset()
}

// GetAccountSortCode returns the AccountSortCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBankAccountCreateUpdate) GetAccountSortCode() string {
	if o == nil || o.AccountSortCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountSortCode.Get()
}

// GetAccountSortCodeOk returns a tuple with the AccountSortCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBankAccountCreateUpdate) GetAccountSortCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountSortCode.Get(), o.AccountSortCode.IsSet()
}

// HasAccountSortCode returns a boolean if a field has been set.
func (o *PatchedBankAccountCreateUpdate) HasAccountSortCode() bool {
	if o != nil && o.AccountSortCode.IsSet() {
		return true
	}

	return false
}

// SetAccountSortCode gets a reference to the given NullableString and assigns it to the AccountSortCode field.
func (o *PatchedBankAccountCreateUpdate) SetAccountSortCode(v string) {
	o.AccountSortCode.Set(&v)
}
// SetAccountSortCodeNil sets the value for AccountSortCode to be an explicit nil
func (o *PatchedBankAccountCreateUpdate) SetAccountSortCodeNil() {
	o.AccountSortCode.Set(nil)
}

// UnsetAccountSortCode ensures that no value is present for AccountSortCode, not even an explicit nil
func (o *PatchedBankAccountCreateUpdate) UnsetAccountSortCode() {
	o.AccountSortCode.Unset()
}

// GetAccountHolderName returns the AccountHolderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBankAccountCreateUpdate) GetAccountHolderName() string {
	if o == nil || o.AccountHolderName.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountHolderName.Get()
}

// GetAccountHolderNameOk returns a tuple with the AccountHolderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBankAccountCreateUpdate) GetAccountHolderNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AccountHolderName.Get(), o.AccountHolderName.IsSet()
}

// HasAccountHolderName returns a boolean if a field has been set.
func (o *PatchedBankAccountCreateUpdate) HasAccountHolderName() bool {
	if o != nil && o.AccountHolderName.IsSet() {
		return true
	}

	return false
}

// SetAccountHolderName gets a reference to the given NullableString and assigns it to the AccountHolderName field.
func (o *PatchedBankAccountCreateUpdate) SetAccountHolderName(v string) {
	o.AccountHolderName.Set(&v)
}
// SetAccountHolderNameNil sets the value for AccountHolderName to be an explicit nil
func (o *PatchedBankAccountCreateUpdate) SetAccountHolderNameNil() {
	o.AccountHolderName.Set(nil)
}

// UnsetAccountHolderName ensures that no value is present for AccountHolderName, not even an explicit nil
func (o *PatchedBankAccountCreateUpdate) UnsetAccountHolderName() {
	o.AccountHolderName.Unset()
}

// GetJoint returns the Joint field value if set, zero value otherwise.
func (o *PatchedBankAccountCreateUpdate) GetJoint() bool {
	if o == nil || o.Joint == nil {
		var ret bool
		return ret
	}
	return *o.Joint
}

// GetJointOk returns a tuple with the Joint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedBankAccountCreateUpdate) GetJointOk() (*bool, bool) {
	if o == nil || o.Joint == nil {
		return nil, false
	}
	return o.Joint, true
}

// HasJoint returns a boolean if a field has been set.
func (o *PatchedBankAccountCreateUpdate) HasJoint() bool {
	if o != nil && o.Joint != nil {
		return true
	}

	return false
}

// SetJoint gets a reference to the given bool and assigns it to the Joint field.
func (o *PatchedBankAccountCreateUpdate) SetJoint(v bool) {
	o.Joint = &v
}

// GetBankName returns the BankName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBankAccountCreateUpdate) GetBankName() string {
	if o == nil || o.BankName.Get() == nil {
		var ret string
		return ret
	}
	return *o.BankName.Get()
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBankAccountCreateUpdate) GetBankNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BankName.Get(), o.BankName.IsSet()
}

// HasBankName returns a boolean if a field has been set.
func (o *PatchedBankAccountCreateUpdate) HasBankName() bool {
	if o != nil && o.BankName.IsSet() {
		return true
	}

	return false
}

// SetBankName gets a reference to the given NullableString and assigns it to the BankName field.
func (o *PatchedBankAccountCreateUpdate) SetBankName(v string) {
	o.BankName.Set(&v)
}
// SetBankNameNil sets the value for BankName to be an explicit nil
func (o *PatchedBankAccountCreateUpdate) SetBankNameNil() {
	o.BankName.Set(nil)
}

// UnsetBankName ensures that no value is present for BankName, not even an explicit nil
func (o *PatchedBankAccountCreateUpdate) UnsetBankName() {
	o.BankName.Unset()
}

// GetIban returns the Iban field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBankAccountCreateUpdate) GetIban() string {
	if o == nil || o.Iban.Get() == nil {
		var ret string
		return ret
	}
	return *o.Iban.Get()
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBankAccountCreateUpdate) GetIbanOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Iban.Get(), o.Iban.IsSet()
}

// HasIban returns a boolean if a field has been set.
func (o *PatchedBankAccountCreateUpdate) HasIban() bool {
	if o != nil && o.Iban.IsSet() {
		return true
	}

	return false
}

// SetIban gets a reference to the given NullableString and assigns it to the Iban field.
func (o *PatchedBankAccountCreateUpdate) SetIban(v string) {
	o.Iban.Set(&v)
}
// SetIbanNil sets the value for Iban to be an explicit nil
func (o *PatchedBankAccountCreateUpdate) SetIbanNil() {
	o.Iban.Set(nil)
}

// UnsetIban ensures that no value is present for Iban, not even an explicit nil
func (o *PatchedBankAccountCreateUpdate) UnsetIban() {
	o.Iban.Unset()
}

// GetSwiftCode returns the SwiftCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedBankAccountCreateUpdate) GetSwiftCode() string {
	if o == nil || o.SwiftCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.SwiftCode.Get()
}

// GetSwiftCodeOk returns a tuple with the SwiftCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedBankAccountCreateUpdate) GetSwiftCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SwiftCode.Get(), o.SwiftCode.IsSet()
}

// HasSwiftCode returns a boolean if a field has been set.
func (o *PatchedBankAccountCreateUpdate) HasSwiftCode() bool {
	if o != nil && o.SwiftCode.IsSet() {
		return true
	}

	return false
}

// SetSwiftCode gets a reference to the given NullableString and assigns it to the SwiftCode field.
func (o *PatchedBankAccountCreateUpdate) SetSwiftCode(v string) {
	o.SwiftCode.Set(&v)
}
// SetSwiftCodeNil sets the value for SwiftCode to be an explicit nil
func (o *PatchedBankAccountCreateUpdate) SetSwiftCodeNil() {
	o.SwiftCode.Set(nil)
}

// UnsetSwiftCode ensures that no value is present for SwiftCode, not even an explicit nil
func (o *PatchedBankAccountCreateUpdate) UnsetSwiftCode() {
	o.SwiftCode.Unset()
}

func (o PatchedBankAccountCreateUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.AccountNumber.IsSet() {
		toSerialize["account_number"] = o.AccountNumber.Get()
	}
	if o.AccountSortCode.IsSet() {
		toSerialize["account_sort_code"] = o.AccountSortCode.Get()
	}
	if o.AccountHolderName.IsSet() {
		toSerialize["account_holder_name"] = o.AccountHolderName.Get()
	}
	if o.Joint != nil {
		toSerialize["joint"] = o.Joint
	}
	if o.BankName.IsSet() {
		toSerialize["bank_name"] = o.BankName.Get()
	}
	if o.Iban.IsSet() {
		toSerialize["iban"] = o.Iban.Get()
	}
	if o.SwiftCode.IsSet() {
		toSerialize["swift_code"] = o.SwiftCode.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedBankAccountCreateUpdate struct {
	value *PatchedBankAccountCreateUpdate
	isSet bool
}

func (v NullablePatchedBankAccountCreateUpdate) Get() *PatchedBankAccountCreateUpdate {
	return v.value
}

func (v *NullablePatchedBankAccountCreateUpdate) Set(val *PatchedBankAccountCreateUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedBankAccountCreateUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedBankAccountCreateUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedBankAccountCreateUpdate(val *PatchedBankAccountCreateUpdate) *NullablePatchedBankAccountCreateUpdate {
	return &NullablePatchedBankAccountCreateUpdate{value: val, isSet: true}
}

func (v NullablePatchedBankAccountCreateUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedBankAccountCreateUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


