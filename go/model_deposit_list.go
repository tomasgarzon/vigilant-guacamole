/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// DepositList struct for DepositList
type DepositList struct {
	Uuid string `json:"uuid"`
	Amount float64 `json:"amount"`
	Reference string `json:"reference"`
	Status StatusB6aEnum `json:"status"`
	DepositType DepositTypeEnum `json:"deposit_type"`
	Completed time.Time `json:"completed"`
	TransactedAt time.Time `json:"transacted_at"`
	// Additional deposit attributes for the specific portal
	ExtraData map[string]interface{} `json:"extra_data"`
}

// NewDepositList instantiates a new DepositList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositList(uuid string, amount float64, reference string, status StatusB6aEnum, depositType DepositTypeEnum, completed time.Time, transactedAt time.Time, extraData map[string]interface{}) *DepositList {
	this := DepositList{}
	this.Uuid = uuid
	this.Amount = amount
	this.Reference = reference
	this.Status = status
	this.DepositType = depositType
	this.Completed = completed
	this.TransactedAt = transactedAt
	this.ExtraData = extraData
	return &this
}

// NewDepositListWithDefaults instantiates a new DepositList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositListWithDefaults() *DepositList {
	this := DepositList{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *DepositList) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *DepositList) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *DepositList) SetUuid(v string) {
	o.Uuid = v
}

// GetAmount returns the Amount field value
func (o *DepositList) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *DepositList) GetAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *DepositList) SetAmount(v float64) {
	o.Amount = v
}

// GetReference returns the Reference field value
func (o *DepositList) GetReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value
// and a boolean to check if the value has been set.
func (o *DepositList) GetReferenceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reference, true
}

// SetReference sets field value
func (o *DepositList) SetReference(v string) {
	o.Reference = v
}

// GetStatus returns the Status field value
func (o *DepositList) GetStatus() StatusB6aEnum {
	if o == nil {
		var ret StatusB6aEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DepositList) GetStatusOk() (*StatusB6aEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DepositList) SetStatus(v StatusB6aEnum) {
	o.Status = v
}

// GetDepositType returns the DepositType field value
func (o *DepositList) GetDepositType() DepositTypeEnum {
	if o == nil {
		var ret DepositTypeEnum
		return ret
	}

	return o.DepositType
}

// GetDepositTypeOk returns a tuple with the DepositType field value
// and a boolean to check if the value has been set.
func (o *DepositList) GetDepositTypeOk() (*DepositTypeEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DepositType, true
}

// SetDepositType sets field value
func (o *DepositList) SetDepositType(v DepositTypeEnum) {
	o.DepositType = v
}

// GetCompleted returns the Completed field value
func (o *DepositList) GetCompleted() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value
// and a boolean to check if the value has been set.
func (o *DepositList) GetCompletedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Completed, true
}

// SetCompleted sets field value
func (o *DepositList) SetCompleted(v time.Time) {
	o.Completed = v
}

// GetTransactedAt returns the TransactedAt field value
func (o *DepositList) GetTransactedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TransactedAt
}

// GetTransactedAtOk returns a tuple with the TransactedAt field value
// and a boolean to check if the value has been set.
func (o *DepositList) GetTransactedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactedAt, true
}

// SetTransactedAt sets field value
func (o *DepositList) SetTransactedAt(v time.Time) {
	o.TransactedAt = v
}

// GetExtraData returns the ExtraData field value
func (o *DepositList) GetExtraData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value
// and a boolean to check if the value has been set.
func (o *DepositList) GetExtraDataOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExtraData, true
}

// SetExtraData sets field value
func (o *DepositList) SetExtraData(v map[string]interface{}) {
	o.ExtraData = v
}

func (o DepositList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["reference"] = o.Reference
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["deposit_type"] = o.DepositType
	}
	if true {
		toSerialize["completed"] = o.Completed
	}
	if true {
		toSerialize["transacted_at"] = o.TransactedAt
	}
	if true {
		toSerialize["extra_data"] = o.ExtraData
	}
	return json.Marshal(toSerialize)
}

type NullableDepositList struct {
	value *DepositList
	isSet bool
}

func (v NullableDepositList) Get() *DepositList {
	return v.value
}

func (v *NullableDepositList) Set(val *DepositList) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositList) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositList(val *DepositList) *NullableDepositList {
	return &NullableDepositList{value: val, isSet: true}
}

func (v NullableDepositList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


