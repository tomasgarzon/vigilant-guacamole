/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InvestorModelPortfolio struct for InvestorModelPortfolio
type InvestorModelPortfolio struct {
	Uuid string `json:"uuid"`
	Name string `json:"name"`
	// Percentage on the interval 0-1.
	CashWeight float64 `json:"cash_weight"`
	RiskLevel int32 `json:"risk_level"`
	Allocation []AssetModelPortfolio `json:"allocation"`
	// Additional ModelPortfolio attributes
	ExtraData map[string]interface{} `json:"extra_data"`
}

// NewInvestorModelPortfolio instantiates a new InvestorModelPortfolio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvestorModelPortfolio(uuid string, name string, cashWeight float64, riskLevel int32, allocation []AssetModelPortfolio, extraData map[string]interface{}) *InvestorModelPortfolio {
	this := InvestorModelPortfolio{}
	this.Uuid = uuid
	this.Name = name
	this.CashWeight = cashWeight
	this.RiskLevel = riskLevel
	this.Allocation = allocation
	this.ExtraData = extraData
	return &this
}

// NewInvestorModelPortfolioWithDefaults instantiates a new InvestorModelPortfolio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvestorModelPortfolioWithDefaults() *InvestorModelPortfolio {
	this := InvestorModelPortfolio{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *InvestorModelPortfolio) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *InvestorModelPortfolio) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *InvestorModelPortfolio) SetUuid(v string) {
	o.Uuid = v
}

// GetName returns the Name field value
func (o *InvestorModelPortfolio) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InvestorModelPortfolio) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InvestorModelPortfolio) SetName(v string) {
	o.Name = v
}

// GetCashWeight returns the CashWeight field value
func (o *InvestorModelPortfolio) GetCashWeight() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.CashWeight
}

// GetCashWeightOk returns a tuple with the CashWeight field value
// and a boolean to check if the value has been set.
func (o *InvestorModelPortfolio) GetCashWeightOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CashWeight, true
}

// SetCashWeight sets field value
func (o *InvestorModelPortfolio) SetCashWeight(v float64) {
	o.CashWeight = v
}

// GetRiskLevel returns the RiskLevel field value
func (o *InvestorModelPortfolio) GetRiskLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RiskLevel
}

// GetRiskLevelOk returns a tuple with the RiskLevel field value
// and a boolean to check if the value has been set.
func (o *InvestorModelPortfolio) GetRiskLevelOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RiskLevel, true
}

// SetRiskLevel sets field value
func (o *InvestorModelPortfolio) SetRiskLevel(v int32) {
	o.RiskLevel = v
}

// GetAllocation returns the Allocation field value
func (o *InvestorModelPortfolio) GetAllocation() []AssetModelPortfolio {
	if o == nil {
		var ret []AssetModelPortfolio
		return ret
	}

	return o.Allocation
}

// GetAllocationOk returns a tuple with the Allocation field value
// and a boolean to check if the value has been set.
func (o *InvestorModelPortfolio) GetAllocationOk() (*[]AssetModelPortfolio, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Allocation, true
}

// SetAllocation sets field value
func (o *InvestorModelPortfolio) SetAllocation(v []AssetModelPortfolio) {
	o.Allocation = v
}

// GetExtraData returns the ExtraData field value
func (o *InvestorModelPortfolio) GetExtraData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value
// and a boolean to check if the value has been set.
func (o *InvestorModelPortfolio) GetExtraDataOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExtraData, true
}

// SetExtraData sets field value
func (o *InvestorModelPortfolio) SetExtraData(v map[string]interface{}) {
	o.ExtraData = v
}

func (o InvestorModelPortfolio) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["cash_weight"] = o.CashWeight
	}
	if true {
		toSerialize["risk_level"] = o.RiskLevel
	}
	if true {
		toSerialize["allocation"] = o.Allocation
	}
	if true {
		toSerialize["extra_data"] = o.ExtraData
	}
	return json.Marshal(toSerialize)
}

type NullableInvestorModelPortfolio struct {
	value *InvestorModelPortfolio
	isSet bool
}

func (v NullableInvestorModelPortfolio) Get() *InvestorModelPortfolio {
	return v.value
}

func (v *NullableInvestorModelPortfolio) Set(val *InvestorModelPortfolio) {
	v.value = val
	v.isSet = true
}

func (v NullableInvestorModelPortfolio) IsSet() bool {
	return v.isSet
}

func (v *NullableInvestorModelPortfolio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvestorModelPortfolio(val *InvestorModelPortfolio) *NullableInvestorModelPortfolio {
	return &NullableInvestorModelPortfolio{value: val, isSet: true}
}

func (v NullableInvestorModelPortfolio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvestorModelPortfolio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


