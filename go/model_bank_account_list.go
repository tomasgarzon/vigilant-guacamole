/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BankAccountList struct for BankAccountList
type BankAccountList struct {
	Uuid string `json:"uuid"`
	AccountNumber string `json:"account_number"`
	AccountSortCode string `json:"account_sort_code"`
	AccountHolderName string `json:"account_holder_name"`
	Joint bool `json:"joint"`
	BankName string `json:"bank_name"`
	Iban string `json:"iban"`
	SwiftCode string `json:"swift_code"`
}

// NewBankAccountList instantiates a new BankAccountList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankAccountList(uuid string, accountNumber string, accountSortCode string, accountHolderName string, joint bool, bankName string, iban string, swiftCode string) *BankAccountList {
	this := BankAccountList{}
	this.Uuid = uuid
	this.AccountNumber = accountNumber
	this.AccountSortCode = accountSortCode
	this.AccountHolderName = accountHolderName
	this.Joint = joint
	this.BankName = bankName
	this.Iban = iban
	this.SwiftCode = swiftCode
	return &this
}

// NewBankAccountListWithDefaults instantiates a new BankAccountList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankAccountListWithDefaults() *BankAccountList {
	this := BankAccountList{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *BankAccountList) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *BankAccountList) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *BankAccountList) SetUuid(v string) {
	o.Uuid = v
}

// GetAccountNumber returns the AccountNumber field value
func (o *BankAccountList) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *BankAccountList) GetAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *BankAccountList) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetAccountSortCode returns the AccountSortCode field value
func (o *BankAccountList) GetAccountSortCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountSortCode
}

// GetAccountSortCodeOk returns a tuple with the AccountSortCode field value
// and a boolean to check if the value has been set.
func (o *BankAccountList) GetAccountSortCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountSortCode, true
}

// SetAccountSortCode sets field value
func (o *BankAccountList) SetAccountSortCode(v string) {
	o.AccountSortCode = v
}

// GetAccountHolderName returns the AccountHolderName field value
func (o *BankAccountList) GetAccountHolderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountHolderName
}

// GetAccountHolderNameOk returns a tuple with the AccountHolderName field value
// and a boolean to check if the value has been set.
func (o *BankAccountList) GetAccountHolderNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountHolderName, true
}

// SetAccountHolderName sets field value
func (o *BankAccountList) SetAccountHolderName(v string) {
	o.AccountHolderName = v
}

// GetJoint returns the Joint field value
func (o *BankAccountList) GetJoint() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Joint
}

// GetJointOk returns a tuple with the Joint field value
// and a boolean to check if the value has been set.
func (o *BankAccountList) GetJointOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Joint, true
}

// SetJoint sets field value
func (o *BankAccountList) SetJoint(v bool) {
	o.Joint = v
}

// GetBankName returns the BankName field value
func (o *BankAccountList) GetBankName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value
// and a boolean to check if the value has been set.
func (o *BankAccountList) GetBankNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BankName, true
}

// SetBankName sets field value
func (o *BankAccountList) SetBankName(v string) {
	o.BankName = v
}

// GetIban returns the Iban field value
func (o *BankAccountList) GetIban() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Iban
}

// GetIbanOk returns a tuple with the Iban field value
// and a boolean to check if the value has been set.
func (o *BankAccountList) GetIbanOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Iban, true
}

// SetIban sets field value
func (o *BankAccountList) SetIban(v string) {
	o.Iban = v
}

// GetSwiftCode returns the SwiftCode field value
func (o *BankAccountList) GetSwiftCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwiftCode
}

// GetSwiftCodeOk returns a tuple with the SwiftCode field value
// and a boolean to check if the value has been set.
func (o *BankAccountList) GetSwiftCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SwiftCode, true
}

// SetSwiftCode sets field value
func (o *BankAccountList) SetSwiftCode(v string) {
	o.SwiftCode = v
}

func (o BankAccountList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["account_number"] = o.AccountNumber
	}
	if true {
		toSerialize["account_sort_code"] = o.AccountSortCode
	}
	if true {
		toSerialize["account_holder_name"] = o.AccountHolderName
	}
	if true {
		toSerialize["joint"] = o.Joint
	}
	if true {
		toSerialize["bank_name"] = o.BankName
	}
	if true {
		toSerialize["iban"] = o.Iban
	}
	if true {
		toSerialize["swift_code"] = o.SwiftCode
	}
	return json.Marshal(toSerialize)
}

type NullableBankAccountList struct {
	value *BankAccountList
	isSet bool
}

func (v NullableBankAccountList) Get() *BankAccountList {
	return v.value
}

func (v *NullableBankAccountList) Set(val *BankAccountList) {
	v.value = val
	v.isSet = true
}

func (v NullableBankAccountList) IsSet() bool {
	return v.isSet
}

func (v *NullableBankAccountList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankAccountList(val *BankAccountList) *NullableBankAccountList {
	return &NullableBankAccountList{value: val, isSet: true}
}

func (v NullableBankAccountList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankAccountList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


