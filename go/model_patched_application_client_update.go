/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PatchedApplicationClientUpdate A ModelSerializer that takes additional arguments for \"fields\", \"omit\" and \"expand\" in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations
type PatchedApplicationClientUpdate struct {
	Email *string `json:"email,omitempty"`
	Birthdate *string `json:"birthdate,omitempty"`
	TosConsent *bool `json:"tos_consent,omitempty"`
	MarketingConsent *bool `json:"marketing_consent,omitempty"`
	DataConsent *bool `json:"data_consent,omitempty"`
	TosConsentDate *string `json:"tos_consent_date,omitempty"`
	TaxInformation *[]string `json:"tax_information,omitempty"`
	CountryBirth *CountryField `json:"country_birth,omitempty"`
	LastLogin *time.Time `json:"last_login,omitempty"`
	ReferredBy NullableString `json:"referred_by,omitempty"`
	SuccessfulReferrals *int32 `json:"successful_referrals,omitempty"`
	KycVerified *bool `json:"kyc_verified,omitempty"`
	IsVerified *bool `json:"is_verified,omitempty"`
	FeeSegments *[]string `json:"fee_segments,omitempty"`
	ExtraData *map[string]interface{} `json:"extra_data,omitempty"`
	Portfolios *[]string `json:"portfolios,omitempty"`
	OnboardedBy NullableString `json:"onboarded_by,omitempty"`
	RiskLevel *int32 `json:"risk_level,omitempty"`
	OnboardingToken *string `json:"onboarding_token,omitempty"`
	Password *string `json:"password,omitempty"`
	EmailVerifiedLastRequest *time.Time `json:"email_verified_last_request,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	Updated *time.Time `json:"updated,omitempty"`
	Comments NullableString `json:"comments,omitempty"`
	Status *StatusB65Enum `json:"status,omitempty"`
	EmailVerified *bool `json:"email_verified,omitempty"`
	EmailVerifyLastRequest NullableTime `json:"email_verify_last_request,omitempty"`
	Title NullableOneOfTitleEnumBlankEnumNullEnum `json:"title,omitempty"`
	FirstName NullableString `json:"first_name,omitempty"`
	MiddleName NullableString `json:"middle_name,omitempty"`
	LastName NullableString `json:"last_name,omitempty"`
	Gender NullableOneOfGenderEnumBlankEnumNullEnum `json:"gender,omitempty"`
	MaritalStatus NullableOneOfMaritalStatusEnumBlankEnumNullEnum `json:"marital_status,omitempty"`
	PhoneNumber NullableString `json:"phone_number,omitempty"`
	PhoneNumberVerified NullableTime `json:"phone_number_verified,omitempty"`
	Language *string `json:"language,omitempty"`
	EmploymentStatus NullableOneOfEmploymentStatusEnumBlankEnumNullEnum `json:"employment_status,omitempty"`
	Profession NullableString `json:"profession,omitempty"`
	ReferralCode NullableString `json:"referral_code,omitempty"`
	Activated NullableTime `json:"activated,omitempty"`
	UtmSource *string `json:"utm_source,omitempty"`
	UtmMedium *string `json:"utm_medium,omitempty"`
	UtmCampaign *string `json:"utm_campaign,omitempty"`
	UtmTerm *string `json:"utm_term,omitempty"`
	UtmContent *string `json:"utm_content,omitempty"`
	MarketingConsentDate *string `json:"marketing_consent_date,omitempty"`
	DataConsentDate *string `json:"data_consent_date,omitempty"`
}

// NewPatchedApplicationClientUpdate instantiates a new PatchedApplicationClientUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedApplicationClientUpdate() *PatchedApplicationClientUpdate {
	this := PatchedApplicationClientUpdate{}
	return &this
}

// NewPatchedApplicationClientUpdateWithDefaults instantiates a new PatchedApplicationClientUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedApplicationClientUpdateWithDefaults() *PatchedApplicationClientUpdate {
	this := PatchedApplicationClientUpdate{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PatchedApplicationClientUpdate) SetEmail(v string) {
	o.Email = &v
}

// GetBirthdate returns the Birthdate field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetBirthdate() string {
	if o == nil || o.Birthdate == nil {
		var ret string
		return ret
	}
	return *o.Birthdate
}

// GetBirthdateOk returns a tuple with the Birthdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetBirthdateOk() (*string, bool) {
	if o == nil || o.Birthdate == nil {
		return nil, false
	}
	return o.Birthdate, true
}

// HasBirthdate returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasBirthdate() bool {
	if o != nil && o.Birthdate != nil {
		return true
	}

	return false
}

// SetBirthdate gets a reference to the given string and assigns it to the Birthdate field.
func (o *PatchedApplicationClientUpdate) SetBirthdate(v string) {
	o.Birthdate = &v
}

// GetTosConsent returns the TosConsent field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetTosConsent() bool {
	if o == nil || o.TosConsent == nil {
		var ret bool
		return ret
	}
	return *o.TosConsent
}

// GetTosConsentOk returns a tuple with the TosConsent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetTosConsentOk() (*bool, bool) {
	if o == nil || o.TosConsent == nil {
		return nil, false
	}
	return o.TosConsent, true
}

// HasTosConsent returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasTosConsent() bool {
	if o != nil && o.TosConsent != nil {
		return true
	}

	return false
}

// SetTosConsent gets a reference to the given bool and assigns it to the TosConsent field.
func (o *PatchedApplicationClientUpdate) SetTosConsent(v bool) {
	o.TosConsent = &v
}

// GetMarketingConsent returns the MarketingConsent field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetMarketingConsent() bool {
	if o == nil || o.MarketingConsent == nil {
		var ret bool
		return ret
	}
	return *o.MarketingConsent
}

// GetMarketingConsentOk returns a tuple with the MarketingConsent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetMarketingConsentOk() (*bool, bool) {
	if o == nil || o.MarketingConsent == nil {
		return nil, false
	}
	return o.MarketingConsent, true
}

// HasMarketingConsent returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasMarketingConsent() bool {
	if o != nil && o.MarketingConsent != nil {
		return true
	}

	return false
}

// SetMarketingConsent gets a reference to the given bool and assigns it to the MarketingConsent field.
func (o *PatchedApplicationClientUpdate) SetMarketingConsent(v bool) {
	o.MarketingConsent = &v
}

// GetDataConsent returns the DataConsent field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetDataConsent() bool {
	if o == nil || o.DataConsent == nil {
		var ret bool
		return ret
	}
	return *o.DataConsent
}

// GetDataConsentOk returns a tuple with the DataConsent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetDataConsentOk() (*bool, bool) {
	if o == nil || o.DataConsent == nil {
		return nil, false
	}
	return o.DataConsent, true
}

// HasDataConsent returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasDataConsent() bool {
	if o != nil && o.DataConsent != nil {
		return true
	}

	return false
}

// SetDataConsent gets a reference to the given bool and assigns it to the DataConsent field.
func (o *PatchedApplicationClientUpdate) SetDataConsent(v bool) {
	o.DataConsent = &v
}

// GetTosConsentDate returns the TosConsentDate field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetTosConsentDate() string {
	if o == nil || o.TosConsentDate == nil {
		var ret string
		return ret
	}
	return *o.TosConsentDate
}

// GetTosConsentDateOk returns a tuple with the TosConsentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetTosConsentDateOk() (*string, bool) {
	if o == nil || o.TosConsentDate == nil {
		return nil, false
	}
	return o.TosConsentDate, true
}

// HasTosConsentDate returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasTosConsentDate() bool {
	if o != nil && o.TosConsentDate != nil {
		return true
	}

	return false
}

// SetTosConsentDate gets a reference to the given string and assigns it to the TosConsentDate field.
func (o *PatchedApplicationClientUpdate) SetTosConsentDate(v string) {
	o.TosConsentDate = &v
}

// GetTaxInformation returns the TaxInformation field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetTaxInformation() []string {
	if o == nil || o.TaxInformation == nil {
		var ret []string
		return ret
	}
	return *o.TaxInformation
}

// GetTaxInformationOk returns a tuple with the TaxInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetTaxInformationOk() (*[]string, bool) {
	if o == nil || o.TaxInformation == nil {
		return nil, false
	}
	return o.TaxInformation, true
}

// HasTaxInformation returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasTaxInformation() bool {
	if o != nil && o.TaxInformation != nil {
		return true
	}

	return false
}

// SetTaxInformation gets a reference to the given []string and assigns it to the TaxInformation field.
func (o *PatchedApplicationClientUpdate) SetTaxInformation(v []string) {
	o.TaxInformation = &v
}

// GetCountryBirth returns the CountryBirth field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetCountryBirth() CountryField {
	if o == nil || o.CountryBirth == nil {
		var ret CountryField
		return ret
	}
	return *o.CountryBirth
}

// GetCountryBirthOk returns a tuple with the CountryBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetCountryBirthOk() (*CountryField, bool) {
	if o == nil || o.CountryBirth == nil {
		return nil, false
	}
	return o.CountryBirth, true
}

// HasCountryBirth returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasCountryBirth() bool {
	if o != nil && o.CountryBirth != nil {
		return true
	}

	return false
}

// SetCountryBirth gets a reference to the given CountryField and assigns it to the CountryBirth field.
func (o *PatchedApplicationClientUpdate) SetCountryBirth(v CountryField) {
	o.CountryBirth = &v
}

// GetLastLogin returns the LastLogin field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetLastLogin() time.Time {
	if o == nil || o.LastLogin == nil {
		var ret time.Time
		return ret
	}
	return *o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetLastLoginOk() (*time.Time, bool) {
	if o == nil || o.LastLogin == nil {
		return nil, false
	}
	return o.LastLogin, true
}

// HasLastLogin returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasLastLogin() bool {
	if o != nil && o.LastLogin != nil {
		return true
	}

	return false
}

// SetLastLogin gets a reference to the given time.Time and assigns it to the LastLogin field.
func (o *PatchedApplicationClientUpdate) SetLastLogin(v time.Time) {
	o.LastLogin = &v
}

// GetReferredBy returns the ReferredBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetReferredBy() string {
	if o == nil || o.ReferredBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReferredBy.Get()
}

// GetReferredByOk returns a tuple with the ReferredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetReferredByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReferredBy.Get(), o.ReferredBy.IsSet()
}

// HasReferredBy returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasReferredBy() bool {
	if o != nil && o.ReferredBy.IsSet() {
		return true
	}

	return false
}

// SetReferredBy gets a reference to the given NullableString and assigns it to the ReferredBy field.
func (o *PatchedApplicationClientUpdate) SetReferredBy(v string) {
	o.ReferredBy.Set(&v)
}
// SetReferredByNil sets the value for ReferredBy to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetReferredByNil() {
	o.ReferredBy.Set(nil)
}

// UnsetReferredBy ensures that no value is present for ReferredBy, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetReferredBy() {
	o.ReferredBy.Unset()
}

// GetSuccessfulReferrals returns the SuccessfulReferrals field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetSuccessfulReferrals() int32 {
	if o == nil || o.SuccessfulReferrals == nil {
		var ret int32
		return ret
	}
	return *o.SuccessfulReferrals
}

// GetSuccessfulReferralsOk returns a tuple with the SuccessfulReferrals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetSuccessfulReferralsOk() (*int32, bool) {
	if o == nil || o.SuccessfulReferrals == nil {
		return nil, false
	}
	return o.SuccessfulReferrals, true
}

// HasSuccessfulReferrals returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasSuccessfulReferrals() bool {
	if o != nil && o.SuccessfulReferrals != nil {
		return true
	}

	return false
}

// SetSuccessfulReferrals gets a reference to the given int32 and assigns it to the SuccessfulReferrals field.
func (o *PatchedApplicationClientUpdate) SetSuccessfulReferrals(v int32) {
	o.SuccessfulReferrals = &v
}

// GetKycVerified returns the KycVerified field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetKycVerified() bool {
	if o == nil || o.KycVerified == nil {
		var ret bool
		return ret
	}
	return *o.KycVerified
}

// GetKycVerifiedOk returns a tuple with the KycVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetKycVerifiedOk() (*bool, bool) {
	if o == nil || o.KycVerified == nil {
		return nil, false
	}
	return o.KycVerified, true
}

// HasKycVerified returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasKycVerified() bool {
	if o != nil && o.KycVerified != nil {
		return true
	}

	return false
}

// SetKycVerified gets a reference to the given bool and assigns it to the KycVerified field.
func (o *PatchedApplicationClientUpdate) SetKycVerified(v bool) {
	o.KycVerified = &v
}

// GetIsVerified returns the IsVerified field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetIsVerified() bool {
	if o == nil || o.IsVerified == nil {
		var ret bool
		return ret
	}
	return *o.IsVerified
}

// GetIsVerifiedOk returns a tuple with the IsVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetIsVerifiedOk() (*bool, bool) {
	if o == nil || o.IsVerified == nil {
		return nil, false
	}
	return o.IsVerified, true
}

// HasIsVerified returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasIsVerified() bool {
	if o != nil && o.IsVerified != nil {
		return true
	}

	return false
}

// SetIsVerified gets a reference to the given bool and assigns it to the IsVerified field.
func (o *PatchedApplicationClientUpdate) SetIsVerified(v bool) {
	o.IsVerified = &v
}

// GetFeeSegments returns the FeeSegments field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetFeeSegments() []string {
	if o == nil || o.FeeSegments == nil {
		var ret []string
		return ret
	}
	return *o.FeeSegments
}

// GetFeeSegmentsOk returns a tuple with the FeeSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetFeeSegmentsOk() (*[]string, bool) {
	if o == nil || o.FeeSegments == nil {
		return nil, false
	}
	return o.FeeSegments, true
}

// HasFeeSegments returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasFeeSegments() bool {
	if o != nil && o.FeeSegments != nil {
		return true
	}

	return false
}

// SetFeeSegments gets a reference to the given []string and assigns it to the FeeSegments field.
func (o *PatchedApplicationClientUpdate) SetFeeSegments(v []string) {
	o.FeeSegments = &v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetExtraData() map[string]interface{} {
	if o == nil || o.ExtraData == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetExtraDataOk() (*map[string]interface{}, bool) {
	if o == nil || o.ExtraData == nil {
		return nil, false
	}
	return o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasExtraData() bool {
	if o != nil && o.ExtraData != nil {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given map[string]interface{} and assigns it to the ExtraData field.
func (o *PatchedApplicationClientUpdate) SetExtraData(v map[string]interface{}) {
	o.ExtraData = &v
}

// GetPortfolios returns the Portfolios field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetPortfolios() []string {
	if o == nil || o.Portfolios == nil {
		var ret []string
		return ret
	}
	return *o.Portfolios
}

// GetPortfoliosOk returns a tuple with the Portfolios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetPortfoliosOk() (*[]string, bool) {
	if o == nil || o.Portfolios == nil {
		return nil, false
	}
	return o.Portfolios, true
}

// HasPortfolios returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasPortfolios() bool {
	if o != nil && o.Portfolios != nil {
		return true
	}

	return false
}

// SetPortfolios gets a reference to the given []string and assigns it to the Portfolios field.
func (o *PatchedApplicationClientUpdate) SetPortfolios(v []string) {
	o.Portfolios = &v
}

// GetOnboardedBy returns the OnboardedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetOnboardedBy() string {
	if o == nil || o.OnboardedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.OnboardedBy.Get()
}

// GetOnboardedByOk returns a tuple with the OnboardedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetOnboardedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OnboardedBy.Get(), o.OnboardedBy.IsSet()
}

// HasOnboardedBy returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasOnboardedBy() bool {
	if o != nil && o.OnboardedBy.IsSet() {
		return true
	}

	return false
}

// SetOnboardedBy gets a reference to the given NullableString and assigns it to the OnboardedBy field.
func (o *PatchedApplicationClientUpdate) SetOnboardedBy(v string) {
	o.OnboardedBy.Set(&v)
}
// SetOnboardedByNil sets the value for OnboardedBy to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetOnboardedByNil() {
	o.OnboardedBy.Set(nil)
}

// UnsetOnboardedBy ensures that no value is present for OnboardedBy, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetOnboardedBy() {
	o.OnboardedBy.Unset()
}

// GetRiskLevel returns the RiskLevel field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetRiskLevel() int32 {
	if o == nil || o.RiskLevel == nil {
		var ret int32
		return ret
	}
	return *o.RiskLevel
}

// GetRiskLevelOk returns a tuple with the RiskLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetRiskLevelOk() (*int32, bool) {
	if o == nil || o.RiskLevel == nil {
		return nil, false
	}
	return o.RiskLevel, true
}

// HasRiskLevel returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasRiskLevel() bool {
	if o != nil && o.RiskLevel != nil {
		return true
	}

	return false
}

// SetRiskLevel gets a reference to the given int32 and assigns it to the RiskLevel field.
func (o *PatchedApplicationClientUpdate) SetRiskLevel(v int32) {
	o.RiskLevel = &v
}

// GetOnboardingToken returns the OnboardingToken field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetOnboardingToken() string {
	if o == nil || o.OnboardingToken == nil {
		var ret string
		return ret
	}
	return *o.OnboardingToken
}

// GetOnboardingTokenOk returns a tuple with the OnboardingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetOnboardingTokenOk() (*string, bool) {
	if o == nil || o.OnboardingToken == nil {
		return nil, false
	}
	return o.OnboardingToken, true
}

// HasOnboardingToken returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasOnboardingToken() bool {
	if o != nil && o.OnboardingToken != nil {
		return true
	}

	return false
}

// SetOnboardingToken gets a reference to the given string and assigns it to the OnboardingToken field.
func (o *PatchedApplicationClientUpdate) SetOnboardingToken(v string) {
	o.OnboardingToken = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *PatchedApplicationClientUpdate) SetPassword(v string) {
	o.Password = &v
}

// GetEmailVerifiedLastRequest returns the EmailVerifiedLastRequest field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetEmailVerifiedLastRequest() time.Time {
	if o == nil || o.EmailVerifiedLastRequest == nil {
		var ret time.Time
		return ret
	}
	return *o.EmailVerifiedLastRequest
}

// GetEmailVerifiedLastRequestOk returns a tuple with the EmailVerifiedLastRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetEmailVerifiedLastRequestOk() (*time.Time, bool) {
	if o == nil || o.EmailVerifiedLastRequest == nil {
		return nil, false
	}
	return o.EmailVerifiedLastRequest, true
}

// HasEmailVerifiedLastRequest returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasEmailVerifiedLastRequest() bool {
	if o != nil && o.EmailVerifiedLastRequest != nil {
		return true
	}

	return false
}

// SetEmailVerifiedLastRequest gets a reference to the given time.Time and assigns it to the EmailVerifiedLastRequest field.
func (o *PatchedApplicationClientUpdate) SetEmailVerifiedLastRequest(v time.Time) {
	o.EmailVerifiedLastRequest = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *PatchedApplicationClientUpdate) SetUuid(v string) {
	o.Uuid = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *PatchedApplicationClientUpdate) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetUpdated() time.Time {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *PatchedApplicationClientUpdate) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetComments returns the Comments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetComments() string {
	if o == nil || o.Comments.Get() == nil {
		var ret string
		return ret
	}
	return *o.Comments.Get()
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetCommentsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Comments.Get(), o.Comments.IsSet()
}

// HasComments returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasComments() bool {
	if o != nil && o.Comments.IsSet() {
		return true
	}

	return false
}

// SetComments gets a reference to the given NullableString and assigns it to the Comments field.
func (o *PatchedApplicationClientUpdate) SetComments(v string) {
	o.Comments.Set(&v)
}
// SetCommentsNil sets the value for Comments to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetCommentsNil() {
	o.Comments.Set(nil)
}

// UnsetComments ensures that no value is present for Comments, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetComments() {
	o.Comments.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetStatus() StatusB65Enum {
	if o == nil || o.Status == nil {
		var ret StatusB65Enum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetStatusOk() (*StatusB65Enum, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given StatusB65Enum and assigns it to the Status field.
func (o *PatchedApplicationClientUpdate) SetStatus(v StatusB65Enum) {
	o.Status = &v
}

// GetEmailVerified returns the EmailVerified field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetEmailVerified() bool {
	if o == nil || o.EmailVerified == nil {
		var ret bool
		return ret
	}
	return *o.EmailVerified
}

// GetEmailVerifiedOk returns a tuple with the EmailVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetEmailVerifiedOk() (*bool, bool) {
	if o == nil || o.EmailVerified == nil {
		return nil, false
	}
	return o.EmailVerified, true
}

// HasEmailVerified returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasEmailVerified() bool {
	if o != nil && o.EmailVerified != nil {
		return true
	}

	return false
}

// SetEmailVerified gets a reference to the given bool and assigns it to the EmailVerified field.
func (o *PatchedApplicationClientUpdate) SetEmailVerified(v bool) {
	o.EmailVerified = &v
}

// GetEmailVerifyLastRequest returns the EmailVerifyLastRequest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetEmailVerifyLastRequest() time.Time {
	if o == nil || o.EmailVerifyLastRequest.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.EmailVerifyLastRequest.Get()
}

// GetEmailVerifyLastRequestOk returns a tuple with the EmailVerifyLastRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetEmailVerifyLastRequestOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EmailVerifyLastRequest.Get(), o.EmailVerifyLastRequest.IsSet()
}

// HasEmailVerifyLastRequest returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasEmailVerifyLastRequest() bool {
	if o != nil && o.EmailVerifyLastRequest.IsSet() {
		return true
	}

	return false
}

// SetEmailVerifyLastRequest gets a reference to the given NullableTime and assigns it to the EmailVerifyLastRequest field.
func (o *PatchedApplicationClientUpdate) SetEmailVerifyLastRequest(v time.Time) {
	o.EmailVerifyLastRequest.Set(&v)
}
// SetEmailVerifyLastRequestNil sets the value for EmailVerifyLastRequest to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetEmailVerifyLastRequestNil() {
	o.EmailVerifyLastRequest.Set(nil)
}

// UnsetEmailVerifyLastRequest ensures that no value is present for EmailVerifyLastRequest, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetEmailVerifyLastRequest() {
	o.EmailVerifyLastRequest.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetTitle() OneOfTitleEnumBlankEnumNullEnum {
	if o == nil || o.Title.Get() == nil {
		var ret OneOfTitleEnumBlankEnumNullEnum
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetTitleOk() (*OneOfTitleEnumBlankEnumNullEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableOneOfTitleEnumBlankEnumNullEnum and assigns it to the Title field.
func (o *PatchedApplicationClientUpdate) SetTitle(v OneOfTitleEnumBlankEnumNullEnum) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetTitle() {
	o.Title.Unset()
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetFirstName() string {
	if o == nil || o.FirstName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetFirstNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *PatchedApplicationClientUpdate) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetMiddleName() string {
	if o == nil || o.MiddleName.Get() == nil {
		var ret string
		return ret
	}
	return *o.MiddleName.Get()
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetMiddleNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MiddleName.Get(), o.MiddleName.IsSet()
}

// HasMiddleName returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasMiddleName() bool {
	if o != nil && o.MiddleName.IsSet() {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given NullableString and assigns it to the MiddleName field.
func (o *PatchedApplicationClientUpdate) SetMiddleName(v string) {
	o.MiddleName.Set(&v)
}
// SetMiddleNameNil sets the value for MiddleName to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetMiddleNameNil() {
	o.MiddleName.Set(nil)
}

// UnsetMiddleName ensures that no value is present for MiddleName, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetMiddleName() {
	o.MiddleName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetLastName() string {
	if o == nil || o.LastName.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetLastNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *PatchedApplicationClientUpdate) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetLastName() {
	o.LastName.Unset()
}

// GetGender returns the Gender field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetGender() OneOfGenderEnumBlankEnumNullEnum {
	if o == nil || o.Gender.Get() == nil {
		var ret OneOfGenderEnumBlankEnumNullEnum
		return ret
	}
	return *o.Gender.Get()
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetGenderOk() (*OneOfGenderEnumBlankEnumNullEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Gender.Get(), o.Gender.IsSet()
}

// HasGender returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasGender() bool {
	if o != nil && o.Gender.IsSet() {
		return true
	}

	return false
}

// SetGender gets a reference to the given NullableOneOfGenderEnumBlankEnumNullEnum and assigns it to the Gender field.
func (o *PatchedApplicationClientUpdate) SetGender(v OneOfGenderEnumBlankEnumNullEnum) {
	o.Gender.Set(&v)
}
// SetGenderNil sets the value for Gender to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetGenderNil() {
	o.Gender.Set(nil)
}

// UnsetGender ensures that no value is present for Gender, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetGender() {
	o.Gender.Unset()
}

// GetMaritalStatus returns the MaritalStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetMaritalStatus() OneOfMaritalStatusEnumBlankEnumNullEnum {
	if o == nil || o.MaritalStatus.Get() == nil {
		var ret OneOfMaritalStatusEnumBlankEnumNullEnum
		return ret
	}
	return *o.MaritalStatus.Get()
}

// GetMaritalStatusOk returns a tuple with the MaritalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetMaritalStatusOk() (*OneOfMaritalStatusEnumBlankEnumNullEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaritalStatus.Get(), o.MaritalStatus.IsSet()
}

// HasMaritalStatus returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasMaritalStatus() bool {
	if o != nil && o.MaritalStatus.IsSet() {
		return true
	}

	return false
}

// SetMaritalStatus gets a reference to the given NullableOneOfMaritalStatusEnumBlankEnumNullEnum and assigns it to the MaritalStatus field.
func (o *PatchedApplicationClientUpdate) SetMaritalStatus(v OneOfMaritalStatusEnumBlankEnumNullEnum) {
	o.MaritalStatus.Set(&v)
}
// SetMaritalStatusNil sets the value for MaritalStatus to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetMaritalStatusNil() {
	o.MaritalStatus.Set(nil)
}

// UnsetMaritalStatus ensures that no value is present for MaritalStatus, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetMaritalStatus() {
	o.MaritalStatus.Unset()
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetPhoneNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *PatchedApplicationClientUpdate) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}
// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetPhoneNumberVerified returns the PhoneNumberVerified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetPhoneNumberVerified() time.Time {
	if o == nil || o.PhoneNumberVerified.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.PhoneNumberVerified.Get()
}

// GetPhoneNumberVerifiedOk returns a tuple with the PhoneNumberVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetPhoneNumberVerifiedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PhoneNumberVerified.Get(), o.PhoneNumberVerified.IsSet()
}

// HasPhoneNumberVerified returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasPhoneNumberVerified() bool {
	if o != nil && o.PhoneNumberVerified.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumberVerified gets a reference to the given NullableTime and assigns it to the PhoneNumberVerified field.
func (o *PatchedApplicationClientUpdate) SetPhoneNumberVerified(v time.Time) {
	o.PhoneNumberVerified.Set(&v)
}
// SetPhoneNumberVerifiedNil sets the value for PhoneNumberVerified to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetPhoneNumberVerifiedNil() {
	o.PhoneNumberVerified.Set(nil)
}

// UnsetPhoneNumberVerified ensures that no value is present for PhoneNumberVerified, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetPhoneNumberVerified() {
	o.PhoneNumberVerified.Unset()
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *PatchedApplicationClientUpdate) SetLanguage(v string) {
	o.Language = &v
}

// GetEmploymentStatus returns the EmploymentStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetEmploymentStatus() OneOfEmploymentStatusEnumBlankEnumNullEnum {
	if o == nil || o.EmploymentStatus.Get() == nil {
		var ret OneOfEmploymentStatusEnumBlankEnumNullEnum
		return ret
	}
	return *o.EmploymentStatus.Get()
}

// GetEmploymentStatusOk returns a tuple with the EmploymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetEmploymentStatusOk() (*OneOfEmploymentStatusEnumBlankEnumNullEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EmploymentStatus.Get(), o.EmploymentStatus.IsSet()
}

// HasEmploymentStatus returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasEmploymentStatus() bool {
	if o != nil && o.EmploymentStatus.IsSet() {
		return true
	}

	return false
}

// SetEmploymentStatus gets a reference to the given NullableOneOfEmploymentStatusEnumBlankEnumNullEnum and assigns it to the EmploymentStatus field.
func (o *PatchedApplicationClientUpdate) SetEmploymentStatus(v OneOfEmploymentStatusEnumBlankEnumNullEnum) {
	o.EmploymentStatus.Set(&v)
}
// SetEmploymentStatusNil sets the value for EmploymentStatus to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetEmploymentStatusNil() {
	o.EmploymentStatus.Set(nil)
}

// UnsetEmploymentStatus ensures that no value is present for EmploymentStatus, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetEmploymentStatus() {
	o.EmploymentStatus.Unset()
}

// GetProfession returns the Profession field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetProfession() string {
	if o == nil || o.Profession.Get() == nil {
		var ret string
		return ret
	}
	return *o.Profession.Get()
}

// GetProfessionOk returns a tuple with the Profession field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetProfessionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Profession.Get(), o.Profession.IsSet()
}

// HasProfession returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasProfession() bool {
	if o != nil && o.Profession.IsSet() {
		return true
	}

	return false
}

// SetProfession gets a reference to the given NullableString and assigns it to the Profession field.
func (o *PatchedApplicationClientUpdate) SetProfession(v string) {
	o.Profession.Set(&v)
}
// SetProfessionNil sets the value for Profession to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetProfessionNil() {
	o.Profession.Set(nil)
}

// UnsetProfession ensures that no value is present for Profession, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetProfession() {
	o.Profession.Unset()
}

// GetReferralCode returns the ReferralCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetReferralCode() string {
	if o == nil || o.ReferralCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReferralCode.Get()
}

// GetReferralCodeOk returns a tuple with the ReferralCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetReferralCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReferralCode.Get(), o.ReferralCode.IsSet()
}

// HasReferralCode returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasReferralCode() bool {
	if o != nil && o.ReferralCode.IsSet() {
		return true
	}

	return false
}

// SetReferralCode gets a reference to the given NullableString and assigns it to the ReferralCode field.
func (o *PatchedApplicationClientUpdate) SetReferralCode(v string) {
	o.ReferralCode.Set(&v)
}
// SetReferralCodeNil sets the value for ReferralCode to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetReferralCodeNil() {
	o.ReferralCode.Set(nil)
}

// UnsetReferralCode ensures that no value is present for ReferralCode, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetReferralCode() {
	o.ReferralCode.Unset()
}

// GetActivated returns the Activated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedApplicationClientUpdate) GetActivated() time.Time {
	if o == nil || o.Activated.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Activated.Get()
}

// GetActivatedOk returns a tuple with the Activated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedApplicationClientUpdate) GetActivatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Activated.Get(), o.Activated.IsSet()
}

// HasActivated returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasActivated() bool {
	if o != nil && o.Activated.IsSet() {
		return true
	}

	return false
}

// SetActivated gets a reference to the given NullableTime and assigns it to the Activated field.
func (o *PatchedApplicationClientUpdate) SetActivated(v time.Time) {
	o.Activated.Set(&v)
}
// SetActivatedNil sets the value for Activated to be an explicit nil
func (o *PatchedApplicationClientUpdate) SetActivatedNil() {
	o.Activated.Set(nil)
}

// UnsetActivated ensures that no value is present for Activated, not even an explicit nil
func (o *PatchedApplicationClientUpdate) UnsetActivated() {
	o.Activated.Unset()
}

// GetUtmSource returns the UtmSource field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetUtmSource() string {
	if o == nil || o.UtmSource == nil {
		var ret string
		return ret
	}
	return *o.UtmSource
}

// GetUtmSourceOk returns a tuple with the UtmSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetUtmSourceOk() (*string, bool) {
	if o == nil || o.UtmSource == nil {
		return nil, false
	}
	return o.UtmSource, true
}

// HasUtmSource returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasUtmSource() bool {
	if o != nil && o.UtmSource != nil {
		return true
	}

	return false
}

// SetUtmSource gets a reference to the given string and assigns it to the UtmSource field.
func (o *PatchedApplicationClientUpdate) SetUtmSource(v string) {
	o.UtmSource = &v
}

// GetUtmMedium returns the UtmMedium field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetUtmMedium() string {
	if o == nil || o.UtmMedium == nil {
		var ret string
		return ret
	}
	return *o.UtmMedium
}

// GetUtmMediumOk returns a tuple with the UtmMedium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetUtmMediumOk() (*string, bool) {
	if o == nil || o.UtmMedium == nil {
		return nil, false
	}
	return o.UtmMedium, true
}

// HasUtmMedium returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasUtmMedium() bool {
	if o != nil && o.UtmMedium != nil {
		return true
	}

	return false
}

// SetUtmMedium gets a reference to the given string and assigns it to the UtmMedium field.
func (o *PatchedApplicationClientUpdate) SetUtmMedium(v string) {
	o.UtmMedium = &v
}

// GetUtmCampaign returns the UtmCampaign field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetUtmCampaign() string {
	if o == nil || o.UtmCampaign == nil {
		var ret string
		return ret
	}
	return *o.UtmCampaign
}

// GetUtmCampaignOk returns a tuple with the UtmCampaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetUtmCampaignOk() (*string, bool) {
	if o == nil || o.UtmCampaign == nil {
		return nil, false
	}
	return o.UtmCampaign, true
}

// HasUtmCampaign returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasUtmCampaign() bool {
	if o != nil && o.UtmCampaign != nil {
		return true
	}

	return false
}

// SetUtmCampaign gets a reference to the given string and assigns it to the UtmCampaign field.
func (o *PatchedApplicationClientUpdate) SetUtmCampaign(v string) {
	o.UtmCampaign = &v
}

// GetUtmTerm returns the UtmTerm field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetUtmTerm() string {
	if o == nil || o.UtmTerm == nil {
		var ret string
		return ret
	}
	return *o.UtmTerm
}

// GetUtmTermOk returns a tuple with the UtmTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetUtmTermOk() (*string, bool) {
	if o == nil || o.UtmTerm == nil {
		return nil, false
	}
	return o.UtmTerm, true
}

// HasUtmTerm returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasUtmTerm() bool {
	if o != nil && o.UtmTerm != nil {
		return true
	}

	return false
}

// SetUtmTerm gets a reference to the given string and assigns it to the UtmTerm field.
func (o *PatchedApplicationClientUpdate) SetUtmTerm(v string) {
	o.UtmTerm = &v
}

// GetUtmContent returns the UtmContent field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetUtmContent() string {
	if o == nil || o.UtmContent == nil {
		var ret string
		return ret
	}
	return *o.UtmContent
}

// GetUtmContentOk returns a tuple with the UtmContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetUtmContentOk() (*string, bool) {
	if o == nil || o.UtmContent == nil {
		return nil, false
	}
	return o.UtmContent, true
}

// HasUtmContent returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasUtmContent() bool {
	if o != nil && o.UtmContent != nil {
		return true
	}

	return false
}

// SetUtmContent gets a reference to the given string and assigns it to the UtmContent field.
func (o *PatchedApplicationClientUpdate) SetUtmContent(v string) {
	o.UtmContent = &v
}

// GetMarketingConsentDate returns the MarketingConsentDate field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetMarketingConsentDate() string {
	if o == nil || o.MarketingConsentDate == nil {
		var ret string
		return ret
	}
	return *o.MarketingConsentDate
}

// GetMarketingConsentDateOk returns a tuple with the MarketingConsentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetMarketingConsentDateOk() (*string, bool) {
	if o == nil || o.MarketingConsentDate == nil {
		return nil, false
	}
	return o.MarketingConsentDate, true
}

// HasMarketingConsentDate returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasMarketingConsentDate() bool {
	if o != nil && o.MarketingConsentDate != nil {
		return true
	}

	return false
}

// SetMarketingConsentDate gets a reference to the given string and assigns it to the MarketingConsentDate field.
func (o *PatchedApplicationClientUpdate) SetMarketingConsentDate(v string) {
	o.MarketingConsentDate = &v
}

// GetDataConsentDate returns the DataConsentDate field value if set, zero value otherwise.
func (o *PatchedApplicationClientUpdate) GetDataConsentDate() string {
	if o == nil || o.DataConsentDate == nil {
		var ret string
		return ret
	}
	return *o.DataConsentDate
}

// GetDataConsentDateOk returns a tuple with the DataConsentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedApplicationClientUpdate) GetDataConsentDateOk() (*string, bool) {
	if o == nil || o.DataConsentDate == nil {
		return nil, false
	}
	return o.DataConsentDate, true
}

// HasDataConsentDate returns a boolean if a field has been set.
func (o *PatchedApplicationClientUpdate) HasDataConsentDate() bool {
	if o != nil && o.DataConsentDate != nil {
		return true
	}

	return false
}

// SetDataConsentDate gets a reference to the given string and assigns it to the DataConsentDate field.
func (o *PatchedApplicationClientUpdate) SetDataConsentDate(v string) {
	o.DataConsentDate = &v
}

func (o PatchedApplicationClientUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Birthdate != nil {
		toSerialize["birthdate"] = o.Birthdate
	}
	if o.TosConsent != nil {
		toSerialize["tos_consent"] = o.TosConsent
	}
	if o.MarketingConsent != nil {
		toSerialize["marketing_consent"] = o.MarketingConsent
	}
	if o.DataConsent != nil {
		toSerialize["data_consent"] = o.DataConsent
	}
	if o.TosConsentDate != nil {
		toSerialize["tos_consent_date"] = o.TosConsentDate
	}
	if o.TaxInformation != nil {
		toSerialize["tax_information"] = o.TaxInformation
	}
	if o.CountryBirth != nil {
		toSerialize["country_birth"] = o.CountryBirth
	}
	if o.LastLogin != nil {
		toSerialize["last_login"] = o.LastLogin
	}
	if o.ReferredBy.IsSet() {
		toSerialize["referred_by"] = o.ReferredBy.Get()
	}
	if o.SuccessfulReferrals != nil {
		toSerialize["successful_referrals"] = o.SuccessfulReferrals
	}
	if o.KycVerified != nil {
		toSerialize["kyc_verified"] = o.KycVerified
	}
	if o.IsVerified != nil {
		toSerialize["is_verified"] = o.IsVerified
	}
	if o.FeeSegments != nil {
		toSerialize["fee_segments"] = o.FeeSegments
	}
	if o.ExtraData != nil {
		toSerialize["extra_data"] = o.ExtraData
	}
	if o.Portfolios != nil {
		toSerialize["portfolios"] = o.Portfolios
	}
	if o.OnboardedBy.IsSet() {
		toSerialize["onboarded_by"] = o.OnboardedBy.Get()
	}
	if o.RiskLevel != nil {
		toSerialize["risk_level"] = o.RiskLevel
	}
	if o.OnboardingToken != nil {
		toSerialize["onboarding_token"] = o.OnboardingToken
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.EmailVerifiedLastRequest != nil {
		toSerialize["email_verified_last_request"] = o.EmailVerifiedLastRequest
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.Comments.IsSet() {
		toSerialize["comments"] = o.Comments.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.EmailVerified != nil {
		toSerialize["email_verified"] = o.EmailVerified
	}
	if o.EmailVerifyLastRequest.IsSet() {
		toSerialize["email_verify_last_request"] = o.EmailVerifyLastRequest.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.FirstName.IsSet() {
		toSerialize["first_name"] = o.FirstName.Get()
	}
	if o.MiddleName.IsSet() {
		toSerialize["middle_name"] = o.MiddleName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["last_name"] = o.LastName.Get()
	}
	if o.Gender.IsSet() {
		toSerialize["gender"] = o.Gender.Get()
	}
	if o.MaritalStatus.IsSet() {
		toSerialize["marital_status"] = o.MaritalStatus.Get()
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["phone_number"] = o.PhoneNumber.Get()
	}
	if o.PhoneNumberVerified.IsSet() {
		toSerialize["phone_number_verified"] = o.PhoneNumberVerified.Get()
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.EmploymentStatus.IsSet() {
		toSerialize["employment_status"] = o.EmploymentStatus.Get()
	}
	if o.Profession.IsSet() {
		toSerialize["profession"] = o.Profession.Get()
	}
	if o.ReferralCode.IsSet() {
		toSerialize["referral_code"] = o.ReferralCode.Get()
	}
	if o.Activated.IsSet() {
		toSerialize["activated"] = o.Activated.Get()
	}
	if o.UtmSource != nil {
		toSerialize["utm_source"] = o.UtmSource
	}
	if o.UtmMedium != nil {
		toSerialize["utm_medium"] = o.UtmMedium
	}
	if o.UtmCampaign != nil {
		toSerialize["utm_campaign"] = o.UtmCampaign
	}
	if o.UtmTerm != nil {
		toSerialize["utm_term"] = o.UtmTerm
	}
	if o.UtmContent != nil {
		toSerialize["utm_content"] = o.UtmContent
	}
	if o.MarketingConsentDate != nil {
		toSerialize["marketing_consent_date"] = o.MarketingConsentDate
	}
	if o.DataConsentDate != nil {
		toSerialize["data_consent_date"] = o.DataConsentDate
	}
	return json.Marshal(toSerialize)
}

type NullablePatchedApplicationClientUpdate struct {
	value *PatchedApplicationClientUpdate
	isSet bool
}

func (v NullablePatchedApplicationClientUpdate) Get() *PatchedApplicationClientUpdate {
	return v.value
}

func (v *NullablePatchedApplicationClientUpdate) Set(val *PatchedApplicationClientUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedApplicationClientUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedApplicationClientUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedApplicationClientUpdate(val *PatchedApplicationClientUpdate) *NullablePatchedApplicationClientUpdate {
	return &NullablePatchedApplicationClientUpdate{value: val, isSet: true}
}

func (v NullablePatchedApplicationClientUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedApplicationClientUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


