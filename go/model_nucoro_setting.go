/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NucoroSetting struct for NucoroSetting
type NucoroSetting struct {
	Key string `json:"key"`
}

// NewNucoroSetting instantiates a new NucoroSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNucoroSetting(key string) *NucoroSetting {
	this := NucoroSetting{}
	this.Key = key
	return &this
}

// NewNucoroSettingWithDefaults instantiates a new NucoroSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNucoroSettingWithDefaults() *NucoroSetting {
	this := NucoroSetting{}
	return &this
}

// GetKey returns the Key field value
func (o *NucoroSetting) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *NucoroSetting) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *NucoroSetting) SetKey(v string) {
	o.Key = v
}

func (o NucoroSetting) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableNucoroSetting struct {
	value *NucoroSetting
	isSet bool
}

func (v NullableNucoroSetting) Get() *NucoroSetting {
	return v.value
}

func (v *NullableNucoroSetting) Set(val *NucoroSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableNucoroSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableNucoroSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNucoroSetting(val *NucoroSetting) *NullableNucoroSetting {
	return &NullableNucoroSetting{value: val, isSet: true}
}

func (v NullableNucoroSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNucoroSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


