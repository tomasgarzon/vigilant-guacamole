/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MinimumAppVersion struct for MinimumAppVersion
type MinimumAppVersion struct {
	Required AppVersion `json:"required"`
}

// NewMinimumAppVersion instantiates a new MinimumAppVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimumAppVersion(required AppVersion) *MinimumAppVersion {
	this := MinimumAppVersion{}
	this.Required = required
	return &this
}

// NewMinimumAppVersionWithDefaults instantiates a new MinimumAppVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimumAppVersionWithDefaults() *MinimumAppVersion {
	this := MinimumAppVersion{}
	return &this
}

// GetRequired returns the Required field value
func (o *MinimumAppVersion) GetRequired() AppVersion {
	if o == nil {
		var ret AppVersion
		return ret
	}

	return o.Required
}

// GetRequiredOk returns a tuple with the Required field value
// and a boolean to check if the value has been set.
func (o *MinimumAppVersion) GetRequiredOk() (*AppVersion, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Required, true
}

// SetRequired sets field value
func (o *MinimumAppVersion) SetRequired(v AppVersion) {
	o.Required = v
}

func (o MinimumAppVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["required"] = o.Required
	}
	return json.Marshal(toSerialize)
}

type NullableMinimumAppVersion struct {
	value *MinimumAppVersion
	isSet bool
}

func (v NullableMinimumAppVersion) Get() *MinimumAppVersion {
	return v.value
}

func (v *NullableMinimumAppVersion) Set(val *MinimumAppVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimumAppVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimumAppVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimumAppVersion(val *MinimumAppVersion) *NullableMinimumAppVersion {
	return &NullableMinimumAppVersion{value: val, isSet: true}
}

func (v NullableMinimumAppVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimumAppVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


