/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Message struct for Message
type Message struct {
	User string `json:"user"`
	ReadDate time.Time `json:"read_date"`
	Content *string `json:"content,omitempty"`
	Created time.Time `json:"created"`
	Attachments []Attachment `json:"attachments"`
	Uuid string `json:"uuid"`
}

// NewMessage instantiates a new Message object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessage(user string, readDate time.Time, created time.Time, attachments []Attachment, uuid string) *Message {
	this := Message{}
	this.User = user
	this.ReadDate = readDate
	this.Created = created
	this.Attachments = attachments
	this.Uuid = uuid
	return &this
}

// NewMessageWithDefaults instantiates a new Message object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageWithDefaults() *Message {
	this := Message{}
	return &this
}

// GetUser returns the User field value
func (o *Message) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *Message) GetUserOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *Message) SetUser(v string) {
	o.User = v
}

// GetReadDate returns the ReadDate field value
func (o *Message) GetReadDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ReadDate
}

// GetReadDateOk returns a tuple with the ReadDate field value
// and a boolean to check if the value has been set.
func (o *Message) GetReadDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReadDate, true
}

// SetReadDate sets field value
func (o *Message) SetReadDate(v time.Time) {
	o.ReadDate = v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *Message) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Message) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *Message) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *Message) SetContent(v string) {
	o.Content = &v
}

// GetCreated returns the Created field value
func (o *Message) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *Message) GetCreatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *Message) SetCreated(v time.Time) {
	o.Created = v
}

// GetAttachments returns the Attachments field value
func (o *Message) GetAttachments() []Attachment {
	if o == nil {
		var ret []Attachment
		return ret
	}

	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value
// and a boolean to check if the value has been set.
func (o *Message) GetAttachmentsOk() (*[]Attachment, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Attachments, true
}

// SetAttachments sets field value
func (o *Message) SetAttachments(v []Attachment) {
	o.Attachments = v
}

// GetUuid returns the Uuid field value
func (o *Message) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *Message) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *Message) SetUuid(v string) {
	o.Uuid = v
}

func (o Message) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["read_date"] = o.ReadDate
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["attachments"] = o.Attachments
	}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableMessage struct {
	value *Message
	isSet bool
}

func (v NullableMessage) Get() *Message {
	return v.value
}

func (v *NullableMessage) Set(val *Message) {
	v.value = val
	v.isSet = true
}

func (v NullableMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessage(val *Message) *NullableMessage {
	return &NullableMessage{value: val, isSet: true}
}

func (v NullableMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


