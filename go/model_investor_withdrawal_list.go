/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InvestorWithdrawalList struct for InvestorWithdrawalList
type InvestorWithdrawalList struct {
	Uuid string `json:"uuid"`
	Amount float64 `json:"amount"`
	Status Status14bEnum `json:"status"`
	WithdrawalType string `json:"withdrawal_type"`
	// Additional withdrawal attributes for the specific portal
	ExtraData map[string]interface{} `json:"extra_data"`
}

// NewInvestorWithdrawalList instantiates a new InvestorWithdrawalList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvestorWithdrawalList(uuid string, amount float64, status Status14bEnum, withdrawalType string, extraData map[string]interface{}) *InvestorWithdrawalList {
	this := InvestorWithdrawalList{}
	this.Uuid = uuid
	this.Amount = amount
	this.Status = status
	this.WithdrawalType = withdrawalType
	this.ExtraData = extraData
	return &this
}

// NewInvestorWithdrawalListWithDefaults instantiates a new InvestorWithdrawalList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvestorWithdrawalListWithDefaults() *InvestorWithdrawalList {
	this := InvestorWithdrawalList{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *InvestorWithdrawalList) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *InvestorWithdrawalList) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *InvestorWithdrawalList) SetUuid(v string) {
	o.Uuid = v
}

// GetAmount returns the Amount field value
func (o *InvestorWithdrawalList) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *InvestorWithdrawalList) GetAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *InvestorWithdrawalList) SetAmount(v float64) {
	o.Amount = v
}

// GetStatus returns the Status field value
func (o *InvestorWithdrawalList) GetStatus() Status14bEnum {
	if o == nil {
		var ret Status14bEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InvestorWithdrawalList) GetStatusOk() (*Status14bEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InvestorWithdrawalList) SetStatus(v Status14bEnum) {
	o.Status = v
}

// GetWithdrawalType returns the WithdrawalType field value
func (o *InvestorWithdrawalList) GetWithdrawalType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WithdrawalType
}

// GetWithdrawalTypeOk returns a tuple with the WithdrawalType field value
// and a boolean to check if the value has been set.
func (o *InvestorWithdrawalList) GetWithdrawalTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WithdrawalType, true
}

// SetWithdrawalType sets field value
func (o *InvestorWithdrawalList) SetWithdrawalType(v string) {
	o.WithdrawalType = v
}

// GetExtraData returns the ExtraData field value
func (o *InvestorWithdrawalList) GetExtraData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value
// and a boolean to check if the value has been set.
func (o *InvestorWithdrawalList) GetExtraDataOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExtraData, true
}

// SetExtraData sets field value
func (o *InvestorWithdrawalList) SetExtraData(v map[string]interface{}) {
	o.ExtraData = v
}

func (o InvestorWithdrawalList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["withdrawal_type"] = o.WithdrawalType
	}
	if true {
		toSerialize["extra_data"] = o.ExtraData
	}
	return json.Marshal(toSerialize)
}

type NullableInvestorWithdrawalList struct {
	value *InvestorWithdrawalList
	isSet bool
}

func (v NullableInvestorWithdrawalList) Get() *InvestorWithdrawalList {
	return v.value
}

func (v *NullableInvestorWithdrawalList) Set(val *InvestorWithdrawalList) {
	v.value = val
	v.isSet = true
}

func (v NullableInvestorWithdrawalList) IsSet() bool {
	return v.isSet
}

func (v *NullableInvestorWithdrawalList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvestorWithdrawalList(val *InvestorWithdrawalList) *NullableInvestorWithdrawalList {
	return &NullableInvestorWithdrawalList{value: val, isSet: true}
}

func (v NullableInvestorWithdrawalList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvestorWithdrawalList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


