/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AssetList A ModelSerializer that takes additional arguments for \"fields\", \"omit\" and \"expand\" in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations
type AssetList struct {
	Uuid string `json:"uuid"`
	Name string `json:"name"`
	Isin string `json:"isin"`
	Ticker string `json:"ticker"`
	Status Status6f6Enum `json:"status"`
	Market string `json:"market"`
	Currency string `json:"currency"`
	ExtraData map[string]interface{} `json:"extra_data"`
	Categories []AssetCategory `json:"categories"`
	AssetType AssetTypeEnum `json:"asset_type"`
}

// NewAssetList instantiates a new AssetList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetList(uuid string, name string, isin string, ticker string, status Status6f6Enum, market string, currency string, extraData map[string]interface{}, categories []AssetCategory, assetType AssetTypeEnum) *AssetList {
	this := AssetList{}
	this.Uuid = uuid
	this.Name = name
	this.Isin = isin
	this.Ticker = ticker
	this.Status = status
	this.Market = market
	this.Currency = currency
	this.ExtraData = extraData
	this.Categories = categories
	this.AssetType = assetType
	return &this
}

// NewAssetListWithDefaults instantiates a new AssetList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetListWithDefaults() *AssetList {
	this := AssetList{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *AssetList) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *AssetList) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *AssetList) SetUuid(v string) {
	o.Uuid = v
}

// GetName returns the Name field value
func (o *AssetList) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AssetList) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AssetList) SetName(v string) {
	o.Name = v
}

// GetIsin returns the Isin field value
func (o *AssetList) GetIsin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Isin
}

// GetIsinOk returns a tuple with the Isin field value
// and a boolean to check if the value has been set.
func (o *AssetList) GetIsinOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Isin, true
}

// SetIsin sets field value
func (o *AssetList) SetIsin(v string) {
	o.Isin = v
}

// GetTicker returns the Ticker field value
func (o *AssetList) GetTicker() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ticker
}

// GetTickerOk returns a tuple with the Ticker field value
// and a boolean to check if the value has been set.
func (o *AssetList) GetTickerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Ticker, true
}

// SetTicker sets field value
func (o *AssetList) SetTicker(v string) {
	o.Ticker = v
}

// GetStatus returns the Status field value
func (o *AssetList) GetStatus() Status6f6Enum {
	if o == nil {
		var ret Status6f6Enum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AssetList) GetStatusOk() (*Status6f6Enum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AssetList) SetStatus(v Status6f6Enum) {
	o.Status = v
}

// GetMarket returns the Market field value
func (o *AssetList) GetMarket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Market
}

// GetMarketOk returns a tuple with the Market field value
// and a boolean to check if the value has been set.
func (o *AssetList) GetMarketOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Market, true
}

// SetMarket sets field value
func (o *AssetList) SetMarket(v string) {
	o.Market = v
}

// GetCurrency returns the Currency field value
func (o *AssetList) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *AssetList) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *AssetList) SetCurrency(v string) {
	o.Currency = v
}

// GetExtraData returns the ExtraData field value
func (o *AssetList) GetExtraData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value
// and a boolean to check if the value has been set.
func (o *AssetList) GetExtraDataOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExtraData, true
}

// SetExtraData sets field value
func (o *AssetList) SetExtraData(v map[string]interface{}) {
	o.ExtraData = v
}

// GetCategories returns the Categories field value
func (o *AssetList) GetCategories() []AssetCategory {
	if o == nil {
		var ret []AssetCategory
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *AssetList) GetCategoriesOk() (*[]AssetCategory, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Categories, true
}

// SetCategories sets field value
func (o *AssetList) SetCategories(v []AssetCategory) {
	o.Categories = v
}

// GetAssetType returns the AssetType field value
func (o *AssetList) GetAssetType() AssetTypeEnum {
	if o == nil {
		var ret AssetTypeEnum
		return ret
	}

	return o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value
// and a boolean to check if the value has been set.
func (o *AssetList) GetAssetTypeOk() (*AssetTypeEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AssetType, true
}

// SetAssetType sets field value
func (o *AssetList) SetAssetType(v AssetTypeEnum) {
	o.AssetType = v
}

func (o AssetList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["isin"] = o.Isin
	}
	if true {
		toSerialize["ticker"] = o.Ticker
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["market"] = o.Market
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["extra_data"] = o.ExtraData
	}
	if true {
		toSerialize["categories"] = o.Categories
	}
	if true {
		toSerialize["asset_type"] = o.AssetType
	}
	return json.Marshal(toSerialize)
}

type NullableAssetList struct {
	value *AssetList
	isSet bool
}

func (v NullableAssetList) Get() *AssetList {
	return v.value
}

func (v *NullableAssetList) Set(val *AssetList) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetList) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetList(val *AssetList) *NullableAssetList {
	return &NullableAssetList{value: val, isSet: true}
}

func (v NullableAssetList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


