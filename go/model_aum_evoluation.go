/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AUMEvoluation struct for AUMEvoluation
type AUMEvoluation struct {
	ValuationDate string `json:"valuation_date"`
	Balance float64 `json:"balance"`
}

// NewAUMEvoluation instantiates a new AUMEvoluation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAUMEvoluation(valuationDate string, balance float64) *AUMEvoluation {
	this := AUMEvoluation{}
	this.ValuationDate = valuationDate
	this.Balance = balance
	return &this
}

// NewAUMEvoluationWithDefaults instantiates a new AUMEvoluation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAUMEvoluationWithDefaults() *AUMEvoluation {
	this := AUMEvoluation{}
	return &this
}

// GetValuationDate returns the ValuationDate field value
func (o *AUMEvoluation) GetValuationDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValuationDate
}

// GetValuationDateOk returns a tuple with the ValuationDate field value
// and a boolean to check if the value has been set.
func (o *AUMEvoluation) GetValuationDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ValuationDate, true
}

// SetValuationDate sets field value
func (o *AUMEvoluation) SetValuationDate(v string) {
	o.ValuationDate = v
}

// GetBalance returns the Balance field value
func (o *AUMEvoluation) GetBalance() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *AUMEvoluation) GetBalanceOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *AUMEvoluation) SetBalance(v float64) {
	o.Balance = v
}

func (o AUMEvoluation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["valuation_date"] = o.ValuationDate
	}
	if true {
		toSerialize["balance"] = o.Balance
	}
	return json.Marshal(toSerialize)
}

type NullableAUMEvoluation struct {
	value *AUMEvoluation
	isSet bool
}

func (v NullableAUMEvoluation) Get() *AUMEvoluation {
	return v.value
}

func (v *NullableAUMEvoluation) Set(val *AUMEvoluation) {
	v.value = val
	v.isSet = true
}

func (v NullableAUMEvoluation) IsSet() bool {
	return v.isSet
}

func (v *NullableAUMEvoluation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAUMEvoluation(val *AUMEvoluation) *NullableAUMEvoluation {
	return &NullableAUMEvoluation{value: val, isSet: true}
}

func (v NullableAUMEvoluation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAUMEvoluation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


