/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddressList A ModelSerializer that takes additional arguments for \"fields\", \"omit\" and \"expand\" in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations
type AddressList struct {
	Uuid string `json:"uuid"`
	Line1 string `json:"line1"`
	Line2 string `json:"line2"`
	Postcode string `json:"postcode"`
	Locality string `json:"locality"`
	Country string `json:"country"`
	Region string `json:"region"`
}

// NewAddressList instantiates a new AddressList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressList(uuid string, line1 string, line2 string, postcode string, locality string, country string, region string) *AddressList {
	this := AddressList{}
	this.Uuid = uuid
	this.Line1 = line1
	this.Line2 = line2
	this.Postcode = postcode
	this.Locality = locality
	this.Country = country
	this.Region = region
	return &this
}

// NewAddressListWithDefaults instantiates a new AddressList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressListWithDefaults() *AddressList {
	this := AddressList{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *AddressList) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *AddressList) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *AddressList) SetUuid(v string) {
	o.Uuid = v
}

// GetLine1 returns the Line1 field value
func (o *AddressList) GetLine1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Line1
}

// GetLine1Ok returns a tuple with the Line1 field value
// and a boolean to check if the value has been set.
func (o *AddressList) GetLine1Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Line1, true
}

// SetLine1 sets field value
func (o *AddressList) SetLine1(v string) {
	o.Line1 = v
}

// GetLine2 returns the Line2 field value
func (o *AddressList) GetLine2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Line2
}

// GetLine2Ok returns a tuple with the Line2 field value
// and a boolean to check if the value has been set.
func (o *AddressList) GetLine2Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Line2, true
}

// SetLine2 sets field value
func (o *AddressList) SetLine2(v string) {
	o.Line2 = v
}

// GetPostcode returns the Postcode field value
func (o *AddressList) GetPostcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Postcode
}

// GetPostcodeOk returns a tuple with the Postcode field value
// and a boolean to check if the value has been set.
func (o *AddressList) GetPostcodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Postcode, true
}

// SetPostcode sets field value
func (o *AddressList) SetPostcode(v string) {
	o.Postcode = v
}

// GetLocality returns the Locality field value
func (o *AddressList) GetLocality() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value
// and a boolean to check if the value has been set.
func (o *AddressList) GetLocalityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Locality, true
}

// SetLocality sets field value
func (o *AddressList) SetLocality(v string) {
	o.Locality = v
}

// GetCountry returns the Country field value
func (o *AddressList) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *AddressList) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *AddressList) SetCountry(v string) {
	o.Country = v
}

// GetRegion returns the Region field value
func (o *AddressList) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *AddressList) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *AddressList) SetRegion(v string) {
	o.Region = v
}

func (o AddressList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["line1"] = o.Line1
	}
	if true {
		toSerialize["line2"] = o.Line2
	}
	if true {
		toSerialize["postcode"] = o.Postcode
	}
	if true {
		toSerialize["locality"] = o.Locality
	}
	if true {
		toSerialize["country"] = o.Country
	}
	if true {
		toSerialize["region"] = o.Region
	}
	return json.Marshal(toSerialize)
}

type NullableAddressList struct {
	value *AddressList
	isSet bool
}

func (v NullableAddressList) Get() *AddressList {
	return v.value
}

func (v *NullableAddressList) Set(val *AddressList) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressList) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressList(val *AddressList) *NullableAddressList {
	return &NullableAddressList{value: val, isSet: true}
}

func (v NullableAddressList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


