/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PasswordReset struct for PasswordReset
type PasswordReset struct {
	Email string `json:"email"`
	Token string `json:"token"`
	Password string `json:"password"`
}

// NewPasswordReset instantiates a new PasswordReset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPasswordReset(email string, token string, password string) *PasswordReset {
	this := PasswordReset{}
	this.Email = email
	this.Token = token
	this.Password = password
	return &this
}

// NewPasswordResetWithDefaults instantiates a new PasswordReset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPasswordResetWithDefaults() *PasswordReset {
	this := PasswordReset{}
	return &this
}

// GetEmail returns the Email field value
func (o *PasswordReset) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *PasswordReset) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *PasswordReset) SetEmail(v string) {
	o.Email = v
}

// GetToken returns the Token field value
func (o *PasswordReset) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *PasswordReset) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *PasswordReset) SetToken(v string) {
	o.Token = v
}

// GetPassword returns the Password field value
func (o *PasswordReset) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *PasswordReset) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *PasswordReset) SetPassword(v string) {
	o.Password = v
}

func (o PasswordReset) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullablePasswordReset struct {
	value *PasswordReset
	isSet bool
}

func (v NullablePasswordReset) Get() *PasswordReset {
	return v.value
}

func (v *NullablePasswordReset) Set(val *PasswordReset) {
	v.value = val
	v.isSet = true
}

func (v NullablePasswordReset) IsSet() bool {
	return v.isSet
}

func (v *NullablePasswordReset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePasswordReset(val *PasswordReset) *NullablePasswordReset {
	return &NullablePasswordReset{value: val, isSet: true}
}

func (v NullablePasswordReset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePasswordReset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


