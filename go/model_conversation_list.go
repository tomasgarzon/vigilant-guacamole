/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ConversationList struct for ConversationList
type ConversationList struct {
	Uuid string `json:"uuid"`
	Created time.Time `json:"created"`
	Subject string `json:"subject"`
	LastMessage Message `json:"last_message"`
	Unreads int32 `json:"unreads"`
}

// NewConversationList instantiates a new ConversationList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationList(uuid string, created time.Time, subject string, lastMessage Message, unreads int32) *ConversationList {
	this := ConversationList{}
	this.Uuid = uuid
	this.Created = created
	this.Subject = subject
	this.LastMessage = lastMessage
	this.Unreads = unreads
	return &this
}

// NewConversationListWithDefaults instantiates a new ConversationList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationListWithDefaults() *ConversationList {
	this := ConversationList{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *ConversationList) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *ConversationList) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *ConversationList) SetUuid(v string) {
	o.Uuid = v
}

// GetCreated returns the Created field value
func (o *ConversationList) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ConversationList) GetCreatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ConversationList) SetCreated(v time.Time) {
	o.Created = v
}

// GetSubject returns the Subject field value
func (o *ConversationList) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *ConversationList) GetSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *ConversationList) SetSubject(v string) {
	o.Subject = v
}

// GetLastMessage returns the LastMessage field value
func (o *ConversationList) GetLastMessage() Message {
	if o == nil {
		var ret Message
		return ret
	}

	return o.LastMessage
}

// GetLastMessageOk returns a tuple with the LastMessage field value
// and a boolean to check if the value has been set.
func (o *ConversationList) GetLastMessageOk() (*Message, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastMessage, true
}

// SetLastMessage sets field value
func (o *ConversationList) SetLastMessage(v Message) {
	o.LastMessage = v
}

// GetUnreads returns the Unreads field value
func (o *ConversationList) GetUnreads() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Unreads
}

// GetUnreadsOk returns a tuple with the Unreads field value
// and a boolean to check if the value has been set.
func (o *ConversationList) GetUnreadsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Unreads, true
}

// SetUnreads sets field value
func (o *ConversationList) SetUnreads(v int32) {
	o.Unreads = v
}

func (o ConversationList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["subject"] = o.Subject
	}
	if true {
		toSerialize["last_message"] = o.LastMessage
	}
	if true {
		toSerialize["unreads"] = o.Unreads
	}
	return json.Marshal(toSerialize)
}

type NullableConversationList struct {
	value *ConversationList
	isSet bool
}

func (v NullableConversationList) Get() *ConversationList {
	return v.value
}

func (v *NullableConversationList) Set(val *ConversationList) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationList) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationList(val *ConversationList) *NullableConversationList {
	return &NullableConversationList{value: val, isSet: true}
}

func (v NullableConversationList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


