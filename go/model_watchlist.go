/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Watchlist A ModelSerializer that takes additional arguments for \"fields\", \"omit\" and \"expand\" in order to control which fields are displayed, and whether to replace simple values with complex, nested serializations
type Watchlist struct {
	Uuid string `json:"uuid"`
	Name string `json:"name"`
	Assets []RelatedAssetSerializerWithPermission `json:"assets"`
}

// NewWatchlist instantiates a new Watchlist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchlist(uuid string, name string, assets []RelatedAssetSerializerWithPermission) *Watchlist {
	this := Watchlist{}
	this.Uuid = uuid
	this.Name = name
	this.Assets = assets
	return &this
}

// NewWatchlistWithDefaults instantiates a new Watchlist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchlistWithDefaults() *Watchlist {
	this := Watchlist{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *Watchlist) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *Watchlist) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *Watchlist) SetUuid(v string) {
	o.Uuid = v
}

// GetName returns the Name field value
func (o *Watchlist) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Watchlist) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Watchlist) SetName(v string) {
	o.Name = v
}

// GetAssets returns the Assets field value
func (o *Watchlist) GetAssets() []RelatedAssetSerializerWithPermission {
	if o == nil {
		var ret []RelatedAssetSerializerWithPermission
		return ret
	}

	return o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value
// and a boolean to check if the value has been set.
func (o *Watchlist) GetAssetsOk() (*[]RelatedAssetSerializerWithPermission, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Assets, true
}

// SetAssets sets field value
func (o *Watchlist) SetAssets(v []RelatedAssetSerializerWithPermission) {
	o.Assets = v
}

func (o Watchlist) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["assets"] = o.Assets
	}
	return json.Marshal(toSerialize)
}

type NullableWatchlist struct {
	value *Watchlist
	isSet bool
}

func (v NullableWatchlist) Get() *Watchlist {
	return v.value
}

func (v *NullableWatchlist) Set(val *Watchlist) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchlist) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchlist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchlist(val *Watchlist) *NullableWatchlist {
	return &NullableWatchlist{value: val, isSet: true}
}

func (v NullableWatchlist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchlist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


