/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// DepositCreate struct for DepositCreate
type DepositCreate struct {
	Uuid string `json:"uuid"`
	Amount float64 `json:"amount"`
	Provider string `json:"provider"`
	Reference string `json:"reference"`
	Status StatusB6aEnum `json:"status"`
	// Cancelled reason
	Reason string `json:"reason"`
	Completed time.Time `json:"completed"`
	DepositType *DepositTypeEnum `json:"deposit_type,omitempty"`
	TransactedAt time.Time `json:"transacted_at"`
	// Additional deposit attributes for the specific portal
	ExtraData map[string]interface{} `json:"extra_data,omitempty"`
}

// NewDepositCreate instantiates a new DepositCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositCreate(uuid string, amount float64, provider string, reference string, status StatusB6aEnum, reason string, completed time.Time, transactedAt time.Time) *DepositCreate {
	this := DepositCreate{}
	this.Uuid = uuid
	this.Amount = amount
	this.Provider = provider
	this.Reference = reference
	this.Status = status
	this.Reason = reason
	this.Completed = completed
	this.TransactedAt = transactedAt
	return &this
}

// NewDepositCreateWithDefaults instantiates a new DepositCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositCreateWithDefaults() *DepositCreate {
	this := DepositCreate{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *DepositCreate) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *DepositCreate) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *DepositCreate) SetUuid(v string) {
	o.Uuid = v
}

// GetAmount returns the Amount field value
func (o *DepositCreate) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *DepositCreate) GetAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *DepositCreate) SetAmount(v float64) {
	o.Amount = v
}

// GetProvider returns the Provider field value
func (o *DepositCreate) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *DepositCreate) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *DepositCreate) SetProvider(v string) {
	o.Provider = v
}

// GetReference returns the Reference field value
func (o *DepositCreate) GetReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value
// and a boolean to check if the value has been set.
func (o *DepositCreate) GetReferenceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reference, true
}

// SetReference sets field value
func (o *DepositCreate) SetReference(v string) {
	o.Reference = v
}

// GetStatus returns the Status field value
func (o *DepositCreate) GetStatus() StatusB6aEnum {
	if o == nil {
		var ret StatusB6aEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DepositCreate) GetStatusOk() (*StatusB6aEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DepositCreate) SetStatus(v StatusB6aEnum) {
	o.Status = v
}

// GetReason returns the Reason field value
func (o *DepositCreate) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *DepositCreate) GetReasonOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *DepositCreate) SetReason(v string) {
	o.Reason = v
}

// GetCompleted returns the Completed field value
func (o *DepositCreate) GetCompleted() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value
// and a boolean to check if the value has been set.
func (o *DepositCreate) GetCompletedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Completed, true
}

// SetCompleted sets field value
func (o *DepositCreate) SetCompleted(v time.Time) {
	o.Completed = v
}

// GetDepositType returns the DepositType field value if set, zero value otherwise.
func (o *DepositCreate) GetDepositType() DepositTypeEnum {
	if o == nil || o.DepositType == nil {
		var ret DepositTypeEnum
		return ret
	}
	return *o.DepositType
}

// GetDepositTypeOk returns a tuple with the DepositType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositCreate) GetDepositTypeOk() (*DepositTypeEnum, bool) {
	if o == nil || o.DepositType == nil {
		return nil, false
	}
	return o.DepositType, true
}

// HasDepositType returns a boolean if a field has been set.
func (o *DepositCreate) HasDepositType() bool {
	if o != nil && o.DepositType != nil {
		return true
	}

	return false
}

// SetDepositType gets a reference to the given DepositTypeEnum and assigns it to the DepositType field.
func (o *DepositCreate) SetDepositType(v DepositTypeEnum) {
	o.DepositType = &v
}

// GetTransactedAt returns the TransactedAt field value
func (o *DepositCreate) GetTransactedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TransactedAt
}

// GetTransactedAtOk returns a tuple with the TransactedAt field value
// and a boolean to check if the value has been set.
func (o *DepositCreate) GetTransactedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactedAt, true
}

// SetTransactedAt sets field value
func (o *DepositCreate) SetTransactedAt(v time.Time) {
	o.TransactedAt = v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DepositCreate) GetExtraData() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DepositCreate) GetExtraDataOk() (*map[string]interface{}, bool) {
	if o == nil || o.ExtraData == nil {
		return nil, false
	}
	return &o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *DepositCreate) HasExtraData() bool {
	if o != nil && o.ExtraData != nil {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given map[string]interface{} and assigns it to the ExtraData field.
func (o *DepositCreate) SetExtraData(v map[string]interface{}) {
	o.ExtraData = v
}

func (o DepositCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["reference"] = o.Reference
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["reason"] = o.Reason
	}
	if true {
		toSerialize["completed"] = o.Completed
	}
	if o.DepositType != nil {
		toSerialize["deposit_type"] = o.DepositType
	}
	if true {
		toSerialize["transacted_at"] = o.TransactedAt
	}
	if o.ExtraData != nil {
		toSerialize["extra_data"] = o.ExtraData
	}
	return json.Marshal(toSerialize)
}

type NullableDepositCreate struct {
	value *DepositCreate
	isSet bool
}

func (v NullableDepositCreate) Get() *DepositCreate {
	return v.value
}

func (v *NullableDepositCreate) Set(val *DepositCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositCreate(val *DepositCreate) *NullableDepositCreate {
	return &NullableDepositCreate{value: val, isSet: true}
}

func (v NullableDepositCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


