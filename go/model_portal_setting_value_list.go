/*
Nucoro API

No description

API version: 4.175.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PortalSettingValueList struct for PortalSettingValueList
type PortalSettingValueList struct {
	Id int32 `json:"id"`
	Uuid string `json:"uuid"`
	Created time.Time `json:"created"`
	Updated time.Time `json:"updated"`
	Value string `json:"value"`
	Portal int32 `json:"portal"`
	Key int32 `json:"key"`
}

// NewPortalSettingValueList instantiates a new PortalSettingValueList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortalSettingValueList(id int32, uuid string, created time.Time, updated time.Time, value string, portal int32, key int32) *PortalSettingValueList {
	this := PortalSettingValueList{}
	this.Id = id
	this.Uuid = uuid
	this.Created = created
	this.Updated = updated
	this.Value = value
	this.Portal = portal
	this.Key = key
	return &this
}

// NewPortalSettingValueListWithDefaults instantiates a new PortalSettingValueList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortalSettingValueListWithDefaults() *PortalSettingValueList {
	this := PortalSettingValueList{}
	return &this
}

// GetId returns the Id field value
func (o *PortalSettingValueList) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PortalSettingValueList) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PortalSettingValueList) SetId(v int32) {
	o.Id = v
}

// GetUuid returns the Uuid field value
func (o *PortalSettingValueList) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *PortalSettingValueList) GetUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *PortalSettingValueList) SetUuid(v string) {
	o.Uuid = v
}

// GetCreated returns the Created field value
func (o *PortalSettingValueList) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *PortalSettingValueList) GetCreatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *PortalSettingValueList) SetCreated(v time.Time) {
	o.Created = v
}

// GetUpdated returns the Updated field value
func (o *PortalSettingValueList) GetUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *PortalSettingValueList) GetUpdatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *PortalSettingValueList) SetUpdated(v time.Time) {
	o.Updated = v
}

// GetValue returns the Value field value
func (o *PortalSettingValueList) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PortalSettingValueList) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *PortalSettingValueList) SetValue(v string) {
	o.Value = v
}

// GetPortal returns the Portal field value
func (o *PortalSettingValueList) GetPortal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Portal
}

// GetPortalOk returns a tuple with the Portal field value
// and a boolean to check if the value has been set.
func (o *PortalSettingValueList) GetPortalOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Portal, true
}

// SetPortal sets field value
func (o *PortalSettingValueList) SetPortal(v int32) {
	o.Portal = v
}

// GetKey returns the Key field value
func (o *PortalSettingValueList) GetKey() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *PortalSettingValueList) GetKeyOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *PortalSettingValueList) SetKey(v int32) {
	o.Key = v
}

func (o PortalSettingValueList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["updated"] = o.Updated
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["portal"] = o.Portal
	}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullablePortalSettingValueList struct {
	value *PortalSettingValueList
	isSet bool
}

func (v NullablePortalSettingValueList) Get() *PortalSettingValueList {
	return v.value
}

func (v *NullablePortalSettingValueList) Set(val *PortalSettingValueList) {
	v.value = val
	v.isSet = true
}

func (v NullablePortalSettingValueList) IsSet() bool {
	return v.isSet
}

func (v *NullablePortalSettingValueList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortalSettingValueList(val *PortalSettingValueList) *NullablePortalSettingValueList {
	return &NullablePortalSettingValueList{value: val, isSet: true}
}

func (v NullablePortalSettingValueList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortalSettingValueList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


