//
// RelatedAssetSerializerWithPermission.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Allow get asset by multiple params or UUID */
public struct RelatedAssetSerializerWithPermission: Codable, Hashable {

    public var uuid: UUID
    public var market: String?
    public var isin: String
    public var currency: String?
    public var ticker: String
    public var name: String
    public var extraData: [String: AnyCodable]?

    public init(uuid: UUID, market: String? = nil, isin: String, currency: String? = nil, ticker: String, name: String, extraData: [String: AnyCodable]? = nil) {
        self.uuid = uuid
        self.market = market
        self.isin = isin
        self.currency = currency
        self.ticker = ticker
        self.name = name
        self.extraData = extraData
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uuid
        case market
        case isin
        case currency
        case ticker
        case name
        case extraData = "extra_data"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(uuid, forKey: .uuid)
        try container.encodeIfPresent(market, forKey: .market)
        try container.encode(isin, forKey: .isin)
        try container.encodeIfPresent(currency, forKey: .currency)
        try container.encode(ticker, forKey: .ticker)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(extraData, forKey: .extraData)
    }
}

