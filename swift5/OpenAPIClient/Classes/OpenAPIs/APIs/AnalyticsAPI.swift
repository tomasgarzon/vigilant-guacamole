//
// AnalyticsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AnalyticsAPI {

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsAllocationsByAssetRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: AllocationByAsset?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsAllocationsByAssetRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/allocations-by-asset/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<AllocationByAsset> 
     */
    open class func apiV2RelationshipManagerAnalyticsAllocationsByAssetRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<AllocationByAsset> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/allocations-by-asset/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AllocationByAsset>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsAssetConcentrationRiskRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: AssetConcentrationRisk?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsAssetConcentrationRiskRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/asset-concentration-risk/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<AssetConcentrationRisk> 
     */
    open class func apiV2RelationshipManagerAnalyticsAssetConcentrationRiskRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<AssetConcentrationRisk> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/asset-concentration-risk/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AssetConcentrationRisk>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsAumEvolutionRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: AUMEvoluation?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsAumEvolutionRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/aum-evolution/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<AUMEvoluation> 
     */
    open class func apiV2RelationshipManagerAnalyticsAumEvolutionRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<AUMEvoluation> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/aum-evolution/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AUMEvoluation>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsAumPortfolioRiskRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: AUMPortfolioRisk?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsAumPortfolioRiskRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/aum-portfolio-risk/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<AUMPortfolioRisk> 
     */
    open class func apiV2RelationshipManagerAnalyticsAumPortfolioRiskRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<AUMPortfolioRisk> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/aum-portfolio-risk/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AUMPortfolioRisk>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsAumRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: RelationshipManager?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsAumRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/aum/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<RelationshipManager> 
     */
    open class func apiV2RelationshipManagerAnalyticsAumRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<RelationshipManager> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/aum/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RelationshipManager>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsClientByRiskRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: RelationshipManager?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsClientByRiskRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/client-by-risk/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<RelationshipManager> 
     */
    open class func apiV2RelationshipManagerAnalyticsClientByRiskRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<RelationshipManager> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/client-by-risk/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RelationshipManager>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsClientByStatusRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: RelationshipManager?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsClientByStatusRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/client-by-status/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<RelationshipManager> 
     */
    open class func apiV2RelationshipManagerAnalyticsClientByStatusRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<RelationshipManager> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/client-by-status/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RelationshipManager>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsClientRankingRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: ClientRanking?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsClientRankingRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/client-ranking/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<ClientRanking> 
     */
    open class func apiV2RelationshipManagerAnalyticsClientRankingRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<ClientRanking> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/client-ranking/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ClientRanking>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsInflowsOutflowsRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: RelationshipManager?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsInflowsOutflowsRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/inflows-outflows/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<RelationshipManager> 
     */
    open class func apiV2RelationshipManagerAnalyticsInflowsOutflowsRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<RelationshipManager> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/inflows-outflows/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RelationshipManager>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsPortfolioRiskPerformanceRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: RelationshipManager?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsPortfolioRiskPerformanceRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/portfolio-risk-performance/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<RelationshipManager> 
     */
    open class func apiV2RelationshipManagerAnalyticsPortfolioRiskPerformanceRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<RelationshipManager> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/portfolio-risk-performance/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RelationshipManager>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter relationshipManagerUuid: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiV2RelationshipManagerAnalyticsTotalActiveClientsRetrieve(relationshipManagerUuid: UUID, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: RelationshipManager?, _ error: Error?) -> Void)) {
        apiV2RelationshipManagerAnalyticsTotalActiveClientsRetrieveWithRequestBuilder(relationshipManagerUuid: relationshipManagerUuid).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v2/relationship-manager/{relationship_manager_uuid}/analytics/total-active-clients/
     - API Key:
       - type: apiKey Session 
       - name: cookieAuth
     - BASIC:
       - type: http
       - name: jwtAuth
     - API Key:
       - type: apiKey Authorization 
       - name: tokenAuth
     - parameter relationshipManagerUuid: (path)  
     - returns: RequestBuilder<RelationshipManager> 
     */
    open class func apiV2RelationshipManagerAnalyticsTotalActiveClientsRetrieveWithRequestBuilder(relationshipManagerUuid: UUID) -> RequestBuilder<RelationshipManager> {
        var localVariablePath = "/api/v2/relationship-manager/{relationship_manager_uuid}/analytics/total-active-clients/"
        let relationshipManagerUuidPreEscape = "\(APIHelper.mapValueToPathItem(relationshipManagerUuid))"
        let relationshipManagerUuidPostEscape = relationshipManagerUuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{relationship_manager_uuid}", with: relationshipManagerUuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<RelationshipManager>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
