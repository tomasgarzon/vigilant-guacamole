openapi: 3.0.3
info:
  title: Nucoro API v2
  version: 1.0.0
  description: No description
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - en-ch
          - en-gb
          - fr-ch
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v2/advice-engines/ets/categories/:
    get:
      operationId: api_v2_advice_engines_ets_categories_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
  /api/v2/advice-engines/ets/core-category-groups/:
    get:
      operationId: api_v2_advice_engines_ets_core_category_groups_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCoreCategoryGroupList'
          description: ''
  /api/v2/advice-engines/ets/forecast/:
    post:
      operationId: api_v2_advice_engines_ets_forecast_create
      description: |-
        The forecast positions and amounts for the time_horizon and  risk_level chosen.
        Taking into account the initial_auto_deposit and the initial_amount jointly with the selected filters.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ETSForecastRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ETSForecastRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ETSForecastRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ETSForecastRequest'
          description: ''
  /api/v2/advice-engines/ets/preset-category-groups/:
    get:
      operationId: api_v2_advice_engines_ets_preset_category_groups_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPresetCategoryGroupList'
          description: ''
  /api/v2/advice-engines/model-portfolio/forecast/:
    post:
      operationId: api_v2_advice_engines_model_portfolio_forecast_create
      description: |-
        The forecast positions and amounts for the time_horizon chosen.
        Taking into account the initial_auto_deposit and the initial_amount jointly with the selected filters.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelPortfolioForecastRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModelPortfolioForecastRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelPortfolioForecastRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelPortfolioForecastRequest'
          description: ''
  /api/v2/advice-engines/model-portfolio/model-portfolios/:
    get:
      operationId: api_v2_advice_engines_model_portfolio_model_portfolios_list
      description: ''
      parameters:
      - in: query
        name: extra_data
        schema:
          type: object
          additionalProperties: {}
          nullable: true
        description: Additional ModelPortfolio attributes
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: risk_higher
        schema:
          type: integer
      - in: query
        name: risk_level
        schema:
          type: integer
      - in: query
        name: risk_lower
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvestorModelPortfolioList'
          description: ''
  /api/v2/advice-engines/model-portfolio/model-portfolios/{uuid}/:
    get:
      operationId: api_v2_advice_engines_model_portfolio_model_portfolios_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorModelPortfolio'
          description: ''
  /api/v2/assets/:
    get:
      operationId: api_v2_assets_list
      description: |-
        A list of Assets filtered by category codes.
        Default is an empty dict which returns the whole universe.
      parameters:
      - in: query
        name: asset_type
        schema:
          type: string
          enum:
          - ETF
          - MUTUAL_FUND
          - STOCK
      - in: query
        name: category_code
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      - in: query
        name: category_type
        schema:
          type: array
          items:
            type: string
        explode: true
        style: form
      - in: query
        name: currency
        schema:
          type: integer
      - in: query
        name: isin
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: market
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - DELETED
          - INACTIVE
      - in: query
        name: ticker
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetListList'
          description: ''
  /api/v2/assets/{asset_identifier}/:
    get:
      operationId: api_v2_assets_retrieve
      description: |-
        Allows get an asset instance by
        * UUID
        * ISIN
        * ISIN & MARKET_CODE
        * ISIN & MARKET_CODE & CURRENCY_CODE

        Examples:
            * assets/a66633d7-4418-4c85-9582-01c80df531d4/
            * assets/IE00B579F325/
            * assets/IE00B579F325_XETR_GBP/
            * assets/IE00B579F325_XETR/
      parameters:
      - in: path
        name: asset_identifier
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDetail'
          description: ''
  /api/v2/assets/{asset_identifier}/intraday-prices/:
    get:
      operationId: api_v2_assets_intraday_prices_list
      description: |-
        Prices (from an Asset) list view endpoints.

        GET: Prices retrieve (rest framework builtin overriding get_object)
      parameters:
      - in: path
        name: asset_identifier
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: date_after
        schema:
          type: string
          format: date
      - in: query
        name: date_before
        schema:
          type: string
          format: date
      - in: query
        name: datetime_after
        schema:
          type: string
          format: date-time
      - in: query
        name: datetime_before
        schema:
          type: string
          format: date-time
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIntradayPriceList'
          description: ''
  /api/v2/assets/{asset_identifier}/intraday-prices/latest/:
    get:
      operationId: api_v2_assets_intraday_prices_latest_retrieve
      description: |-
        Prices (from an Asset) list view endpoints.

        GET: Prices retrieve (rest framework builtin overriding get_object)
      parameters:
      - in: path
        name: asset_identifier
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntradayPrice'
          description: ''
  /api/v2/assets/{asset_identifier}/performance/:
    get:
      operationId: api_v2_assets_performance_list
      description: |-
        Retrieve asset's yearly performance.

        This View overwrites ListAPIView's 'list' method because it doesn't have
        any hook that allows us to call 'get_asset_price_year_graph after the
        filtering is applied.
      parameters:
      - in: path
        name: asset_identifier
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: date_year_after
        schema:
          type: number
      - in: query
        name: date_year_before
        schema:
          type: number
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetGrowthList'
          description: ''
  /api/v2/assets/{asset_identifier}/prices/:
    get:
      operationId: api_v2_assets_prices_list
      description: |-
        Prices (from an Asset) list view endpoints.

        GET: Prices retrieve (rest framework builtin overriding get_object)
      parameters:
      - in: path
        name: asset_identifier
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: date_after
        schema:
          type: string
          format: date
      - in: query
        name: date_before
        schema:
          type: string
          format: date
      - in: query
        name: datetime_after
        schema:
          type: string
          format: date-time
      - in: query
        name: datetime_before
        schema:
          type: string
          format: date-time
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPriceList'
          description: ''
  /api/v2/assets/{asset_identifier}/prices/latest/:
    get:
      operationId: api_v2_assets_prices_latest_retrieve
      description: |-
        Prices (from an Asset) list view endpoints.

        GET: Prices retrieve (rest framework builtin overriding get_object)
      parameters:
      - in: path
        name: asset_identifier
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
          description: ''
  /api/v2/assets/categories/:
    get:
      operationId: api_v2_assets_categories_list
      description: Retrieve all asset categories
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetCategoryList'
          description: ''
  /api/v2/auth/impersonation_token/:
    post:
      operationId: Auth impersonation token
      description: |-
        API View that receives an impersonation token and check its validity
        Returns a JSON Web Token that can be used for authenticated (and restricted) requests.
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImpersonationToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImpersonationToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImpersonationToken'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpersionationResponse'
          description: ''
  /api/v2/auth/login/:
    post:
      operationId: Auth Login
      description: |-
        API View that receives a POST with a user's username and password.

        Returns a JSON Web Token that can be used for authenticated requests.
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONWebToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JSONWebToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JSONWebToken'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTResponse'
          description: ''
  /api/v2/auth/onboarding_token/:
    post:
      operationId: Auth Get Onboarding Token
      description: |-
        API View that receives a onboarding token and check its validity

        Returns a JSON Web Token that can be used for authenticated requests.
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OnboardingToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OnboardingToken'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingResponse'
          description: ''
  /api/v2/auth/password/:
    post:
      operationId: User Set Password
      description: Set a new password for an user
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
    put:
      operationId: User Change password
      description: Change password for an user
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordUpdate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordUpdate'
          description: ''
    patch:
      operationId: User request password reset
      description: Request a password reset
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPasswordResetRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/v2/auth/token_renewal/:
    post:
      operationId: Auth Resfresh JWT Token
      description: |-
        API View that receives a POST with a refresh token as token.

        Returns a refreshed JSON Web Token that can be used for authenticated requests.
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTRefreshResponse'
          description: ''
  /api/v2/billing/invoices/:
    get:
      operationId: api_v2_billing_invoices_list
      description: ''
      parameters:
      - in: query
        name: date_from
        schema:
          type: string
          format: date
      - in: query
        name: date_to
        schema:
          type: string
          format: date
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CHARGED
          - PENDING
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceListList'
          description: ''
  /api/v2/billing/invoices/{uuid}/:
    get:
      operationId: api_v2_billing_invoices_retrieve
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDetails'
            application/pdf:
              schema:
                $ref: '#/components/schemas/InvoiceDetails'
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceDetails'
          description: ''
  /api/v2/broker/orders/:
    get:
      operationId: api_v2_broker_orders_list
      description: ''
      parameters:
      - in: query
        name: advice_external_id
        schema:
          type: string
      - in: query
        name: asset
        schema:
          type: string
      - in: query
        name: completed_after
        schema:
          type: string
          format: date
      - in: query
        name: completed_before
        schema:
          type: string
          format: date
      - in: query
        name: extra_data
        schema:
          type: object
          additionalProperties: {}
          nullable: true
        description: Additional order attributes for the specific portal
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: portfolio
        schema:
          type: string
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: status
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderListList'
          description: ''
    post:
      operationId: api_v2_broker_orders_create
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrder'
          description: ''
  /api/v2/broker/orders/{uuid}/:
    get:
      operationId: api_v2_broker_orders_retrieve
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
          description: ''
    delete:
      operationId: api_v2_broker_orders_destroy
      description: Cancel or request cancellation to the broker
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/clients/:
    get:
      operationId: Client List
      description: List client for a Relationship manager
      parameters:
      - in: query
        name: external_custodian_id
        schema:
          type: string
      - in: query
        name: extra_data
        schema:
          type: object
          additionalProperties: {}
          nullable: true
        description: Additional client attributes for the specific portal
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: ordering
        schema:
          type: array
          items:
            type: string
            enum:
            - -activated
            - -created
            - -first_name
            - -last_name
            - -risk_level
            - -status
            - activated
            - created
            - first_name
            - last_name
            - risk_level
            - status
        description: Ordering
        explode: false
        style: form
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ACTIVE
          - CUSTODIAN_PENDING
          - INACTIVE
          - KYC_PENDING
          - ONBOARDING
          - PENDING
      tags:
      - Application
      - Client
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientDetailList'
          description: ''
    post:
      operationId: Client Create
      description: Create a client
      tags:
      - Application
      - Client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCreate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCreate'
          description: ''
  /api/v2/clients/{client_uuid}/:
    get:
      operationId: Client Retrieve
      description: Retrieve a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDetail'
          description: ''
    put:
      operationId: Client Update
      description: Update a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationClientUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationClientUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationClientUpdate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationClientUpdate'
          description: ''
    patch:
      operationId: Client Partial Update
      description: Partial Update a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApplicationClientUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedApplicationClientUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApplicationClientUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationClientUpdate'
          description: ''
  /api/v2/clients/{client_uuid}/activities/:
    get:
      operationId: api_v2_clients_activities_list
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: target
        schema:
          type: array
          items:
            type: string
            enum:
            - ''
            - cashcorporateaction
            - charge
            - deposit
            - portfolio
            - rebalance
            - sharescorporateaction
            - withdrawal
        explode: true
        style: form
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedActivityListList'
          description: ''
  /api/v2/clients/{client_uuid}/activities/{uuid}/:
    get:
      operationId: api_v2_clients_activities_retrieve
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedActivityList'
          description: ''
  /api/v2/clients/{client_uuid}/addresses/:
    get:
      operationId: Client Addresses List
      description: List address for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Application
      - Client
      - Address
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressListList'
          description: ''
    post:
      operationId: Client Address Create
      description: Create an address for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressCreate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressCreate'
          description: ''
  /api/v2/clients/{client_uuid}/addresses/{address_uuid}/:
    get:
      operationId: Client Address Retrieve
      description: Retrieve a client address
      parameters:
      - in: path
        name: address_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Address
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressList'
          description: ''
    put:
      operationId: Client Address Update
      description: Update a client address
      parameters:
      - in: path
        name: address_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressUpdate'
          description: ''
    patch:
      operationId: Client Address Partial Update
      description: Partial Update a client address
      parameters:
      - in: path
        name: address_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddressUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddressUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddressUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressUpdate'
          description: ''
    delete:
      operationId: Client Address Delete
      description: Delete a client address
      parameters:
      - in: path
        name: address_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Address
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/clients/{client_uuid}/advice-engines/:
    get:
      operationId: api_v2_clients_advice_engines_list
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v2/clients/{client_uuid}/advice-engines/{uuid}/:
    get:
      operationId: api_v2_clients_advice_engines_retrieve
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v2/clients/{client_uuid}/bank-accounts/:
    get:
      operationId: Client Bank Accounts List
      description: List Bank Account for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Application
      - Client
      - Bank Account
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankAccountListList'
          description: ''
    post:
      operationId: Client Bank Account Create
      description: Create a bank account for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Bank Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountCreateUpdate'
          description: ''
  /api/v2/clients/{client_uuid}/bank-accounts/{bank_account_uuid}/:
    get:
      operationId: Client Bank Account Retrieve
      description: Retrieve a client bank account
      parameters:
      - in: path
        name: bank_account_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Bank Account
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountList'
          description: ''
    put:
      operationId: Client Bank Account Update
      description: Update a client bank account
      parameters:
      - in: path
        name: bank_account_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Bank Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankAccountCreateUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountCreateUpdate'
          description: ''
    patch:
      operationId: Client Bank Account Partial Update
      description: Partial Update a client bank account
      parameters:
      - in: path
        name: bank_account_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Bank Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBankAccountCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBankAccountCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBankAccountCreateUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountCreateUpdate'
          description: ''
    delete:
      operationId: Client Bank Account Delete
      description: Delete a client bank account
      parameters:
      - in: path
        name: bank_account_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Bank Account
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/clients/{client_uuid}/billing/fees/:
    get:
      operationId: api_v2_clients_billing_fees_list
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: investor_fee_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvestorFeeList'
          description: ''
    post:
      operationId: api_v2_clients_billing_fees_create
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: investor_fee_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvestorFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvestorFee'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorFee'
          description: ''
  /api/v2/clients/{client_uuid}/billing/fees/{investor_fee_uuid}/:
    get:
      operationId: api_v2_clients_billing_fees_retrieve
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: investor_fee_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorFee'
          description: ''
    put:
      operationId: api_v2_clients_billing_fees_update
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: investor_fee_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvestorFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvestorFee'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorFee'
          description: ''
    patch:
      operationId: api_v2_clients_billing_fees_partial_update
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: investor_fee_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvestorFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvestorFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvestorFee'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorFee'
          description: ''
    delete:
      operationId: api_v2_clients_billing_fees_destroy
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: investor_fee_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/clients/{client_uuid}/billing/invoices/:
    get:
      operationId: api_v2_clients_billing_invoices_list
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceListList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceListList'
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceListList'
          description: ''
  /api/v2/clients/{client_uuid}/billing/invoices/{uuid}/:
    get:
      operationId: api_v2_clients_billing_invoices_retrieve
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/InvoiceList'
            text/plain:
              schema:
                $ref: '#/components/schemas/InvoiceList'
          description: ''
  /api/v2/clients/{client_uuid}/documents/:
    get:
      operationId: api_v2_clients_documents_list
      description: ''
      parameters:
      - in: query
        name: client
        schema:
          type: integer
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: doc_type
        schema:
          type: array
          items:
            type: string
            enum:
            - BANK_DETAILS
            - CONTRACT
            - EMPLOYMENT
            - ID_PERSONAL
            - LEGAL
            - MARITAL_STATUS
            - MEDICAL
            - OTHERS
            - PENSION
            - TRANSFERS
        explode: true
        style: form
      - in: query
        name: extra_data
        schema:
          type: object
          additionalProperties: {}
          nullable: true
        description: Additional document attributes for the specific portal
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: api_v2_clients_documents_create
      description: |-
        Uploads a document for a certain user.

        This call expects the files and parameters being sent as form/multipart
        encoding.
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v2/clients/{client_uuid}/documents/{uuid}/:
    get:
      operationId: api_v2_clients_documents_retrieve
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: api_v2_clients_documents_destroy
      description: ''
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/clients/{client_uuid}/nationalities/:
    get:
      operationId: Client Nationlities List
      description: List nationlities for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Application
      - Client
      - Nationlity
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNationalityListList'
          description: ''
    post:
      operationId: Client Nationality Create
      description: Create nationality for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Nationlity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationalityCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NationalityCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NationalityCreate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityCreate'
          description: ''
  /api/v2/clients/{client_uuid}/nationalities/{nationality_uuid}/:
    get:
      operationId: Client Nationlity Retrieve
      description: Retrieve a client nationality
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: nationality_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Nationlity
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityList'
          description: ''
    put:
      operationId: Client Nationlity Update
      description: Update a client nationality
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: nationality_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Nationlity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationalityUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NationalityUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NationalityUpdate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityUpdate'
          description: ''
    patch:
      operationId: Client Nationlity Partial Update
      description: Partial Update a client nationality
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: nationality_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Nationlity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNationalityUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNationalityUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNationalityUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityUpdate'
          description: ''
    delete:
      operationId: Client Nationlity Delete
      description: Delete a client nationality
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: nationality_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Nationlity
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/clients/{client_uuid}/onboarding/complete/:
    post:
      operationId: Client Complete onboarding
      description: Complete onboarding for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientDetail'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDetail'
          description: ''
  /api/v2/clients/{client_uuid}/performance/twrr/:
    get:
      operationId: Client TWRR Performance
      description: Calculate TWRR Performance for client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPerformance'
          description: ''
  /api/v2/clients/{client_uuid}/report/statements/:
    get:
      operationId: api_v2_clients_report_statements_list
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
          description: ''
  /api/v2/clients/{client_uuid}/report/statements/{uuid}/:
    get:
      operationId: api_v2_clients_report_statements_retrieve
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statement'
            application/pdf:
              schema:
                $ref: '#/components/schemas/Statement'
            text/plain:
              schema:
                $ref: '#/components/schemas/Statement'
          description: ''
  /api/v2/clients/{client_uuid}/report/tax-reports/:
    get:
      operationId: api_v2_clients_report_tax_reports_list
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
          description: ''
  /api/v2/clients/{client_uuid}/report/tax-reports/{uuid}/:
    get:
      operationId: api_v2_clients_report_tax_reports_retrieve
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxReport'
            application/pdf:
              schema:
                $ref: '#/components/schemas/TaxReport'
            text/plain:
              schema:
                $ref: '#/components/schemas/TaxReport'
          description: ''
  /api/v2/clients/{client_uuid}/risk-assessments/:
    get:
      operationId: Client Risk Assessment List
      description: List Risk Assessment for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - COMPLETED
            - OUTDATED
            - PENDING
        explode: true
        style: form
      tags:
      - Application
      - Client
      - Risk Assessment
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssessmentList'
          description: ''
    post:
      operationId: Client Risk Assessment Create
      description: Create a risk assessment for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Risk Assessment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assessment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Assessment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Assessment'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
          description: ''
  /api/v2/clients/{client_uuid}/risk-assessments/{assessment_uuid}/:
    get:
      operationId: Client Risk Assessment Retrieve
      description: Retrieve a client risk assessment
      parameters:
      - in: path
        name: assessment_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Risk Assessment
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
          description: ''
    patch:
      operationId: Client Risk Assessment Partial Update
      description: Partial Update a client risk assessment
      parameters:
      - in: path
        name: assessment_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Risk Assessment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssessment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssessment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssessment'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
          description: ''
    delete:
      operationId: Client Risk Assessment Delete
      description: Delete a client risk assessment
      parameters:
      - in: path
        name: assessment_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Risk Assessment
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/clients/{client_uuid}/tax-informations/:
    get:
      operationId: Client Tax Information List
      description: List tax information for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Application
      - Client
      - Tax Information
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaxInformationListList'
          description: ''
    post:
      operationId: Client Tax Information Create
      description: Create a tax inforation for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Tax Information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxInformationCreateUpdate'
          description: ''
  /api/v2/clients/{client_uuid}/tax-informations/{tax_information_uuid}/:
    get:
      operationId: Client Tax Information Retrieve
      description: Retrieve a client tax inforation
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: tax_information_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Tax Information
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxInformationList'
          description: ''
    put:
      operationId: Client Tax Information Update
      description: Update a client tax inforation
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: tax_information_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Tax Information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaxInformationCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxInformationCreateUpdate'
          description: ''
    patch:
      operationId: Client Tax Information Partial Update
      description: Partial Update a client tax inforation
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: tax_information_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Tax Information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaxInformationCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaxInformationCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaxInformationCreateUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxInformationCreateUpdate'
          description: ''
    delete:
      operationId: Client Tax Information Delete
      description: Delete a client tax inforation
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: tax_information_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Application
      - Client
      - Tax Information
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/clients/{client_uuid}/verifications/{verify_type_code}/:
    get:
      operationId: Client Verification List
      description: List Verification for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: verify_type_code
        schema:
          type: string
        required: true
      tags:
      - Application
      - Client
      - KYC
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVerificationListList'
          description: ''
    post:
      operationId: Client Verification Create
      description: Create a verification for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verify_type_code
        schema:
          type: string
        required: true
      tags:
      - Application
      - Client
      - KYC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerificationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerificationCreate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationCreate'
          description: ''
  /api/v2/clients/{client_uuid}/verifications/{verify_type_code}/{verification_uuid}/:
    get:
      operationId: Client Verification Retrieve
      description: 'Retrieve a client verification '
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verification_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verify_type_code
        schema:
          type: string
        required: true
      tags:
      - Application
      - Client
      - KYC
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationList'
          description: ''
  /api/v2/clients/{client_uuid}/verifications/{verify_type_code}/documents/:
    get:
      operationId: Client Verification Document List
      description: List Verification Document for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: verify_type_code
        schema:
          type: string
        required: true
      tags:
      - Application
      - Client
      - KYC
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVerificationDocumentList'
          description: ''
    post:
      operationId: Client Verification Document Create
      description: Create a verification Document for a client
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verify_type_code
        schema:
          type: string
        required: true
      tags:
      - Application
      - Client
      - KYC
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerificationWithType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerificationWithType'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationWithType'
          description: ''
  /api/v2/clients/{client_uuid}/verifications/{verify_type_code}/documents/{verification_document_uuid}/:
    get:
      operationId: Client Verification Document Retrieve
      description: Retrieve a client verification document
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verification_document_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verify_type_code
        schema:
          type: string
        required: true
      tags:
      - Application
      - Client
      - KYC
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationDocument'
          description: ''
    put:
      operationId: Client Verification Document Update
      description: Update a client verification document
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verification_document_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verify_type_code
        schema:
          type: string
        required: true
      tags:
      - Application
      - Client
      - KYC
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerificationDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerificationDocument'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationDocument'
          description: ''
    patch:
      operationId: Client Verification Document Partial Update
      description: Partial Update a client verification document
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verification_document_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verify_type_code
        schema:
          type: string
        required: true
      tags:
      - Application
      - Client
      - KYC
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVerificationDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVerificationDocument'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationDocument'
          description: ''
    delete:
      operationId: Client Verification Document Delete
      description: Delete a client verificatoin document
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verification_document_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: verify_type_code
        schema:
          type: string
        required: true
      tags:
      - Application
      - Client
      - KYC
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/clients/{client_uuid}/watchlists/:
    get:
      operationId: api_v2_clients_watchlists_list
      description: |-
        Applies filters without declaring them explicitly.
        How? Creating those filters on the fly.

        # How it works.
        - Declare 'filterable_fields' in the view.
            E.g. filterable_fields = ['status', 'name']
            __all__ is allowed. It applies filters for all model attributes.

        - COMMON_FILTERS: common filters configuration.
            - key: field name. E.g. status.
            - filter_class. filter class for the field.
            - args. Args for the filter_class __init__.  These args are taken from the queryset model
                E.g. 'args': {'choices': 'STATUS_CHOICES'} means Filter(choices=queryset.model.STATUS_CHOICES)


        # How to use it:
        class PortfolioListCreateView(CommonFilterMixin, InvestorAPIViewMixin, ListCreateAPIView):
            filterable_fields = ['status', 'name']

        # Filters priority.
        1- Explicit filter declared in the filterset_class
        2- Filters declared in COMMON_FILTERS
        3- Filterset.FILTER_DEFAULTS
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: watchlist_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWatchlistList'
          description: ''
    post:
      operationId: api_v2_clients_watchlists_create
      description: |-
        Applies filters without declaring them explicitly.
        How? Creating those filters on the fly.

        # How it works.
        - Declare 'filterable_fields' in the view.
            E.g. filterable_fields = ['status', 'name']
            __all__ is allowed. It applies filters for all model attributes.

        - COMMON_FILTERS: common filters configuration.
            - key: field name. E.g. status.
            - filter_class. filter class for the field.
            - args. Args for the filter_class __init__.  These args are taken from the queryset model
                E.g. 'args': {'choices': 'STATUS_CHOICES'} means Filter(choices=queryset.model.STATUS_CHOICES)


        # How to use it:
        class PortfolioListCreateView(CommonFilterMixin, InvestorAPIViewMixin, ListCreateAPIView):
            filterable_fields = ['status', 'name']

        # Filters priority.
        1- Explicit filter declared in the filterset_class
        2- Filters declared in COMMON_FILTERS
        3- Filterset.FILTER_DEFAULTS
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: watchlist_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watchlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Watchlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Watchlist'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
          description: ''
  /api/v2/clients/{client_uuid}/watchlists/{watchlist_uuid}/:
    get:
      operationId: api_v2_clients_watchlists_retrieve
      description: |-
        Applies filters without declaring them explicitly.
        How? Creating those filters on the fly.

        # How it works.
        - Declare 'filterable_fields' in the view.
            E.g. filterable_fields = ['status', 'name']
            __all__ is allowed. It applies filters for all model attributes.

        - COMMON_FILTERS: common filters configuration.
            - key: field name. E.g. status.
            - filter_class. filter class for the field.
            - args. Args for the filter_class __init__.  These args are taken from the queryset model
                E.g. 'args': {'choices': 'STATUS_CHOICES'} means Filter(choices=queryset.model.STATUS_CHOICES)


        # How to use it:
        class PortfolioListCreateView(CommonFilterMixin, InvestorAPIViewMixin, ListCreateAPIView):
            filterable_fields = ['status', 'name']

        # Filters priority.
        1- Explicit filter declared in the filterset_class
        2- Filters declared in COMMON_FILTERS
        3- Filterset.FILTER_DEFAULTS
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: watchlist_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
          description: ''
    put:
      operationId: api_v2_clients_watchlists_update
      description: |-
        Applies filters without declaring them explicitly.
        How? Creating those filters on the fly.

        # How it works.
        - Declare 'filterable_fields' in the view.
            E.g. filterable_fields = ['status', 'name']
            __all__ is allowed. It applies filters for all model attributes.

        - COMMON_FILTERS: common filters configuration.
            - key: field name. E.g. status.
            - filter_class. filter class for the field.
            - args. Args for the filter_class __init__.  These args are taken from the queryset model
                E.g. 'args': {'choices': 'STATUS_CHOICES'} means Filter(choices=queryset.model.STATUS_CHOICES)


        # How to use it:
        class PortfolioListCreateView(CommonFilterMixin, InvestorAPIViewMixin, ListCreateAPIView):
            filterable_fields = ['status', 'name']

        # Filters priority.
        1- Explicit filter declared in the filterset_class
        2- Filters declared in COMMON_FILTERS
        3- Filterset.FILTER_DEFAULTS
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: watchlist_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watchlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Watchlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Watchlist'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
          description: ''
    delete:
      operationId: api_v2_clients_watchlists_destroy
      description: |-
        Applies filters without declaring them explicitly.
        How? Creating those filters on the fly.

        # How it works.
        - Declare 'filterable_fields' in the view.
            E.g. filterable_fields = ['status', 'name']
            __all__ is allowed. It applies filters for all model attributes.

        - COMMON_FILTERS: common filters configuration.
            - key: field name. E.g. status.
            - filter_class. filter class for the field.
            - args. Args for the filter_class __init__.  These args are taken from the queryset model
                E.g. 'args': {'choices': 'STATUS_CHOICES'} means Filter(choices=queryset.model.STATUS_CHOICES)


        # How to use it:
        class PortfolioListCreateView(CommonFilterMixin, InvestorAPIViewMixin, ListCreateAPIView):
            filterable_fields = ['status', 'name']

        # Filters priority.
        1- Explicit filter declared in the filterset_class
        2- Filters declared in COMMON_FILTERS
        3- Filterset.FILTER_DEFAULTS
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: watchlist_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/clients/{uuid}/verify/email/:
    put:
      operationId: api_v2_clients_verify_email_update
      description: Verify e-mail account with the given email token.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerifyView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailVerifyView'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailVerifyView'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerifyView'
          description: ''
  /api/v2/clients/me/verify/email/:
    post:
      operationId: api_v2_clients_me_verify_email_create
      description: Request e-mail account verification notification.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailVerifyRequest'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerifyRequest'
          description: ''
  /api/v2/clients/national_documents/:
    get:
      operationId: api_v2_clients_national_documents_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNationalDocumentList'
          description: ''
  /api/v2/clients/referral/{referral_code}/:
    get:
      operationId: api_v2_clients_referral_retrieve
      description: Retrieves the currently logged in client referral code
      parameters:
      - in: path
        name: referral_code
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientReferral'
          description: ''
  /api/v2/feeds/access-logs/:
    get:
      operationId: api_v2_feeds_access_logs_list
      description: Retrieves the latest access to the client's account
      parameters:
      - in: query
        name: browser
        schema:
          type: string
      - in: query
        name: browser_version
        schema:
          type: string
      - in: query
        name: channel
        schema:
          type: string
          enum:
          - ANDROID
          - BROWSER
          - IOS
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: country
        schema:
          type: integer
      - in: query
        name: device_brand
        schema:
          type: string
      - in: query
        name: device_model
        schema:
          type: string
      - in: query
        name: ip_address
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: os
        schema:
          type: string
      - in: query
        name: os_version
        schema:
          type: string
      - in: query
        name: user_agent
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccessLogList'
          description: ''
  /api/v2/feeds/activities/:
    get:
      operationId: api_v2_feeds_activities_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: target
        schema:
          type: array
          items:
            type: string
            enum:
            - ''
            - cashcorporateaction
            - charge
            - deposit
            - portfolio
            - rebalance
            - sharescorporateaction
            - withdrawal
        explode: true
        style: form
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedActivityListList'
          description: ''
  /api/v2/goals/:
    get:
      operationId: api_v2_goals_list
      description: ''
      parameters:
      - in: path
        name: goal_uuid
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGoalList'
          description: ''
    post:
      operationId: api_v2_goals_create
      description: ''
      parameters:
      - in: path
        name: goal_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Goal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Goal'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
  /api/v2/goals/{goal_uuid}/:
    get:
      operationId: api_v2_goals_retrieve
      description: ''
      parameters:
      - in: path
        name: goal_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
    patch:
      operationId: api_v2_goals_partial_update
      description: ''
      parameters:
      - in: path
        name: goal_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGoal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGoal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGoal'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
          description: ''
    delete:
      operationId: api_v2_goals_destroy
      description: ''
      parameters:
      - in: path
        name: goal_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/goals/decumulation/:
    post:
      operationId: api_v2_goals_decumulation_create
      description: Return a Goal Forecast Decumulation
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForecastDecumulationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForecastDecumulationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForecastDecumulationRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastDecumulationRequest'
          description: ''
  /api/v2/goals/forecast/:
    post:
      operationId: api_v2_goals_forecast_create
      description: Return a Goal Forecast
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForecastRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForecastRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForecastRequest'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForecastRequest'
          description: ''
  /api/v2/inbox/conversations/:
    get:
      operationId: api_v2_inbox_conversations_list
      description: |-
        get:
        List all conversations with last_message of a user

        post:
        Create new conversation with N messages (without attachments)
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConversationListList'
          description: ''
    post:
      operationId: api_v2_inbox_conversations_create
      description: |-
        get:
        List all conversations with last_message of a user

        post:
        Create new conversation with N messages (without attachments)
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationCreate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationCreate'
          description: ''
  /api/v2/inbox/conversations/{conversation}/:
    get:
      operationId: api_v2_inbox_conversations_list_2
      description: List all messages from a conversation uuid
      parameters:
      - in: path
        name: conversation
        schema:
          type: string
          format: uuid
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageList'
          description: ''
  /api/v2/inbox/conversations/{conversation}/messages/:
    post:
      operationId: api_v2_inbox_conversations_messages_create
      description: View for creating message on a specific conversation
      parameters:
      - in: path
        name: conversation
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /api/v2/inbox/conversations/{conversation}/messages/{message}/attachments/{uuid}/:
    get:
      operationId: api_v2_inbox_conversations_messages_attachments_retrieve
      description: View to access to an attachment
      parameters:
      - in: path
        name: conversation
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - in: path
        name: message
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
            application/pdf:
              schema:
                $ref: '#/components/schemas/Attachment'
            text/plain:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: ''
  /api/v2/mobile/{platform}/version/:
    get:
      operationId: api_v2_mobile_version_retrieve
      description: Returns the number of the last required APP Version for a platform.
      parameters:
      - in: path
        name: platform
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinimumAppVersion'
          description: ''
  /api/v2/platform/settings/:
    get:
      operationId: api_v2_platform_settings_list
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NucoroSetting'
          description: ''
  /api/v2/portal/countries/:
    get:
      operationId: api_v2_portal_countries_list
      description: Retrieves the list of countries
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryListList'
          description: ''
  /api/v2/portal/settings/:
    get:
      operationId: api_v2_portal_settings_retrieve
      description: ''
      tags:
      - api
      security:
      - jwtAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalSettingValueList'
          description: ''
  /api/v2/portal/tos/:
    get:
      operationId: api_v2_portal_tos_list
      description: List all ToS for the current Portal
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTosList'
          description: ''
  /api/v2/portal/tos/{uuid}/:
    get:
      operationId: api_v2_portal_tos_retrieve
      description: Retrieves a specific ToS
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tos'
          description: ''
  /api/v2/portal/tos/current/:
    get:
      operationId: api_v2_portal_tos_current_retrieve
      description: Retrieves the current ToS for the Portal
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tos'
          description: ''
  /api/v2/portfolios/:
    get:
      operationId: api_v2_portfolios_list
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      parameters:
      - in: query
        name: external_custodian_id
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - ACTIVE
            - DELETED
            - DELETING
            - PENDING
        explode: true
        style: form
      - in: query
        name: valuation_date_after
        schema:
          type: string
          format: date
      - in: query
        name: valuation_date_before
        schema:
          type: string
          format: date
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortfolioListList'
          description: ''
    post:
      operationId: api_v2_portfolios_create
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PortfolioCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PortfolioCreate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioCreate'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/:
    get:
      operationId: api_v2_portfolios_retrieve
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDetail'
          description: ''
    put:
      operationId: api_v2_portfolios_update
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PortfolioUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PortfolioUpdate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioUpdate'
          description: ''
    patch:
      operationId: api_v2_portfolios_partial_update
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPortfolioUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPortfolioUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPortfolioUpdate'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioUpdate'
          description: ''
    delete:
      operationId: api_v2_portfolios_destroy
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/portfolios/{portfolio_uuid}/activities/:
    get:
      operationId: api_v2_portfolios_activities_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: target
        schema:
          type: array
          items:
            type: string
            enum:
            - ''
            - cashcorporateaction
            - charge
            - deposit
            - portfolio
            - rebalance
            - sharescorporateaction
            - withdrawal
        explode: true
        style: form
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedActivityListList'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/activities/{uuid}/:
    get:
      operationId: api_v2_portfolios_activities_retrieve
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedActivityList'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/allocations/:
    get:
      operationId: api_v2_portfolios_allocations_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: valuation_date_after
        schema:
          type: string
          format: date
      - in: query
        name: valuation_date_before
        schema:
          type: string
          format: date
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAllocationListList'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/allocations/{id}/:
    get:
      operationId: api_v2_portfolios_allocations_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this allocation.
        required: true
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationList'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/allocations/end-day/:
    get:
      operationId: api_v2_portfolios_allocations_end_day
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationList'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/allocations/end-day/{allocation_date}/:
    get:
      operationId: api_v2_portfolios_allocations_end_day_by_date_retrieve
      description: ''
      parameters:
      - in: path
        name: allocation_date
        schema:
          type: string
        required: true
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationDetail'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/allocations/end-day/latest/:
    get:
      operationId: api_v2_portfolios_allocations_end_day_latest_retrieve
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationDetail'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/allocations/intraday/latest/:
    get:
      operationId: api_v2_portfolios_allocations_intraday_latest_retrieve
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentAllocation'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/deposits/:
    get:
      operationId: api_v2_portfolios_deposits_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - CANCELLED
            - COMPLETED
            - ERROR
            - PENDING
            - PROCESSING
            - REQUESTED
        explode: true
        style: form
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDepositListList'
          description: ''
    post:
      operationId: api_v2_portfolios_deposits_create
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DepositCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DepositCreate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositCreate'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/deposits/{uuid}/:
    get:
      operationId: api_v2_portfolios_deposits_retrieve
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetail'
          description: ''
    delete:
      operationId: api_v2_portfolios_deposits_destroy
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/portfolios/{portfolio_uuid}/orders/:
    get:
      operationId: api_v2_portfolios_orders_list
      description: ''
      parameters:
      - in: query
        name: advice_external_id
        schema:
          type: string
      - in: query
        name: asset
        schema:
          type: string
      - in: query
        name: completed_after
        schema:
          type: string
          format: date
      - in: query
        name: completed_before
        schema:
          type: string
          format: date
      - in: query
        name: extra_data
        schema:
          type: object
          additionalProperties: {}
          nullable: true
        description: Additional order attributes for the specific portal
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: portfolio
        schema:
          type: string
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: status
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderListList'
          description: ''
    post:
      operationId: api_v2_portfolios_orders_create
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrder'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/orders/{uuid}/:
    get:
      operationId: api_v2_portfolios_orders_retrieve
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
          description: ''
    delete:
      operationId: api_v2_portfolios_orders_destroy
      description: Cancel or request cancellation to the broker
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/portfolios/{portfolio_uuid}/performance/mwrr/:
    get:
      operationId: api_v2_portfolios_performance_mwrr_list
      description: ''
      parameters:
      - in: query
        name: date_after
        schema:
          type: string
          format: date
      - in: query
        name: date_before
        schema:
          type: string
          format: date
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortfolioPerformanceList'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/performance/positions/:
    get:
      operationId: api_v2_portfolios_performance_positions_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortfolioPerformancePositionsList'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/performance/twrr/:
    get:
      operationId: api_v2_portfolios_performance_twrr_list
      description: ''
      parameters:
      - in: query
        name: date_after
        schema:
          type: string
          format: date
      - in: query
        name: date_before
        schema:
          type: string
          format: date
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortfolioPerformanceList'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/rebalances/:
    get:
      operationId: api_v2_portfolios_rebalances_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRebalanceList'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/rebalances/{uuid}/:
    get:
      operationId: api_v2_portfolios_rebalances_retrieve
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rebalance'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/restrictions/:
    get:
      operationId: api_v2_portfolios_restrictions_retrieve
      description: |-
        Allow aggregate/group fields of the ModelView model or its related entities.
           Query params should use dot notation.

        Requires:
            ListModelMixin (ListAPIView, ListCreateApiView)

        Args:
            * aggregatable_fields (dict): optional.
                Keys: fields that allow aggregation (including related entities with "__" notation).
                Values: django qs functions or aggregate_fns
                Example:
                    aggregatable_fields = {
                        'allocations__balance': [Sum, Avg],
                    }

            * groupable_fields (list): optional. fields that allow grouping (including related entities with "__" notation).
                Example:
                    groupable_fields = ['portfolio__portfolio_type']

        Query Param Examples:
            >>> ?group_by=portfolio.portfolio_type
            >>> ?aggregate[Sum]=portfolio.allocations.balance
            >>> ?group_by=valuation_date&aggregate[Sum]=portfolio.allocations.balance
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioTypeRestrictions'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/withdrawals/:
    get:
      operationId: api_v2_portfolios_withdrawals_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - CANCELLED
            - COMPLETED
            - DRAFT
            - ERROR
            - PENDING
            - POSITIONS_SOLD
            - PROCESSING
            - REQUESTED
        explode: true
        style: form
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvestorWithdrawalListList'
          description: ''
    post:
      operationId: api_v2_portfolios_withdrawals_create
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorWithdrawalCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvestorWithdrawalCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvestorWithdrawalCreate'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvestorWithdrawalCreate'
          description: ''
  /api/v2/portfolios/{portfolio_uuid}/withdrawals/{uuid}/:
    get:
      operationId: api_v2_portfolios_withdrawals_retrieve
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalDetail'
          description: ''
    delete:
      operationId: api_v2_portfolios_withdrawals_destroy
      description: ''
      parameters:
      - in: path
        name: portfolio_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v2/portfolios/{portfolio}/allocations/history/:
    get:
      operationId: api_v2_portfolios_allocations_history_retrieve
      description: |-
        Allocations History for a given portfolio

        It accepts two optional parameters, `date_to` and `date_from` to limit
        the daily allocations to a certain data range. If they are not given, all the
        allocations are returned.

        ---

        ## Parameters:

         * **name**: `date_from`
         * **description**: The initial date.
         * **parameter type**: query param

         * **name**: `date_from`
         * **description**: The final date.
         * **parameter type**: query param
      parameters:
      - in: path
        name: portfolio
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v2/portfolios/portfoliotypes/:
    get:
      operationId: api_v2_portfolios_portfoliotypes_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortfolioTypeList'
          description: ''
  /api/v2/portfolios/portfoliotypes/{code}/restrictions/:
    get:
      operationId: api_v2_portfolios_portfoliotypes_restrictions_list
      description: ''
      parameters:
      - in: path
        name: code
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBasePortfolioTypeRestrictionsList'
          description: ''
  /api/v2/relationship-manager/{uuid}/:
    get:
      operationId: api_v2_relationship_manager_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/allocations-by-asset/:
    get:
      operationId: api_v2_relationship_manager_analytics_allocations_by_asset_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationByAsset'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/asset-concentration-risk/:
    get:
      operationId: api_v2_relationship_manager_analytics_asset_concentration_risk_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetConcentrationRisk'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/aum/:
    get:
      operationId: api_v2_relationship_manager_analytics_aum_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/aum-evolution/:
    get:
      operationId: api_v2_relationship_manager_analytics_aum_evolution_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AUMEvoluation'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/aum-portfolio-risk/:
    get:
      operationId: api_v2_relationship_manager_analytics_aum_portfolio_risk_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AUMPortfolioRisk'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/client-by-risk/:
    get:
      operationId: api_v2_relationship_manager_analytics_client_by_risk_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/client-by-status/:
    get:
      operationId: api_v2_relationship_manager_analytics_client_by_status_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/client-ranking/:
    get:
      operationId: api_v2_relationship_manager_analytics_client_ranking_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientRanking'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/inflows-outflows/:
    get:
      operationId: api_v2_relationship_manager_analytics_inflows_outflows_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/portfolio-risk-performance/:
    get:
      operationId: api_v2_relationship_manager_analytics_portfolio_risk_performance_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
          description: ''
  /api/v2/relationship-manager/{uuid}/analytics/total-active-clients/:
    get:
      operationId: api_v2_relationship_manager_analytics_total_active_clients_retrieve
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
          description: ''
  /api/v2/relationship-manager/me/:
    get:
      operationId: api_v2_relationship_manager_me_retrieve
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipManager'
          description: ''
  /api/v2/report/statements/:
    get:
      operationId: api_v2_report_statements_list
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedStatementList'
          description: ''
  /api/v2/report/statements/{uuid}/:
    get:
      operationId: api_v2_report_statements_retrieve
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statement'
            application/pdf:
              schema:
                $ref: '#/components/schemas/Statement'
            text/plain:
              schema:
                $ref: '#/components/schemas/Statement'
          description: ''
  /api/v2/report/tax-report/:
    get:
      operationId: api_v2_report_tax_report_list
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
            application/pdf:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedTaxReportList'
          description: ''
  /api/v2/report/tax-report/{uuid}/:
    get:
      operationId: api_v2_report_tax_report_retrieve
      description: |-
        This mixin implements binary responses.
        It supports PDF and Base64. It can be adapted to any django View that implements the retrieve method
      parameters:
      - in: path
        name: client_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: format
        schema:
          type: string
          enum:
          - base64
          - json
          - pdf
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxReport'
            application/pdf:
              schema:
                $ref: '#/components/schemas/TaxReport'
            text/plain:
              schema:
                $ref: '#/components/schemas/TaxReport'
          description: ''
  /api/v2/risk/questions/:
    get:
      operationId: api_v2_risk_questions_list
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionList'
          description: ''
  /api/v2/verifications/verifier_webhook/{verifier}/{action}/:
    post:
      operationId: api_v2_verifications_verifier_webhook_create
      description: ''
      parameters:
      - in: path
        name: action
        schema:
          type: string
        required: true
      - in: path
        name: verifier
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v2/websocket/authentication/ticket/:
    post:
      operationId: api_v2_websocket_authentication_ticket_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
          description: ''
  /api/v2/websocket/authorize/:
    post:
      operationId: api_v2_websocket_authorize_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
  /api/v2/websocket/authorize/asset/:
    post:
      operationId: api_v2_websocket_authorize_asset_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
  /api/v2/websocket/authorize/portfolio/:
    post:
      operationId: api_v2_websocket_authorize_portfolio_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebsocketAuthentication'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
  /api/v2/websocket/on_subscribe/:
    post:
      operationId: api_v2_websocket_on_subscribe_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscribe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscribe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscribe'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscribe'
          description: ''
  /api/v2/websocket/on_unsubscribe/:
    post:
      operationId: api_v2_websocket_on_unsubscribe_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unsubscribe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Unsubscribe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Unsubscribe'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unsubscribe'
          description: ''
components:
  schemas:
    AUMEvoluation:
      type: object
      properties:
        valuation_date:
          type: string
          format: date
        balance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
      required:
      - balance
      - valuation_date
    AUMPortfolioRisk:
      type: object
      properties:
        risk_level:
          type: integer
        balance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
      required:
      - balance
      - risk_level
    AccessLog:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        user_agent:
          type: string
          readOnly: true
        ip_address:
          type: string
          readOnly: true
        browser:
          type: string
          readOnly: true
        browser_version:
          type: string
          readOnly: true
        device_brand:
          type: string
          readOnly: true
        device_model:
          type: string
          readOnly: true
        os:
          type: string
          readOnly: true
        os_version:
          type: string
          readOnly: true
        channel:
          allOf:
          - $ref: '#/components/schemas/ChannelEnum'
          readOnly: true
        country:
          type: string
        city:
          type: string
          readOnly: true
      required:
      - browser
      - browser_version
      - channel
      - city
      - country
      - created
      - device_brand
      - device_model
      - ip_address
      - os
      - os_version
      - user_agent
      - uuid
    ActivityTypeEnum:
      enum:
      - CREATED
      - UPDATED
      - DELETED
      type: string
    AddressCreate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        line1:
          type: string
        line2:
          type: string
          nullable: true
        postcode:
          type: string
        locality:
          type: string
        country:
          type: string
        region:
          type: string
          nullable: true
      required:
      - country
      - line1
      - locality
      - postcode
      - uuid
    AddressList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        line1:
          type: string
          readOnly: true
        line2:
          type: string
          readOnly: true
        postcode:
          type: string
          readOnly: true
        locality:
          type: string
          readOnly: true
        country:
          type: string
        region:
          type: string
          readOnly: true
      required:
      - country
      - line1
      - line2
      - locality
      - postcode
      - region
      - uuid
    AddressUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        line1:
          type: string
        line2:
          type: string
          nullable: true
        postcode:
          type: string
        locality:
          type: string
        country:
          type: string
        region:
          type: string
          nullable: true
      required:
      - country
      - line1
      - locality
      - postcode
      - uuid
    AllocationByAsset:
      type: object
      properties:
        category_code:
          type: string
        display_allocation_chart:
          type: boolean
        display_allocation_chart_configuration_error:
          type: boolean
        allocations_by_code:
          type: array
          items:
            $ref: '#/components/schemas/AllocationByCode'
      required:
      - allocations_by_code
      - category_code
      - display_allocation_chart
      - display_allocation_chart_configuration_error
    AllocationByCode:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        balance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        weight:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
      required:
      - balance
      - code
      - name
      - weight
    AllocationDetail:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        valuation_date:
          type: string
          format: date
        balance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
        invested:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
        earnings:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
        cash_active:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        trade_total:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
        performance:
          type: number
          format: double
          readOnly: true
        positions:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - cash_active
      - performance
      - positions
      - valuation_date
    AllocationList:
      type: object
      properties:
        valuation_date:
          type: string
          format: date
          readOnly: true
        balance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        invested:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        earnings:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        cash_active:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        trade_total:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        performance:
          type: number
          format: double
          readOnly: true
      required:
      - balance
      - cash_active
      - earnings
      - invested
      - performance
      - trade_total
      - valuation_date
    AppVersion:
      type: object
      properties:
        number:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - number
    ApplicationClientUpdate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        email:
          type: string
          format: email
        birthdate:
          type: string
          format: date
        tos_consent:
          type: boolean
        marketing_consent:
          type: boolean
        data_consent:
          type: boolean
        tos_consent_date:
          type: string
          format: date
          readOnly: true
        tax_information:
          type: array
          items:
            type: string
            nullable: true
          readOnly: true
        country_birth:
          $ref: '#/components/schemas/CountryField'
        last_login:
          type: string
          format: date-time
          readOnly: true
        referred_by:
          type: string
          nullable: true
        successful_referrals:
          type: integer
          readOnly: true
        kyc_verified:
          type: boolean
          readOnly: true
        is_verified:
          type: boolean
          readOnly: true
        fee_segments:
          type: array
          items:
            type: string
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
        portfolios:
          type: array
          items:
            type: string
          readOnly: true
        onboarded_by:
          type: string
          nullable: true
        risk_level:
          type: integer
          readOnly: true
        onboarding_token:
          type: string
          readOnly: true
        password:
          type: string
          writeOnly: true
        email_verified_last_request:
          type: string
          format: date-time
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
        comments:
          type: string
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB65Enum'
          readOnly: true
        email_verified:
          type: boolean
        email_verify_last_request:
          type: string
          format: date-time
          nullable: true
        title:
          allOf:
          - $ref: '#/components/schemas/TitleEnum'
          nullable: true
        first_name:
          type: string
          nullable: true
        middle_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          nullable: true
        marital_status:
          allOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          nullable: true
        phone_number:
          type: string
          nullable: true
        phone_number_verified:
          type: string
          format: date-time
          nullable: true
        language:
          type: string
          maxLength: 5
        employment_status:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusEnum'
          nullable: true
        profession:
          type: string
          nullable: true
          maxLength: 250
        referral_code:
          type: string
          nullable: true
          maxLength: 250
        activated:
          type: string
          format: date-time
          nullable: true
        utm_source:
          type: string
          maxLength: 250
        utm_medium:
          type: string
          maxLength: 250
        utm_campaign:
          type: string
          maxLength: 250
        utm_term:
          type: string
          maxLength: 250
        utm_content:
          type: string
          maxLength: 250
        marketing_consent_date:
          type: string
          format: date
          readOnly: true
        data_consent_date:
          type: string
          format: date
          readOnly: true
      required:
      - country_birth
      - created
      - data_consent_date
      - email
      - fee_segments
      - is_verified
      - kyc_verified
      - language
      - last_login
      - marketing_consent_date
      - onboarding_token
      - portfolios
      - referred_by
      - risk_level
      - status
      - successful_referrals
      - tax_information
      - tos_consent_date
      - updated
      - uuid
    Assessment:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        completed:
          type: string
          format: date-time
          nullable: true
        choices:
          type: array
          items:
            $ref: '#/components/schemas/RiskChoiceQuestionCode'
        status:
          $ref: '#/components/schemas/AssessmentStatusEnum'
        risk_level:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
      required:
      - choices
      - created
      - risk_level
      - uuid
    AssessmentStatusEnum:
      enum:
      - PENDING
      - COMPLETED
      - OUTDATED
      type: string
    AssetCategory:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        code:
          type: string
          maxLength: 50
        order:
          type: integer
          maximum: 32767
          minimum: 0
        type:
          type: string
      required:
      - code
      - name
      - order
      - type
      - uuid
    AssetConcentrationRisk:
      type: object
      properties:
        name:
          type: string
        asset_class:
          type: string
        uuid:
          type: string
          readOnly: true
        value:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        weight:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
      required:
      - asset_class
      - name
      - uuid
      - value
      - weight
    AssetDetail:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 250
        isin:
          type: string
          maxLength: 120
        ticker:
          type: string
          maxLength: 120
        status:
          $ref: '#/components/schemas/Status6f6Enum'
        market:
          type: string
          readOnly: true
        currency:
          type: string
        extra_data:
          type: object
          additionalProperties: {}
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/AssetCategory'
        asset_type:
          $ref: '#/components/schemas/AssetTypeEnum'
        expense_ratio:
          type: number
          format: float
          description: This field determines the administrative and operational costs
            associated to certain types of assets like ETFs or mutual funds.
      required:
      - categories
      - currency
      - isin
      - market
      - name
      - ticker
      - uuid
    AssetGrowth:
      type: object
      properties:
        year:
          type: integer
          readOnly: true
        amount:
          type: number
          format: double
          maximum: 1000
          minimum: -1000
          readOnly: true
      required:
      - amount
      - year
    AssetList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        isin:
          type: string
          readOnly: true
        ticker:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status6f6Enum'
          readOnly: true
        market:
          type: string
          readOnly: true
        currency:
          type: string
        extra_data:
          type: object
          additionalProperties: {}
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/AssetCategory'
        asset_type:
          allOf:
          - $ref: '#/components/schemas/AssetTypeEnum'
          readOnly: true
      required:
      - asset_type
      - categories
      - currency
      - extra_data
      - isin
      - market
      - name
      - status
      - ticker
      - uuid
    AssetModelPortfolio:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        asset:
          $ref: '#/components/schemas/RelatedAssetSerializerWithAssetCategories'
        weight:
          type: number
          format: double
          maximum: 1
          minimum: 0
      required:
      - asset
      - weight
    AssetTypeEnum:
      enum:
      - ETF
      - MUTUAL_FUND
      - STOCK
      type: string
    Attachment:
      type: object
      properties:
        attachment_extension:
          type: string
          readOnly: true
        attachment_filename:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - attachment_extension
      - attachment_filename
      - uuid
    AuthenticationResponse:
      type: object
      properties:
        status:
          type: string
          default: ok
        error:
          type: string
        id:
          type: string
        email:
          type: string
          format: email
        session_token:
          type: string
      required:
      - email
      - id
      - session_token
    BankAccountCreateUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        account_number:
          type: string
          nullable: true
          maxLength: 30
        account_sort_code:
          type: string
          nullable: true
          maxLength: 6
        account_holder_name:
          type: string
          nullable: true
        joint:
          type: boolean
        bank_name:
          type: string
          nullable: true
          maxLength: 250
        iban:
          type: string
          nullable: true
          maxLength: 34
        swift_code:
          type: string
          nullable: true
          maxLength: 11
      required:
      - uuid
    BankAccountList:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        account_number:
          type: string
          readOnly: true
        account_sort_code:
          type: string
          readOnly: true
        account_holder_name:
          type: string
          readOnly: true
        joint:
          type: boolean
          readOnly: true
        bank_name:
          type: string
          readOnly: true
        iban:
          type: string
          readOnly: true
        swift_code:
          type: string
          readOnly: true
      required:
      - account_holder_name
      - account_number
      - account_sort_code
      - bank_name
      - iban
      - joint
      - swift_code
      - uuid
    BasePortfolioTypeRestrictions:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        date_from:
          type: string
          format: date
          readOnly: true
        date_to:
          type: string
          format: date
          readOnly: true
        clean_value:
          type: number
          readOnly: true
      required:
      - clean_value
      - date_from
      - date_to
      - key
    Category:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/AssetCategory'
        name:
          type: string
          maxLength: 120
        status:
          $ref: '#/components/schemas/CategoryStatusEnum'
        extra_data:
          type: object
          additionalProperties: {}
          nullable: true
          description: Additional ETSCategory attributes
        description:
          type: string
          nullable: true
      required:
      - categories
      - code
      - name
      - uuid
    CategoryStatusEnum:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    ChannelEnum:
      enum:
      - BROWSER
      - IOS
      - ANDROID
      type: string
    ClientCreate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        email:
          type: string
          format: email
        birthdate:
          type: string
          format: date
        title:
          allOf:
          - $ref: '#/components/schemas/TitleEnum'
          nullable: true
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        middle_name:
          type: string
          nullable: true
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          nullable: true
        marital_status:
          allOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          nullable: true
        language:
          type: string
          maxLength: 5
        employment_status:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusEnum'
          nullable: true
        activated:
          type: string
          format: date-time
          nullable: true
        profile:
          type: object
          additionalProperties: {}
          writeOnly: true
        password:
          type: string
          writeOnly: true
        referral_code:
          type: string
          writeOnly: true
        utm_source:
          type: string
          maxLength: 250
        utm_medium:
          type: string
          maxLength: 250
        utm_campaign:
          type: string
          maxLength: 250
        utm_term:
          type: string
          maxLength: 250
        utm_content:
          type: string
          maxLength: 250
        tos_consent:
          type: boolean
        data_consent:
          type: boolean
        marketing_consent:
          type: boolean
        extra_data:
          type: object
          additionalProperties: {}
        phone_number:
          type: string
          nullable: true
      required:
      - email
    ClientDetail:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        email:
          type: string
          format: email
        birthdate:
          type: string
          format: date
        tos_consent:
          type: boolean
        marketing_consent:
          type: boolean
        data_consent:
          type: boolean
        tos_consent_date:
          type: string
          format: date
        tax_information:
          type: array
          items:
            type: string
            nullable: true
          readOnly: true
        country_birth:
          $ref: '#/components/schemas/CountryField'
        last_login:
          type: string
          format: date-time
          readOnly: true
        referred_by:
          type: string
          nullable: true
        successful_referrals:
          type: integer
          readOnly: true
        kyc_verified:
          type: boolean
          readOnly: true
        is_verified:
          type: boolean
          readOnly: true
        fee_segments:
          type: array
          items:
            type: string
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
        portfolios:
          type: array
          items:
            type: string
          readOnly: true
        onboarded_by:
          type: string
          nullable: true
        risk_level:
          type: integer
          readOnly: true
        onboarding_token:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
        comments:
          type: string
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB65Enum'
          readOnly: true
        email_verified:
          type: boolean
        email_verify_last_request:
          type: string
          format: date-time
          nullable: true
        title:
          allOf:
          - $ref: '#/components/schemas/TitleEnum'
          nullable: true
        first_name:
          type: string
          nullable: true
        middle_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          nullable: true
        marital_status:
          allOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          nullable: true
        phone_number:
          type: string
          nullable: true
        phone_number_verified:
          type: string
          format: date-time
          nullable: true
        language:
          type: string
          maxLength: 5
        employment_status:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusEnum'
          nullable: true
        profession:
          type: string
          nullable: true
          maxLength: 250
        referral_code:
          type: string
          nullable: true
          maxLength: 250
        activated:
          type: string
          format: date-time
          nullable: true
        utm_source:
          type: string
          maxLength: 250
        utm_medium:
          type: string
          maxLength: 250
        utm_campaign:
          type: string
          maxLength: 250
        utm_term:
          type: string
          maxLength: 250
        utm_content:
          type: string
          maxLength: 250
        marketing_consent_date:
          type: string
          format: date
          readOnly: true
        data_consent_date:
          type: string
          format: date
          readOnly: true
      required:
      - country_birth
      - created
      - data_consent
      - data_consent_date
      - email
      - extra_data
      - fee_segments
      - is_verified
      - kyc_verified
      - language
      - last_login
      - marketing_consent
      - marketing_consent_date
      - onboarding_token
      - portfolios
      - referred_by
      - risk_level
      - status
      - successful_referrals
      - tax_information
      - tos_consent
      - tos_consent_date
      - updated
      - uuid
    ClientEmbedRanking:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        full_name:
          type: string
        balance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        earnings:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        mwrr:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        twrr:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
      required:
      - balance
      - earnings
      - full_name
      - mwrr
      - twrr
      - uuid
    ClientPerformance:
      type: object
      properties:
        valuation_date:
          type: string
          format: date
        performance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
      required:
      - performance
      - valuation_date
    ClientRanking:
      type: object
      properties:
        top_performing:
          type: array
          items:
            $ref: '#/components/schemas/ClientEmbedRanking'
        bottom_performing:
          type: array
          items:
            $ref: '#/components/schemas/ClientEmbedRanking'
      required:
      - bottom_performing
      - top_performing
    ClientReferral:
      type: object
      properties:
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
      required:
      - first_name
      - last_name
    ConversationCreate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        portal:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        subject:
          type: string
          maxLength: 80
        messages:
          allOf:
          - $ref: '#/components/schemas/Message'
          nullable: true
      required:
      - created
      - portal
      - subject
      - uuid
    ConversationList:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        subject:
          type: string
        last_message:
          $ref: '#/components/schemas/Message'
        unreads:
          type: integer
          readOnly: true
      required:
      - created
      - last_message
      - subject
      - unreads
      - uuid
    CoreCategoryGroup:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          readOnly: true
        risk_level:
          type: integer
          maximum: 32767
          minimum: 0
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      required:
      - categories
      - code
      - risk_level
      - uuid
    CountryField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 2
        iso3:
          type: string
          maxLength: 3
        name:
          type: string
          maxLength: 150
        name_en_gb:
          type: string
          nullable: true
          title: Name [en-gb]
          maxLength: 150
        name_en_ch:
          type: string
          nullable: true
          title: Name [en-ch]
          maxLength: 150
        name_fr_ch:
          type: string
          nullable: true
          title: Name [fr-ch]
          maxLength: 150
        long_name:
          type: string
          maxLength: 250
        long_name_en_gb:
          type: string
          nullable: true
          title: Long name [en-gb]
          maxLength: 250
        long_name_en_ch:
          type: string
          nullable: true
          title: Long name [en-ch]
          maxLength: 250
        long_name_fr_ch:
          type: string
          nullable: true
          title: Long name [fr-ch]
          maxLength: 250
        eea_country:
          type: boolean
      required:
      - code
      - id
      - iso3
      - long_name
      - name
    CountryList:
      type: object
      properties:
        code:
          type: string
          readOnly: true
        iso3:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        long_name:
          type: string
          readOnly: true
        eea_country:
          type: boolean
          readOnly: true
      required:
      - code
      - eea_country
      - iso3
      - long_name
      - name
    CreateOrder:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        shares:
          type: integer
          minimum: 1
        asset:
          $ref: '#/components/schemas/RelatedAssetSerializerWithAssetCategories'
        portfolio:
          type: string
        order_type:
          $ref: '#/components/schemas/OrderTypeEnum'
        method:
          $ref: '#/components/schemas/CreateOrderMethodEnum'
        limit_price:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0.01
          nullable: true
        stop_price:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0.01
          nullable: true
        duration:
          allOf:
          - $ref: '#/components/schemas/DurationEnum'
          nullable: true
      required:
      - asset
      - method
      - order_type
      - shares
    CreateOrderMethodEnum:
      enum:
      - MARKET
      - STOP
      - LIMIT
      type: string
    Currency:
      type: object
      properties:
        code:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        symbol:
          type: string
          readOnly: true
      required:
      - code
      - name
      - symbol
    CurrentAllocation:
      type: object
      properties:
        cash_active:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        balance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        invested:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        earnings:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Position'
        valuation_datetime:
          type: string
          format: date-time
          readOnly: true
        performance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          default: 0.000000
        trade_total:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        cash_available:
          type: number
          format: double
          readOnly: true
      required:
      - balance
      - cash_active
      - cash_available
      - earnings
      - invested
      - positions
      - trade_total
      - valuation_datetime
    DepositCreate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        provider:
          type: string
        reference:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB6aEnum'
          readOnly: true
        reason:
          type: string
          readOnly: true
          description: Cancelled reason
        completed:
          type: string
          format: date-time
          readOnly: true
        deposit_type:
          $ref: '#/components/schemas/DepositTypeEnum'
        transacted_at:
          type: string
          format: date-time
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
          nullable: true
          description: Additional deposit attributes for the specific portal
      required:
      - amount
      - completed
      - provider
      - reason
      - reference
      - status
      - transacted_at
      - uuid
    DepositDetail:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        portfolio:
          type: string
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        provider:
          type: string
        reference:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusB6aEnum'
        reason:
          type: string
          description: Cancelled reason
          maxLength: 250
        completed:
          type: string
          format: date-time
          nullable: true
        deposit_type:
          $ref: '#/components/schemas/DepositTypeEnum'
        transacted_at:
          type: string
          format: date-time
          nullable: true
        extra_data:
          type: object
          additionalProperties: {}
          nullable: true
          description: Additional deposit attributes for the specific portal
      required:
      - amount
      - portfolio
      - provider
      - reference
      - uuid
    DepositList:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        reference:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB6aEnum'
          readOnly: true
        deposit_type:
          allOf:
          - $ref: '#/components/schemas/DepositTypeEnum'
          readOnly: true
        completed:
          type: string
          format: date-time
          readOnly: true
        transacted_at:
          type: string
          format: date-time
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Additional deposit attributes for the specific portal
      required:
      - amount
      - completed
      - deposit_type
      - extra_data
      - reference
      - status
      - transacted_at
      - uuid
    DepositTypeEnum:
      enum:
      - CONTRIBUTION
      - TRANSFER
      type: string
    DocTypeEnum:
      enum:
      - ID_PERSONAL
      - BANK_DETAILS
      - EMPLOYMENT
      - MARITAL_STATUS
      - PENSION
      - LEGAL
      - TRANSFERS
      - MEDICAL
      - CONTRACT
      - OTHERS
      type: string
    Document:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        doc_type:
          $ref: '#/components/schemas/DocTypeEnum'
        description:
          type: string
          maxLength: 250
        path:
          type: string
          format: uri
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
          nullable: true
          description: Additional document attributes for the specific portal
      required:
      - doc_type
      - name
      - path
      - uuid
    DocumentTypeEnum:
      enum:
      - passport
      - driving_licence
      - national_identity_card
      - utility_bill
      - local_tax_bill
      - bank_statement
      - lease_agreement
      - rent_receipt
      - letter
      - certificate_marriage
      - decree_absolute
      - final_order
      - client_photo
      type: string
    DurationEnum:
      enum:
      - GOOD_TILL_CANCEL
      - DAY_ORDER
      type: string
    ETSForecastRequest:
      type: object
      properties:
        time_horizon:
          type: integer
          maximum: 50
          minimum: 1
        initial_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 1
        recurring_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        recurring_period:
          type: integer
          maximum: 12
          minimum: 0
        risk_level:
          type: integer
          maximum: 10
          minimum: 1
        favourite_categories:
          type: array
          items:
            type: string
        excluded_categories:
          type: array
          items:
            type: string
      required:
      - initial_amount
      - risk_level
      - time_horizon
    EmailVerifyRequest:
      type: object
      properties:
        email:
          type: string
          format: email
    EmailVerifyView:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    EmploymentStatusEnum:
      enum:
      - EMPLOYED
      - SELF_EMPLOYED
      - RETIRED
      - UNEMPLOYED
      type: string
    FeeTypeEnum:
      enum:
      - portal_service
      - seller_fee
      type: string
    FeedActivityList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        activity_type:
          allOf:
          - $ref: '#/components/schemas/ActivityTypeEnum'
          readOnly: true
        activity_data:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - activity_data
      - activity_type
      - created
      - uuid
    ForecastDecumulationRequest:
      type: object
      properties:
        initial_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        recurring_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        risk_level:
          type: integer
        withdrawal_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        retirement_age:
          type: integer
          maximum: 110
          minimum: 18
        life_expectancy:
          type: integer
          maximum: 110
          minimum: 75
      required:
      - initial_amount
      - recurring_amount
      - retirement_age
      - risk_level
      - withdrawal_amount
    ForecastRequest:
      type: object
      properties:
        goal_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 1
        deadline:
          type: string
          format: date
        initial_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        recurring_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        risk_level:
          type: integer
          minimum: 1
      required:
      - deadline
      - goal_amount
      - initial_amount
      - recurring_amount
      - risk_level
    GenderEnum:
      enum:
      - M
      - F
      - U
      type: string
    Goal:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        portfolio:
          type: string
          nullable: true
        goal_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0.1
          description: Desired amount needed to fulfill the goal
        deadline:
          type: string
          format: date
          description: Due date to reach the goal.
        initial_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0.1
          description: Initial deposit amount to start from. No sense to start by
            0
        recurring_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
        risk_level:
          type: integer
          maximum: 32767
          minimum: 0
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
      required:
      - created
      - deadline
      - goal_amount
      - initial_amount
      - name
      - risk_level
      - uuid
    ImpersionationResponse:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
        email:
          type: string
          format: email
        status:
          type: string
      required:
      - access
      - email
      - refresh
      - status
    ImpersonationToken:
      type: object
      properties:
        impersonator:
          type: string
        impersonated:
          type: string
          format: email
        token:
          type: string
      required:
      - impersonated
      - impersonator
      - token
    IntradayPrice:
      type: object
      properties:
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        datetime:
          type: string
          format: date-time
          readOnly: true
        open_price:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        high_price:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        low_price:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        previous_close_price:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
      required:
      - amount
      - datetime
      - high_price
      - low_price
      - open_price
      - previous_close_price
    InvestorFee:
      type: object
      properties:
        value:
          type: number
          format: double
          maximum: 100
          minimum: 0
          description: Determinates a percentage or an amount (between 0 and 1 if
            percentage otherwise Positive Decimal)
        value_unit:
          allOf:
          - $ref: '#/components/schemas/ValueUnitEnum'
          description: Determines the type of the value(Fixed, Percentage)
        fee_type:
          allOf:
          - $ref: '#/components/schemas/FeeTypeEnum'
          description: Each choice should have a related method on fee model that
            contains the logic to charge the client
        concept:
          type: string
          description: Describes the concept that will be shown on invoice
          maxLength: 100
        date_from:
          type: string
          format: date
          nullable: true
          description: Defines the end date when the percentage should be applied
        date_to:
          type: string
          format: date
          nullable: true
          description: Defines the start date when the percentage should be applied
        amount_from:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          nullable: true
          description: Defines the amount start range when the percentage should be
            applied
        amount_to:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          nullable: true
          description: Defines the amount end range when the percentage should be
            applied
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
      required:
      - concept
      - created
      - fee_type
      - updated
      - uuid
    InvestorModelPortfolio:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        cash_weight:
          type: number
          format: double
          maximum: 10
          minimum: -10
          readOnly: true
          description: Percentage on the interval 0-1.
        risk_level:
          type: integer
          readOnly: true
        allocation:
          type: array
          items:
            $ref: '#/components/schemas/AssetModelPortfolio'
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Additional ModelPortfolio attributes
      required:
      - allocation
      - cash_weight
      - extra_data
      - name
      - risk_level
      - uuid
    InvestorWithdrawalCreate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        provider:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/Status14bEnum'
          readOnly: true
        reason:
          type: string
          readOnly: true
          description: Cancelled reason
        completed:
          type: string
          format: date-time
          readOnly: true
        purpose:
          type: string
          nullable: true
          description: Withdrawal reason
          maxLength: 250
        withdrawal_type:
          type: string
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
          nullable: true
          description: Additional withdrawal attributes for the specific portal
      required:
      - amount
      - completed
      - provider
      - reason
      - status
      - uuid
      - withdrawal_type
    InvestorWithdrawalList:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status14bEnum'
          readOnly: true
        withdrawal_type:
          type: string
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Additional withdrawal attributes for the specific portal
      required:
      - amount
      - extra_data
      - status
      - uuid
      - withdrawal_type
    InvoiceDetails:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        number:
          type: string
          nullable: true
          description: Invoice legal number
          maxLength: 50
        status:
          $ref: '#/components/schemas/Status260Enum'
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        date_from:
          type: string
          format: date
          nullable: true
          description: Beginning of charge period
        date_to:
          type: string
          format: date
          nullable: true
          description: End of charge period
        url:
          type: string
          format: uri
          readOnly: true
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        charges:
          type: array
          items:
            type: string
            nullable: true
      required:
      - amount
      - charges
      - created
      - url
      - uuid
    InvoiceList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        number:
          type: string
          readOnly: true
          description: Invoice legal number
        status:
          allOf:
          - $ref: '#/components/schemas/Status260Enum'
          readOnly: true
        date_from:
          type: string
          format: date
          readOnly: true
          description: Beginning of charge period
        date_to:
          type: string
          format: date
          readOnly: true
          description: End of charge period
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        charges:
          type: array
          items:
            type: string
            nullable: true
      required:
      - amount
      - charges
      - date_from
      - date_to
      - number
      - status
      - uuid
    JSONWebToken:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        captcha:
          type: string
          writeOnly: true
      required:
      - password
      - username
    JWTRefreshResponse:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
        status:
          type: string
      required:
      - access
      - refresh
      - status
    JWTResponse:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
        status:
          type: string
      required:
      - access
      - refresh
      - status
    MaritalStatusEnum:
      enum:
      - NOT_DISCLOSED
      - SINGLE
      - MARRIED_CIVIL_PARTNER
      - CIVIL_PARTNER
      - DIVORCED_DISSOLVED_CIVIL_PARTNERSHIP
      - WIDOWED_SURVIVING_CIVIL_PARTNER
      - SEPARATED
      type: string
    Message:
      type: object
      properties:
        user:
          type: string
          readOnly: true
        read_date:
          type: string
          format: date-time
          readOnly: true
        content:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - attachments
      - created
      - read_date
      - user
      - uuid
    MinimumAppVersion:
      type: object
      properties:
        required:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          readOnly: true
      required:
      - required
    ModelPortfolioForecastRequest:
      type: object
      properties:
        time_horizon:
          type: integer
          maximum: 50
          minimum: 1
        initial_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 1
        recurring_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        recurring_period:
          type: integer
          maximum: 12
          minimum: 0
        model_portfolio:
          type: string
      required:
      - initial_amount
      - model_portfolio
      - time_horizon
    NationalDocument:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          maxLength: 20
        name:
          type: string
          maxLength: 120
        countries:
          type: array
          items:
            type: string
      required:
      - code
      - countries
      - name
      - uuid
    NationalityCreate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        country:
          type: string
        document_number:
          type: string
          nullable: true
        document_type:
          type: string
      required:
      - country
    NationalityList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        country:
          type: string
        document_type:
          type: string
        document_number:
          type: string
          readOnly: true
      required:
      - country
      - document_number
      - uuid
    NationalityUpdate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        country:
          type: string
        document_number:
          type: string
          nullable: true
        document_type:
          type: string
      required:
      - country
    NucoroSetting:
      type: object
      properties:
        key:
          type: string
      required:
      - key
    OnboardingResponse:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
        status:
          type: string
      required:
      - access
      - refresh
      - status
    OnboardingToken:
      type: object
      properties:
        email:
          type: string
        token:
          type: string
      required:
      - email
      - token
    OrderList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        asset:
          allOf:
          - $ref: '#/components/schemas/RelatedAssetSerializerWithAssetCategories'
          readOnly: true
        trade:
          type: string
          readOnly: true
        order_type:
          allOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          readOnly: true
        method:
          allOf:
          - $ref: '#/components/schemas/OrderListMethodEnum'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/OrderListStatusEnum'
          readOnly: true
        reason:
          type: string
          readOnly: true
        completed:
          type: string
          format: date-time
          readOnly: true
        rebalance:
          type: string
          readOnly: true
        portfolio:
          type: string
          readOnly: true
        shares:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        price_avg:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        currency:
          $ref: '#/components/schemas/Currency'
        withdrawal:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        stop_price:
          type: number
          format: double
          nullable: true
          readOnly: true
        limit_price:
          type: number
          format: double
          nullable: true
          readOnly: true
        duration:
          type: string
          readOnly: true
      required:
      - amount
      - asset
      - completed
      - created
      - currency
      - duration
      - limit_price
      - method
      - order_type
      - portfolio
      - price_avg
      - reason
      - rebalance
      - shares
      - status
      - stop_price
      - trade
      - withdrawal
    OrderListMethodEnum:
      enum:
      - MARKET
      - QUOTE
      - INTERNAL
      - LIMIT
      - STOP
      type: string
    OrderListStatusEnum:
      enum:
      - PENDING
      - WAITING_FOR_PRICE
      - PROCESSING
      - QUOTED
      - COMPLETED
      - VERIFIED
      - ERROR
      - CANCELLED
      type: string
    OrderTypeEnum:
      enum:
      - BUY
      - SELL
      - VERIFICATION
      type: string
    PaginatedAccessLogList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccessLog'
    PaginatedAddressListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AddressList'
    PaginatedAllocationListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AllocationList'
    PaginatedAssessmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Assessment'
    PaginatedAssetCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssetCategory'
    PaginatedAssetGrowthList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssetGrowth'
    PaginatedAssetListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssetList'
    PaginatedBankAccountListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountList'
    PaginatedBasePortfolioTypeRestrictionsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BasePortfolioTypeRestrictions'
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedClientDetailList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClientDetail'
    PaginatedConversationListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConversationList'
    PaginatedCoreCategoryGroupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CoreCategoryGroup'
    PaginatedCountryListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CountryList'
    PaginatedDepositListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DepositList'
    PaginatedDocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedFeedActivityListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedActivityList'
    PaginatedGoalList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Goal'
    PaginatedIntradayPriceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/IntradayPrice'
    PaginatedInvestorFeeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvestorFee'
    PaginatedInvestorModelPortfolioList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvestorModelPortfolio'
    PaginatedInvestorWithdrawalListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvestorWithdrawalList'
    PaginatedInvoiceListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceList'
    PaginatedMessageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    PaginatedNationalDocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NationalDocument'
    PaginatedNationalityListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NationalityList'
    PaginatedOrderListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderList'
    PaginatedPortfolioListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioList'
    PaginatedPortfolioPerformanceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioPerformance'
    PaginatedPortfolioPerformancePositionsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioPerformancePositions'
    PaginatedPortfolioTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioType'
    PaginatedPresetCategoryGroupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PresetCategoryGroup'
    PaginatedPriceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Price'
    PaginatedQuestionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    PaginatedRebalanceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Rebalance'
    PaginatedStatementList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Statement'
    PaginatedTaxInformationListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaxInformationList'
    PaginatedTaxReportList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaxReport'
    PaginatedTosList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tos'
    PaginatedVerificationDocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/VerificationDocument'
    PaginatedVerificationListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/VerificationList'
    PaginatedWatchlistList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Watchlist'
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
        token:
          type: string
        password:
          type: string
      required:
      - email
      - password
      - token
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordUpdate:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required:
      - new_password
    PatchedAddressUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        line1:
          type: string
        line2:
          type: string
          nullable: true
        postcode:
          type: string
        locality:
          type: string
        country:
          type: string
        region:
          type: string
          nullable: true
    PatchedApplicationClientUpdate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        email:
          type: string
          format: email
        birthdate:
          type: string
          format: date
        tos_consent:
          type: boolean
        marketing_consent:
          type: boolean
        data_consent:
          type: boolean
        tos_consent_date:
          type: string
          format: date
          readOnly: true
        tax_information:
          type: array
          items:
            type: string
            nullable: true
          readOnly: true
        country_birth:
          $ref: '#/components/schemas/CountryField'
        last_login:
          type: string
          format: date-time
          readOnly: true
        referred_by:
          type: string
          nullable: true
        successful_referrals:
          type: integer
          readOnly: true
        kyc_verified:
          type: boolean
          readOnly: true
        is_verified:
          type: boolean
          readOnly: true
        fee_segments:
          type: array
          items:
            type: string
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
        portfolios:
          type: array
          items:
            type: string
          readOnly: true
        onboarded_by:
          type: string
          nullable: true
        risk_level:
          type: integer
          readOnly: true
        onboarding_token:
          type: string
          readOnly: true
        password:
          type: string
          writeOnly: true
        email_verified_last_request:
          type: string
          format: date-time
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
        comments:
          type: string
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusB65Enum'
          readOnly: true
        email_verified:
          type: boolean
        email_verify_last_request:
          type: string
          format: date-time
          nullable: true
        title:
          allOf:
          - $ref: '#/components/schemas/TitleEnum'
          nullable: true
        first_name:
          type: string
          nullable: true
        middle_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          nullable: true
        marital_status:
          allOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          nullable: true
        phone_number:
          type: string
          nullable: true
        phone_number_verified:
          type: string
          format: date-time
          nullable: true
        language:
          type: string
          maxLength: 5
        employment_status:
          allOf:
          - $ref: '#/components/schemas/EmploymentStatusEnum'
          nullable: true
        profession:
          type: string
          nullable: true
          maxLength: 250
        referral_code:
          type: string
          nullable: true
          maxLength: 250
        activated:
          type: string
          format: date-time
          nullable: true
        utm_source:
          type: string
          maxLength: 250
        utm_medium:
          type: string
          maxLength: 250
        utm_campaign:
          type: string
          maxLength: 250
        utm_term:
          type: string
          maxLength: 250
        utm_content:
          type: string
          maxLength: 250
        marketing_consent_date:
          type: string
          format: date
          readOnly: true
        data_consent_date:
          type: string
          format: date
          readOnly: true
    PatchedAssessment:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        completed:
          type: string
          format: date-time
          nullable: true
        choices:
          type: array
          items:
            $ref: '#/components/schemas/RiskChoiceQuestionCode'
        status:
          $ref: '#/components/schemas/AssessmentStatusEnum'
        risk_level:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
    PatchedBankAccountCreateUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        account_number:
          type: string
          nullable: true
          maxLength: 30
        account_sort_code:
          type: string
          nullable: true
          maxLength: 6
        account_holder_name:
          type: string
          nullable: true
        joint:
          type: boolean
        bank_name:
          type: string
          nullable: true
          maxLength: 250
        iban:
          type: string
          nullable: true
          maxLength: 34
        swift_code:
          type: string
          nullable: true
          maxLength: 11
    PatchedGoal:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        portfolio:
          type: string
          nullable: true
        goal_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0.1
          description: Desired amount needed to fulfill the goal
        deadline:
          type: string
          format: date
          description: Due date to reach the goal.
        initial_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0.1
          description: Initial deposit amount to start from. No sense to start by
            0
        recurring_amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          nullable: true
        risk_level:
          type: integer
          maximum: 32767
          minimum: 0
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
    PatchedInvestorFee:
      type: object
      properties:
        value:
          type: number
          format: double
          maximum: 100
          minimum: 0
          description: Determinates a percentage or an amount (between 0 and 1 if
            percentage otherwise Positive Decimal)
        value_unit:
          allOf:
          - $ref: '#/components/schemas/ValueUnitEnum'
          description: Determines the type of the value(Fixed, Percentage)
        fee_type:
          allOf:
          - $ref: '#/components/schemas/FeeTypeEnum'
          description: Each choice should have a related method on fee model that
            contains the logic to charge the client
        concept:
          type: string
          description: Describes the concept that will be shown on invoice
          maxLength: 100
        date_from:
          type: string
          format: date
          nullable: true
          description: Defines the end date when the percentage should be applied
        date_to:
          type: string
          format: date
          nullable: true
          description: Defines the start date when the percentage should be applied
        amount_from:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          nullable: true
          description: Defines the amount start range when the percentage should be
            applied
        amount_to:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          nullable: true
          description: Defines the amount end range when the percentage should be
            applied
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
    PatchedNationalityUpdate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        country:
          type: string
        document_number:
          type: string
          nullable: true
        document_type:
          type: string
    PatchedPasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
    PatchedPortfolioUpdate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        portfolio_type:
          type: string
        risk_level:
          type: integer
          maximum: 32767
          nullable: true
          minimum: 0
        time_horizon:
          type: integer
          maximum: 32767
          nullable: true
          minimum: 0
        status:
          allOf:
          - $ref: '#/components/schemas/Status2efEnum'
          readOnly: true
        currency:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        activated:
          type: string
          format: date-time
          readOnly: true
        advisor:
          type: string
        advice_engine:
          type: string
        extra_data:
          type: object
          additionalProperties: {}
        client:
          type: string
    PatchedTaxInformationCreateUpdate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        country:
          type: string
        document_number:
          type: string
        document_type:
          type: string
    PatchedVerificationDocument:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        document_front:
          type: string
        document_back:
          type: string
    PortalSettingValueList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
        value:
          type: string
          maxLength: 250
        portal:
          type: integer
        key:
          type: integer
      required:
      - created
      - id
      - key
      - portal
      - updated
      - uuid
      - value
    PortfolioCreate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        portfolio_type:
          type: string
        risk_level:
          type: integer
        time_horizon:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/Status2efEnum'
          readOnly: true
        currency:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        activated:
          type: string
          format: date-time
          readOnly: true
        advisor:
          type: string
        advice_engine:
          type: string
        extra_data:
          type: object
          additionalProperties: {}
        client:
          type: string
      required:
      - activated
      - advice_engine
      - advisor
      - created
      - name
      - portfolio_type
      - risk_level
      - status
      - time_horizon
      - uuid
    PortfolioDetail:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        portfolio_type:
          type: string
        risk_level:
          type: integer
          maximum: 32767
          nullable: true
          minimum: 0
        time_horizon:
          type: integer
          maximum: 32767
          nullable: true
          minimum: 0
        status:
          $ref: '#/components/schemas/Status2efEnum'
        extra_data:
          type: object
          additionalProperties: {}
          nullable: true
          description: Additional Portfolio attributes
        currency:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        activated:
          type: string
          format: date-time
          nullable: true
        balance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        performance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        deposit_reference:
          type: string
          readOnly: true
        advisor:
          type: string
          nullable: true
        advice_engine:
          type: string
          nullable: true
      required:
      - balance
      - created
      - deposit_reference
      - name
      - performance
      - portfolio_type
      - uuid
    PortfolioList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        portfolio_type:
          type: string
        risk_level:
          type: integer
          readOnly: true
        time_horizon:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status2efEnum'
          readOnly: true
        balance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        invested:
          type: number
          format: double
          maximum: 1000000000000
          minimum: 0
        currency:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        advisor:
          type: string
          nullable: true
        advice_engine:
          type: string
          nullable: true
      required:
      - balance
      - created
      - invested
      - name
      - portfolio_type
      - risk_level
      - status
      - time_horizon
      - uuid
    PortfolioPerformance:
      type: object
      properties:
        valuation_date:
          type: string
          format: date
        percentage:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          default: 0.000000
        performance:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          default: 0.000000
      required:
      - valuation_date
    PortfolioPerformancePositions:
      type: object
      properties:
        valuation_datetime:
          type: string
          format: date-time
        last_update:
          type: string
          format: date-time
        asset:
          type: string
        shares:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        price:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        currency:
          type: string
        weight:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        fx_rate_account:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        asset_currency_value:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        value:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        position_return:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        unrealised_pl:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        realised_pl:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        earnings:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        avg_entry_price:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        daily_pl:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
      required:
      - asset
      - avg_entry_price
      - currency
      - daily_pl
      - earnings
      - last_update
      - position_return
      - price
      - realised_pl
      - shares
      - unrealised_pl
      - valuation_datetime
      - value
    PortfolioType:
      type: object
      properties:
        code:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
      required:
      - code
      - name
    PortfolioTypeRestrictions:
      type: object
      properties:
        portfolio_type:
          type: string
          readOnly: true
        key:
          type: string
          readOnly: true
      required:
      - key
      - portfolio_type
    PortfolioUpdate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 150
        portfolio_type:
          type: string
        risk_level:
          type: integer
          maximum: 32767
          nullable: true
          minimum: 0
        time_horizon:
          type: integer
          maximum: 32767
          nullable: true
          minimum: 0
        status:
          allOf:
          - $ref: '#/components/schemas/Status2efEnum'
          readOnly: true
        currency:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        activated:
          type: string
          format: date-time
          readOnly: true
        advisor:
          type: string
        advice_engine:
          type: string
        extra_data:
          type: object
          additionalProperties: {}
        client:
          type: string
      required:
      - activated
      - advice_engine
      - advisor
      - created
      - name
      - portfolio_type
      - status
      - uuid
    Position:
      type: object
      properties:
        asset:
          allOf:
          - $ref: '#/components/schemas/RelatedAssetSerializerWithAssetCategories'
          readOnly: true
        shares:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        price:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        value:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        weight:
          type: number
          format: double
          readOnly: true
        fx_rate_account:
          type: number
          format: double
          readOnly: true
        asset_currency_value:
          type: number
          format: double
          readOnly: true
      required:
      - asset
      - asset_currency_value
      - fx_rate_account
      - price
      - shares
      - value
      - weight
    PresetCategoryGroup:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      required:
      - categories
      - code
      - uuid
    Price:
      type: object
      properties:
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
          readOnly: true
        datetime:
          type: string
          format: date-time
          readOnly: true
        date:
          type: string
          format: date-time
      required:
      - amount
      - date
      - datetime
    Question:
      type: object
      properties:
        code:
          type: string
          readOnly: true
        order:
          type: integer
          readOnly: true
        description:
          type: string
          readOnly: true
        choices:
          type: array
          items:
            $ref: '#/components/schemas/RiskChoice'
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
      required:
      - choices
      - code
      - created
      - description
      - order
    Rebalance:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/RebalanceStatusEnum'
          readOnly: true
        reason:
          type: string
          readOnly: true
          description: Cancelled reason
        broker_orders:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - broker_orders
      - reason
      - status
      - uuid
    RebalanceStatusEnum:
      enum:
      - PENDING
      - CREATED
      - ADVICE_REQUESTED
      - ADVICE_COMPLETED
      - IN_PROCESS
      - PROCESSING
      - ORDERS_GENERATED
      - ORDERS_FILLED
      - SELL_TRADES_GENERATED
      - BUY_TRADES_GENERATED
      - POSITIONS_SOLD
      - COMPLETED
      - CANCELLED
      - ERROR
      type: string
    RelatedAssetSerializerWithAssetCategories:
      type: object
      description: Allow get asset by multiple params or UUID
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        market:
          type: string
        isin:
          type: string
          maxLength: 120
        currency:
          type: string
        ticker:
          type: string
          maxLength: 120
        name:
          type: string
          maxLength: 250
        extra_data:
          type: object
          additionalProperties: {}
          nullable: true
        categories:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - categories
      - isin
      - name
      - ticker
      - uuid
    RelatedAssetSerializerWithPermission:
      type: object
      description: Allow get asset by multiple params or UUID
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        market:
          type: string
        isin:
          type: string
          maxLength: 120
        currency:
          type: string
        ticker:
          type: string
          maxLength: 120
        name:
          type: string
          maxLength: 250
        extra_data:
          type: object
          additionalProperties: {}
          nullable: true
      required:
      - isin
      - name
      - ticker
      - uuid
    RelationshipManager:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
        email:
          type: string
          format: email
          readOnly: true
        photo:
          type: string
          format: uri
          nullable: true
      required:
      - email
      - uuid
    Response:
      type: object
      properties:
        status:
          type: string
          default: ok
        error:
          type: string
    ResultEnum:
      enum:
      - ACCEPTED
      - REJECTED
      - DOUBT
      type: string
    RiskChoice:
      type: object
      properties:
        code:
          type: string
          readOnly: true
        order:
          type: integer
          readOnly: true
        description:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
      required:
      - code
      - created
      - description
      - order
    RiskChoiceQuestionCode:
      type: object
      properties:
        code:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
          maxLength: 60
        order:
          type: integer
          maximum: 32767
          minimum: 0
        description:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        question_code:
          type: string
      required:
      - code
      - created
      - question_code
    Statement:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        date_from:
          type: string
          format: date
        date_to:
          type: string
          format: date
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        status:
          allOf:
          - $ref: '#/components/schemas/Status181Enum'
          readOnly: true
      required:
      - created
      - date_from
      - date_to
      - status
      - uuid
    Status14bEnum:
      enum:
      - DRAFT
      - PENDING
      - PROCESSING
      - POSITIONS_SOLD
      - REQUESTED
      - COMPLETED
      - ERROR
      - CANCELLED
      type: string
    Status181Enum:
      enum:
      - GENERATING
      - ERROR
      - COMPLETED
      type: string
    Status260Enum:
      enum:
      - PENDING
      - CHARGED
      type: string
    Status2efEnum:
      enum:
      - PENDING
      - ACTIVE
      - DELETING
      - DELETED
      type: string
    Status6f6Enum:
      enum:
      - ACTIVE
      - INACTIVE
      - DELETED
      type: string
    StatusB65Enum:
      enum:
      - ONBOARDING
      - PENDING
      - ACTIVE
      - INACTIVE
      - CUSTODIAN_PENDING
      - KYC_PENDING
      type: string
    StatusB6aEnum:
      enum:
      - PENDING
      - REQUESTED
      - PROCESSING
      - COMPLETED
      - ERROR
      - CANCELLED
      type: string
    StatusBd7Enum:
      enum:
      - PENDING
      - PROCESSING
      - COMPLETED
      - PAUSED
      - REOPENED
      - OTHER
      - ERROR
      - CANCELLED
      - OUTDATED
      type: string
    Subscribe:
      type: object
      properties:
        id:
          type: string
        subscription:
          type: string
      required:
      - id
      - subscription
    TaxInformationCreateUpdate:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        country:
          type: string
        document_number:
          type: string
        document_type:
          type: string
      required:
      - country
      - document_number
      - uuid
    TaxInformationList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        country:
          type: string
        document_type:
          type: string
        document_number:
          type: string
          readOnly: true
      required:
      - country
      - document_number
      - uuid
    TaxReport:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        date_from:
          type: string
          format: date
          readOnly: true
          title: From
        date_to:
          type: string
          format: date
          readOnly: true
          title: To
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        status:
          allOf:
          - $ref: '#/components/schemas/Status181Enum'
          readOnly: true
      required:
      - created
      - date_from
      - date_to
      - status
      - uuid
    TitleEnum:
      enum:
      - MR
      - MS
      - MX
      type: string
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    Tos:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        version:
          type: string
          maxLength: 20
        content:
          type: string
        published:
          type: string
          format: date
        previous_tos_uuid:
          type: string
          readOnly: true
        next_tos_uuid:
          type: string
          readOnly: true
      required:
      - content
      - next_tos_uuid
      - previous_tos_uuid
      - uuid
      - version
    Unsubscribe:
      type: object
      properties:
        id:
          type: string
        subscription:
          type: string
      required:
      - id
      - subscription
    ValueUnitEnum:
      enum:
      - fixed_amount
      - percentage
      type: string
    VerificationCreate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        verify_type:
          $ref: '#/components/schemas/VerifyTypeEnum'
        status:
          $ref: '#/components/schemas/StatusBd7Enum'
        result:
          $ref: '#/components/schemas/ResultEnum'
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
      required:
      - created
      - updated
      - uuid
      - verify_type
    VerificationDocument:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        document_front:
          type: string
        document_back:
          type: string
      required:
      - document_back
      - document_front
      - document_type
      - uuid
    VerificationDocumentCreate:
      type: object
      properties:
        document_type:
          type: string
        uuid:
          type: string
          format: uuid
        document_front:
          $ref: '#/components/schemas/Document'
        document_back:
          $ref: '#/components/schemas/Document'
      required:
      - document_back
      - document_front
      - document_type
      - uuid
    VerificationList:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        verify_type:
          allOf:
          - $ref: '#/components/schemas/VerifyTypeEnum'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBd7Enum'
          readOnly: true
        result:
          allOf:
          - $ref: '#/components/schemas/ResultEnum'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
        verification_documents:
          type: array
          items:
            type: string
      required:
      - created
      - result
      - status
      - updated
      - uuid
      - verification_documents
      - verify_type
    VerificationWithType:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        verify_type:
          $ref: '#/components/schemas/VerifyTypeEnum'
        status:
          $ref: '#/components/schemas/StatusBd7Enum'
        result:
          $ref: '#/components/schemas/ResultEnum'
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
        verification_documents:
          type: array
          items:
            $ref: '#/components/schemas/VerificationDocumentCreate'
          readOnly: true
          nullable: true
      required:
      - created
      - updated
      - uuid
      - verification_documents
      - verify_type
    VerifyTypeEnum:
      enum:
      - IDENTITY
      - BANKING
      type: string
    Watchlist:
      type: object
      description: |-
        A ModelSerializer that takes additional arguments for
        "fields", "omit" and "expand" in order to
        control which fields are displayed, and whether to replace simple
        values with complex, nested serializations
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 250
        assets:
          type: array
          items:
            $ref: '#/components/schemas/RelatedAssetSerializerWithPermission'
      required:
      - assets
      - name
      - uuid
    WebsocketAuthentication:
      type: object
      properties:
        ticket:
          type: string
      required:
      - ticket
    WithdrawalDetail:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        portfolio:
          type: string
        amount:
          type: number
          format: double
          maximum: 1000000000000
          minimum: -1000000000000
        provider:
          type: string
        status:
          $ref: '#/components/schemas/Status14bEnum'
        reason:
          type: string
          description: Cancelled reason
          maxLength: 250
        completed:
          type: string
          format: date-time
          nullable: true
        purpose:
          type: string
          nullable: true
          description: Withdrawal reason
          maxLength: 250
        created:
          type: string
          format: date-time
          readOnly: true
          title: Created on
        withdrawal_type:
          type: string
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
          nullable: true
          description: Additional withdrawal attributes for the specific portal
      required:
      - amount
      - created
      - portfolio
      - provider
      - status
      - uuid
      - withdrawal_type
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: Bearer
    oauth2:
      type: oauth2
      flows: {}
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
