/**
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NucoroApi);
  }
}(this, function(expect, NucoroApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NucoroApi.PortfolioPerformancePositions();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PortfolioPerformancePositions', function() {
    it('should create an instance of PortfolioPerformancePositions', function() {
      // uncomment below and update the code to test PortfolioPerformancePositions
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be.a(NucoroApi.PortfolioPerformancePositions);
    });

    it('should have the property valuationDatetime (base name: "valuation_datetime")', function() {
      // uncomment below and update the code to test the property valuationDatetime
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdate (base name: "last_update")', function() {
      // uncomment below and update the code to test the property lastUpdate
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property asset (base name: "asset")', function() {
      // uncomment below and update the code to test the property asset
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property shares (base name: "shares")', function() {
      // uncomment below and update the code to test the property shares
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property fxRateAccount (base name: "fx_rate_account")', function() {
      // uncomment below and update the code to test the property fxRateAccount
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property assetCurrencyValue (base name: "asset_currency_value")', function() {
      // uncomment below and update the code to test the property assetCurrencyValue
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property positionReturn (base name: "position_return")', function() {
      // uncomment below and update the code to test the property positionReturn
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property unrealisedPl (base name: "unrealised_pl")', function() {
      // uncomment below and update the code to test the property unrealisedPl
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property realisedPl (base name: "realised_pl")', function() {
      // uncomment below and update the code to test the property realisedPl
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property earnings (base name: "earnings")', function() {
      // uncomment below and update the code to test the property earnings
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property avgEntryPrice (base name: "avg_entry_price")', function() {
      // uncomment below and update the code to test the property avgEntryPrice
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

    it('should have the property dailyPl (base name: "daily_pl")', function() {
      // uncomment below and update the code to test the property dailyPl
      //var instance = new NucoroApi.PortfolioPerformancePositions();
      //expect(instance).to.be();
    });

  });

}));
