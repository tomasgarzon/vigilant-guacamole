/**
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DocumentTypeEnum from '../model/DocumentTypeEnum';
import OneOfResultEnumBlankEnum from '../model/OneOfResultEnumBlankEnum';
import PaginatedVerificationDocumentList from '../model/PaginatedVerificationDocumentList';
import PaginatedVerificationListList from '../model/PaginatedVerificationListList';
import StatusBd7Enum from '../model/StatusBd7Enum';
import VerificationCreate from '../model/VerificationCreate';
import VerificationDocument from '../model/VerificationDocument';
import VerificationDocumentCreate from '../model/VerificationDocumentCreate';
import VerificationList from '../model/VerificationList';
import VerificationWithType from '../model/VerificationWithType';
import VerifyTypeEnum from '../model/VerifyTypeEnum';

/**
* KYC service.
* @module api/KYCApi
* @version 4.175.0
*/
export default class KYCApi {

    /**
    * Constructs a new KYCApi. 
    * @alias module:api/KYCApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the clientVerificationCreate operation.
     * @callback module:api/KYCApi~clientVerificationCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerificationCreate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a verification for a client
     * @param {String} clientUuid 
     * @param {String} verifyTypeCode 
     * @param {module:model/VerificationCreate} verificationCreate 
     * @param {module:api/KYCApi~clientVerificationCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerificationCreate}
     */
    clientVerificationCreate(clientUuid, verifyTypeCode, verificationCreate, callback) {
      let postBody = verificationCreate;
      // verify the required parameter 'clientUuid' is set
      if (clientUuid === undefined || clientUuid === null) {
        throw new Error("Missing the required parameter 'clientUuid' when calling clientVerificationCreate");
      }
      // verify the required parameter 'verifyTypeCode' is set
      if (verifyTypeCode === undefined || verifyTypeCode === null) {
        throw new Error("Missing the required parameter 'verifyTypeCode' when calling clientVerificationCreate");
      }
      // verify the required parameter 'verificationCreate' is set
      if (verificationCreate === undefined || verificationCreate === null) {
        throw new Error("Missing the required parameter 'verificationCreate' when calling clientVerificationCreate");
      }

      let pathParams = {
        'client_uuid': clientUuid,
        'verify_type_code': verifyTypeCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'jwtAuth', 'tokenAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = VerificationCreate;
      return this.apiClient.callApi(
        '/api/v2/clients/{client_uuid}/verifications/{verify_type_code}/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clientVerificationDocumentCreate operation.
     * @callback module:api/KYCApi~clientVerificationDocumentCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerificationWithType} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a verification Document for a client
     * @param {String} clientUuid 
     * @param {String} verifyTypeCode 
     * @param {String} uuid 
     * @param {module:model/VerifyTypeEnum} verifyType 
     * @param {Date} created 
     * @param {Date} updated 
     * @param {Array.<module:model/VerificationDocumentCreate>} verificationDocuments 
     * @param {Object} opts Optional parameters
     * @param {module:model/StatusBd7Enum} opts.status 
     * @param {module:model/OneOfResultEnumBlankEnum} opts.result 
     * @param {module:api/KYCApi~clientVerificationDocumentCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerificationWithType}
     */
    clientVerificationDocumentCreate(clientUuid, verifyTypeCode, uuid, verifyType, created, updated, verificationDocuments, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'clientUuid' is set
      if (clientUuid === undefined || clientUuid === null) {
        throw new Error("Missing the required parameter 'clientUuid' when calling clientVerificationDocumentCreate");
      }
      // verify the required parameter 'verifyTypeCode' is set
      if (verifyTypeCode === undefined || verifyTypeCode === null) {
        throw new Error("Missing the required parameter 'verifyTypeCode' when calling clientVerificationDocumentCreate");
      }
      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling clientVerificationDocumentCreate");
      }
      // verify the required parameter 'verifyType' is set
      if (verifyType === undefined || verifyType === null) {
        throw new Error("Missing the required parameter 'verifyType' when calling clientVerificationDocumentCreate");
      }
      // verify the required parameter 'created' is set
      if (created === undefined || created === null) {
        throw new Error("Missing the required parameter 'created' when calling clientVerificationDocumentCreate");
      }
      // verify the required parameter 'updated' is set
      if (updated === undefined || updated === null) {
        throw new Error("Missing the required parameter 'updated' when calling clientVerificationDocumentCreate");
      }
      // verify the required parameter 'verificationDocuments' is set
      if (verificationDocuments === undefined || verificationDocuments === null) {
        throw new Error("Missing the required parameter 'verificationDocuments' when calling clientVerificationDocumentCreate");
      }

      let pathParams = {
        'client_uuid': clientUuid,
        'verify_type_code': verifyTypeCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'uuid': uuid,
        'verify_type': verifyType,
        'status': opts['status'],
        'result': opts['result'],
        'created': created,
        'updated': updated,
        'verification_documents': this.apiClient.buildCollectionParam(verificationDocuments, 'csv')
      };

      let authNames = ['cookieAuth', 'jwtAuth', 'tokenAuth'];
      let contentTypes = ['multipart/form-data', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VerificationWithType;
      return this.apiClient.callApi(
        '/api/v2/clients/{client_uuid}/verifications/{verify_type_code}/documents/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clientVerificationDocumentDelete operation.
     * @callback module:api/KYCApi~clientVerificationDocumentDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a client verificatoin document
     * @param {String} clientUuid 
     * @param {String} uuid 
     * @param {String} verifyTypeCode 
     * @param {module:api/KYCApi~clientVerificationDocumentDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    clientVerificationDocumentDelete(clientUuid, uuid, verifyTypeCode, callback) {
      let postBody = null;
      // verify the required parameter 'clientUuid' is set
      if (clientUuid === undefined || clientUuid === null) {
        throw new Error("Missing the required parameter 'clientUuid' when calling clientVerificationDocumentDelete");
      }
      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling clientVerificationDocumentDelete");
      }
      // verify the required parameter 'verifyTypeCode' is set
      if (verifyTypeCode === undefined || verifyTypeCode === null) {
        throw new Error("Missing the required parameter 'verifyTypeCode' when calling clientVerificationDocumentDelete");
      }

      let pathParams = {
        'client_uuid': clientUuid,
        'uuid': uuid,
        'verify_type_code': verifyTypeCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'jwtAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/clients/{client_uuid}/verifications/{verify_type_code}/documents/{uuid}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clientVerificationDocumentList operation.
     * @callback module:api/KYCApi~clientVerificationDocumentListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedVerificationDocumentList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Verification Document for a client
     * @param {String} clientUuid 
     * @param {String} verifyTypeCode 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit Number of results to return per page.
     * @param {Number} opts.offset The initial index from which to return the results.
     * @param {module:api/KYCApi~clientVerificationDocumentListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedVerificationDocumentList}
     */
    clientVerificationDocumentList(clientUuid, verifyTypeCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'clientUuid' is set
      if (clientUuid === undefined || clientUuid === null) {
        throw new Error("Missing the required parameter 'clientUuid' when calling clientVerificationDocumentList");
      }
      // verify the required parameter 'verifyTypeCode' is set
      if (verifyTypeCode === undefined || verifyTypeCode === null) {
        throw new Error("Missing the required parameter 'verifyTypeCode' when calling clientVerificationDocumentList");
      }

      let pathParams = {
        'client_uuid': clientUuid,
        'verify_type_code': verifyTypeCode
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'jwtAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedVerificationDocumentList;
      return this.apiClient.callApi(
        '/api/v2/clients/{client_uuid}/verifications/{verify_type_code}/documents/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clientVerificationDocumentPartialUpdate operation.
     * @callback module:api/KYCApi~clientVerificationDocumentPartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerificationDocument} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Partial Update a client verification document
     * @param {String} clientUuid 
     * @param {String} uuid 
     * @param {String} verifyTypeCode 
     * @param {Object} opts Optional parameters
     * @param {String} opts.uuid2 
     * @param {module:model/DocumentTypeEnum} opts.documentType 
     * @param {String} opts.documentFront 
     * @param {String} opts.documentBack 
     * @param {module:api/KYCApi~clientVerificationDocumentPartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerificationDocument}
     */
    clientVerificationDocumentPartialUpdate(clientUuid, uuid, verifyTypeCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'clientUuid' is set
      if (clientUuid === undefined || clientUuid === null) {
        throw new Error("Missing the required parameter 'clientUuid' when calling clientVerificationDocumentPartialUpdate");
      }
      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling clientVerificationDocumentPartialUpdate");
      }
      // verify the required parameter 'verifyTypeCode' is set
      if (verifyTypeCode === undefined || verifyTypeCode === null) {
        throw new Error("Missing the required parameter 'verifyTypeCode' when calling clientVerificationDocumentPartialUpdate");
      }

      let pathParams = {
        'client_uuid': clientUuid,
        'uuid': uuid,
        'verify_type_code': verifyTypeCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'uuid': opts['uuid2'],
        'document_type': opts['documentType'],
        'document_front': opts['documentFront'],
        'document_back': opts['documentBack']
      };

      let authNames = ['cookieAuth', 'jwtAuth', 'tokenAuth'];
      let contentTypes = ['multipart/form-data', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VerificationDocument;
      return this.apiClient.callApi(
        '/api/v2/clients/{client_uuid}/verifications/{verify_type_code}/documents/{uuid}/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clientVerificationDocumentRetrieve operation.
     * @callback module:api/KYCApi~clientVerificationDocumentRetrieveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerificationDocument} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a client verification document
     * @param {String} clientUuid 
     * @param {String} uuid 
     * @param {String} verifyTypeCode 
     * @param {module:api/KYCApi~clientVerificationDocumentRetrieveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerificationDocument}
     */
    clientVerificationDocumentRetrieve(clientUuid, uuid, verifyTypeCode, callback) {
      let postBody = null;
      // verify the required parameter 'clientUuid' is set
      if (clientUuid === undefined || clientUuid === null) {
        throw new Error("Missing the required parameter 'clientUuid' when calling clientVerificationDocumentRetrieve");
      }
      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling clientVerificationDocumentRetrieve");
      }
      // verify the required parameter 'verifyTypeCode' is set
      if (verifyTypeCode === undefined || verifyTypeCode === null) {
        throw new Error("Missing the required parameter 'verifyTypeCode' when calling clientVerificationDocumentRetrieve");
      }

      let pathParams = {
        'client_uuid': clientUuid,
        'uuid': uuid,
        'verify_type_code': verifyTypeCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'jwtAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VerificationDocument;
      return this.apiClient.callApi(
        '/api/v2/clients/{client_uuid}/verifications/{verify_type_code}/documents/{uuid}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clientVerificationDocumentUpdate operation.
     * @callback module:api/KYCApi~clientVerificationDocumentUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerificationDocument} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a client verification document
     * @param {String} clientUuid 
     * @param {String} uuid 
     * @param {String} verifyTypeCode 
     * @param {String} uuid2 
     * @param {module:model/DocumentTypeEnum} documentType 
     * @param {String} documentFront 
     * @param {String} documentBack 
     * @param {module:api/KYCApi~clientVerificationDocumentUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerificationDocument}
     */
    clientVerificationDocumentUpdate(clientUuid, uuid, verifyTypeCode, uuid2, documentType, documentFront, documentBack, callback) {
      let postBody = null;
      // verify the required parameter 'clientUuid' is set
      if (clientUuid === undefined || clientUuid === null) {
        throw new Error("Missing the required parameter 'clientUuid' when calling clientVerificationDocumentUpdate");
      }
      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling clientVerificationDocumentUpdate");
      }
      // verify the required parameter 'verifyTypeCode' is set
      if (verifyTypeCode === undefined || verifyTypeCode === null) {
        throw new Error("Missing the required parameter 'verifyTypeCode' when calling clientVerificationDocumentUpdate");
      }
      // verify the required parameter 'uuid2' is set
      if (uuid2 === undefined || uuid2 === null) {
        throw new Error("Missing the required parameter 'uuid2' when calling clientVerificationDocumentUpdate");
      }
      // verify the required parameter 'documentType' is set
      if (documentType === undefined || documentType === null) {
        throw new Error("Missing the required parameter 'documentType' when calling clientVerificationDocumentUpdate");
      }
      // verify the required parameter 'documentFront' is set
      if (documentFront === undefined || documentFront === null) {
        throw new Error("Missing the required parameter 'documentFront' when calling clientVerificationDocumentUpdate");
      }
      // verify the required parameter 'documentBack' is set
      if (documentBack === undefined || documentBack === null) {
        throw new Error("Missing the required parameter 'documentBack' when calling clientVerificationDocumentUpdate");
      }

      let pathParams = {
        'client_uuid': clientUuid,
        'uuid': uuid,
        'verify_type_code': verifyTypeCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'uuid': uuid2,
        'document_type': documentType,
        'document_front': documentFront,
        'document_back': documentBack
      };

      let authNames = ['cookieAuth', 'jwtAuth', 'tokenAuth'];
      let contentTypes = ['multipart/form-data', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VerificationDocument;
      return this.apiClient.callApi(
        '/api/v2/clients/{client_uuid}/verifications/{verify_type_code}/documents/{uuid}/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clientVerificationList operation.
     * @callback module:api/KYCApi~clientVerificationListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedVerificationListList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Verification for a client
     * @param {String} clientUuid 
     * @param {String} verifyTypeCode 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit Number of results to return per page.
     * @param {Number} opts.offset The initial index from which to return the results.
     * @param {module:api/KYCApi~clientVerificationListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedVerificationListList}
     */
    clientVerificationList(clientUuid, verifyTypeCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'clientUuid' is set
      if (clientUuid === undefined || clientUuid === null) {
        throw new Error("Missing the required parameter 'clientUuid' when calling clientVerificationList");
      }
      // verify the required parameter 'verifyTypeCode' is set
      if (verifyTypeCode === undefined || verifyTypeCode === null) {
        throw new Error("Missing the required parameter 'verifyTypeCode' when calling clientVerificationList");
      }

      let pathParams = {
        'client_uuid': clientUuid,
        'verify_type_code': verifyTypeCode
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'jwtAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedVerificationListList;
      return this.apiClient.callApi(
        '/api/v2/clients/{client_uuid}/verifications/{verify_type_code}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clientVerificationRetrieve operation.
     * @callback module:api/KYCApi~clientVerificationRetrieveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerificationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a client verification 
     * @param {String} clientUuid 
     * @param {String} uuid 
     * @param {String} verifyTypeCode 
     * @param {module:api/KYCApi~clientVerificationRetrieveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerificationList}
     */
    clientVerificationRetrieve(clientUuid, uuid, verifyTypeCode, callback) {
      let postBody = null;
      // verify the required parameter 'clientUuid' is set
      if (clientUuid === undefined || clientUuid === null) {
        throw new Error("Missing the required parameter 'clientUuid' when calling clientVerificationRetrieve");
      }
      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling clientVerificationRetrieve");
      }
      // verify the required parameter 'verifyTypeCode' is set
      if (verifyTypeCode === undefined || verifyTypeCode === null) {
        throw new Error("Missing the required parameter 'verifyTypeCode' when calling clientVerificationRetrieve");
      }

      let pathParams = {
        'client_uuid': clientUuid,
        'uuid': uuid,
        'verify_type_code': verifyTypeCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'jwtAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VerificationList;
      return this.apiClient.callApi(
        '/api/v2/clients/{client_uuid}/verifications/{verify_type_code}/{uuid}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
