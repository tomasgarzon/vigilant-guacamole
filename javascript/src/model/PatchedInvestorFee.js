/**
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeeTypeEnum from './FeeTypeEnum';
import ValueUnitEnum from './ValueUnitEnum';

/**
 * The PatchedInvestorFee model module.
 * @module model/PatchedInvestorFee
 * @version 4.175.0
 */
class PatchedInvestorFee {
    /**
     * Constructs a new <code>PatchedInvestorFee</code>.
     * @alias module:model/PatchedInvestorFee
     */
    constructor() { 
        
        PatchedInvestorFee.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchedInvestorFee</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchedInvestorFee} obj Optional instance to populate.
     * @return {module:model/PatchedInvestorFee} The populated <code>PatchedInvestorFee</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchedInvestorFee();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('value_unit')) {
                obj['value_unit'] = ApiClient.convertToType(data['value_unit'], ValueUnitEnum);
            }
            if (data.hasOwnProperty('fee_type')) {
                obj['fee_type'] = ApiClient.convertToType(data['fee_type'], FeeTypeEnum);
            }
            if (data.hasOwnProperty('concept')) {
                obj['concept'] = ApiClient.convertToType(data['concept'], 'String');
            }
            if (data.hasOwnProperty('date_from')) {
                obj['date_from'] = ApiClient.convertToType(data['date_from'], 'Date');
            }
            if (data.hasOwnProperty('date_to')) {
                obj['date_to'] = ApiClient.convertToType(data['date_to'], 'Date');
            }
            if (data.hasOwnProperty('amount_from')) {
                obj['amount_from'] = ApiClient.convertToType(data['amount_from'], 'Number');
            }
            if (data.hasOwnProperty('amount_to')) {
                obj['amount_to'] = ApiClient.convertToType(data['amount_to'], 'Number');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * Determinates a percentage or an amount (between 0 and 1 if percentage otherwise Positive Decimal)
 * @member {Number} value
 */
PatchedInvestorFee.prototype['value'] = undefined;

/**
 * Determines the type of the value(Fixed, Percentage)
 * @member {module:model/ValueUnitEnum} value_unit
 */
PatchedInvestorFee.prototype['value_unit'] = undefined;

/**
 * Each choice should have a related method on fee model that contains the logic to charge the client
 * @member {module:model/FeeTypeEnum} fee_type
 */
PatchedInvestorFee.prototype['fee_type'] = undefined;

/**
 * Describes the concept that will be shown on invoice
 * @member {String} concept
 */
PatchedInvestorFee.prototype['concept'] = undefined;

/**
 * Defines the end date when the percentage should be applied
 * @member {Date} date_from
 */
PatchedInvestorFee.prototype['date_from'] = undefined;

/**
 * Defines the start date when the percentage should be applied
 * @member {Date} date_to
 */
PatchedInvestorFee.prototype['date_to'] = undefined;

/**
 * Defines the amount start range when the percentage should be applied
 * @member {Number} amount_from
 */
PatchedInvestorFee.prototype['amount_from'] = undefined;

/**
 * Defines the amount end range when the percentage should be applied
 * @member {Number} amount_to
 */
PatchedInvestorFee.prototype['amount_to'] = undefined;

/**
 * @member {String} uuid
 */
PatchedInvestorFee.prototype['uuid'] = undefined;

/**
 * @member {Date} created
 */
PatchedInvestorFee.prototype['created'] = undefined;

/**
 * @member {Date} updated
 */
PatchedInvestorFee.prototype['updated'] = undefined;






export default PatchedInvestorFee;

