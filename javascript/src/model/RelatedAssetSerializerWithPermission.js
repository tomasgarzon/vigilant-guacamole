/**
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RelatedAssetSerializerWithPermission model module.
 * @module model/RelatedAssetSerializerWithPermission
 * @version 4.175.0
 */
class RelatedAssetSerializerWithPermission {
    /**
     * Constructs a new <code>RelatedAssetSerializerWithPermission</code>.
     * Allow get asset by multiple params or UUID
     * @alias module:model/RelatedAssetSerializerWithPermission
     * @param uuid {String} 
     * @param isin {String} 
     * @param ticker {String} 
     * @param name {String} 
     */
    constructor(uuid, isin, ticker, name) { 
        
        RelatedAssetSerializerWithPermission.initialize(this, uuid, isin, ticker, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, uuid, isin, ticker, name) { 
        obj['uuid'] = uuid;
        obj['isin'] = isin;
        obj['ticker'] = ticker;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>RelatedAssetSerializerWithPermission</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RelatedAssetSerializerWithPermission} obj Optional instance to populate.
     * @return {module:model/RelatedAssetSerializerWithPermission} The populated <code>RelatedAssetSerializerWithPermission</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RelatedAssetSerializerWithPermission();

            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
            if (data.hasOwnProperty('market')) {
                obj['market'] = ApiClient.convertToType(data['market'], 'String');
            }
            if (data.hasOwnProperty('isin')) {
                obj['isin'] = ApiClient.convertToType(data['isin'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('ticker')) {
                obj['ticker'] = ApiClient.convertToType(data['ticker'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('extra_data')) {
                obj['extra_data'] = ApiClient.convertToType(data['extra_data'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * @member {String} uuid
 */
RelatedAssetSerializerWithPermission.prototype['uuid'] = undefined;

/**
 * @member {String} market
 */
RelatedAssetSerializerWithPermission.prototype['market'] = undefined;

/**
 * @member {String} isin
 */
RelatedAssetSerializerWithPermission.prototype['isin'] = undefined;

/**
 * @member {String} currency
 */
RelatedAssetSerializerWithPermission.prototype['currency'] = undefined;

/**
 * @member {String} ticker
 */
RelatedAssetSerializerWithPermission.prototype['ticker'] = undefined;

/**
 * @member {String} name
 */
RelatedAssetSerializerWithPermission.prototype['name'] = undefined;

/**
 * @member {Object.<String, Object>} extra_data
 */
RelatedAssetSerializerWithPermission.prototype['extra_data'] = undefined;






export default RelatedAssetSerializerWithPermission;

