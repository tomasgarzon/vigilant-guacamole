/**
 * Nucoro API
 * No description
 *
 * The version of the OpenAPI document: 4.175.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AllocationList model module.
 * @module model/AllocationList
 * @version 4.175.0
 */
class AllocationList {
    /**
     * Constructs a new <code>AllocationList</code>.
     * @alias module:model/AllocationList
     * @param valuationDate {Date} 
     * @param balance {Number} 
     * @param invested {Number} 
     * @param earnings {Number} 
     * @param cashActive {Number} 
     * @param tradeTotal {Number} 
     * @param performance {Number} 
     */
    constructor(valuationDate, balance, invested, earnings, cashActive, tradeTotal, performance) { 
        
        AllocationList.initialize(this, valuationDate, balance, invested, earnings, cashActive, tradeTotal, performance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, valuationDate, balance, invested, earnings, cashActive, tradeTotal, performance) { 
        obj['valuation_date'] = valuationDate;
        obj['balance'] = balance;
        obj['invested'] = invested;
        obj['earnings'] = earnings;
        obj['cash_active'] = cashActive;
        obj['trade_total'] = tradeTotal;
        obj['performance'] = performance;
    }

    /**
     * Constructs a <code>AllocationList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllocationList} obj Optional instance to populate.
     * @return {module:model/AllocationList} The populated <code>AllocationList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllocationList();

            if (data.hasOwnProperty('valuation_date')) {
                obj['valuation_date'] = ApiClient.convertToType(data['valuation_date'], 'Date');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
            if (data.hasOwnProperty('invested')) {
                obj['invested'] = ApiClient.convertToType(data['invested'], 'Number');
            }
            if (data.hasOwnProperty('earnings')) {
                obj['earnings'] = ApiClient.convertToType(data['earnings'], 'Number');
            }
            if (data.hasOwnProperty('cash_active')) {
                obj['cash_active'] = ApiClient.convertToType(data['cash_active'], 'Number');
            }
            if (data.hasOwnProperty('trade_total')) {
                obj['trade_total'] = ApiClient.convertToType(data['trade_total'], 'Number');
            }
            if (data.hasOwnProperty('performance')) {
                obj['performance'] = ApiClient.convertToType(data['performance'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Date} valuation_date
 */
AllocationList.prototype['valuation_date'] = undefined;

/**
 * @member {Number} balance
 */
AllocationList.prototype['balance'] = undefined;

/**
 * @member {Number} invested
 */
AllocationList.prototype['invested'] = undefined;

/**
 * @member {Number} earnings
 */
AllocationList.prototype['earnings'] = undefined;

/**
 * @member {Number} cash_active
 */
AllocationList.prototype['cash_active'] = undefined;

/**
 * @member {Number} trade_total
 */
AllocationList.prototype['trade_total'] = undefined;

/**
 * @member {Number} performance
 */
AllocationList.prototype['performance'] = undefined;






export default AllocationList;

