/**
 * Nucoro API v2
 *
 * No description
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * Values: pENDING,cREATED,aDVICEREQUESTED,aDVICECOMPLETED,iNPROCESS,pROCESSING,oRDERSGENERATED,oRDERSFILLED,sELLTRADESGENERATED,bUYTRADESGENERATED,pOSITIONSSOLD,cOMPLETED,cANCELLED,eRROR
 */

enum class RebalanceStatusEnum(val value: kotlin.String) {

    @Json(name = "PENDING")
    pENDING("PENDING"),

    @Json(name = "CREATED")
    cREATED("CREATED"),

    @Json(name = "ADVICE_REQUESTED")
    aDVICEREQUESTED("ADVICE_REQUESTED"),

    @Json(name = "ADVICE_COMPLETED")
    aDVICECOMPLETED("ADVICE_COMPLETED"),

    @Json(name = "IN_PROCESS")
    iNPROCESS("IN_PROCESS"),

    @Json(name = "PROCESSING")
    pROCESSING("PROCESSING"),

    @Json(name = "ORDERS_GENERATED")
    oRDERSGENERATED("ORDERS_GENERATED"),

    @Json(name = "ORDERS_FILLED")
    oRDERSFILLED("ORDERS_FILLED"),

    @Json(name = "SELL_TRADES_GENERATED")
    sELLTRADESGENERATED("SELL_TRADES_GENERATED"),

    @Json(name = "BUY_TRADES_GENERATED")
    bUYTRADESGENERATED("BUY_TRADES_GENERATED"),

    @Json(name = "POSITIONS_SOLD")
    pOSITIONSSOLD("POSITIONS_SOLD"),

    @Json(name = "COMPLETED")
    cOMPLETED("COMPLETED"),

    @Json(name = "CANCELLED")
    cANCELLED("CANCELLED"),

    @Json(name = "ERROR")
    eRROR("ERROR");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: Any?): kotlin.String? = if (data is RebalanceStatusEnum) "$data" else null

        /**
         * Returns a valid [RebalanceStatusEnum] for [data], null otherwise.
         */
        fun decode(data: Any?): RebalanceStatusEnum? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

